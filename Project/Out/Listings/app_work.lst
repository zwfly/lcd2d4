C51 COMPILER V9.56.0.0   APP_WORK                                                          08/01/2017 22:22:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_WORK
OBJECT MODULE PLACED IN .\Out\Objects\app_work.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_work.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\in
                    -c;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_work.lst) OBJ
                    -ECT(.\Out\Objects\app_work.obj)

line level    source

   1          /*
   2           * app_work.c
   3           *
   4           *  Created on: 2017Äê7ÔÂ6ÈÕ
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          
  10          #define BEEP_SHORT_TIME  10
  11          #define BEEP_LONG_TIME  30
  12          #define COACH_DELAY_TIME 200
  13          #define CAL_a 2
  14          
  15          const uint8_t Rep_Pull_num[4][2] = { { 10, 20 }, { 20, 25 }, { 30, 30 }, { 50,
  16                          40 } };
  17          
  18          WORK_T g_tWork;
  19          static uint8_t count_NoAction = 0;
  20          static BIT pull_once_flag = 0;
  21          
  22          static void app_work_pro(void);
  23          
  24          void work_Init(void) {
  25   1              g_tWork.mode = E_Simple_metering_mode;
  26   1              g_tWork.reps_mode = '\0';
  27   1              g_tWork.sum = 0;
  28   1              g_tWork.reps_num = 0;
  29   1              g_tWork.pulls_num = 0;
  30   1              g_tWork.cal_num = 0;
  31   1      
  32   1              count_NoAction = 0;
  33   1      }
  34          
  35          void query_work_sum(void) {
  36   1              g_tWork.sum++;
  37   1              if (g_tWork.sum > 10000) {
  38   2                      g_tWork.sum = 0;
  39   2              }
  40   1              pull_once_flag = 1;
  41   1      
  42   1      }
  43          
  44          void app_work_1s_pro(void) {
  45   1              if (count_NoAction < 255) {
  46   2                      count_NoAction++;
  47   2              }
  48   1      
  49   1      }
  50          void app_work_100ms_pro(void) {
  51   1              if (pull_once_flag) {
  52   2                      pull_once_flag = 0;
  53   2                      ///////////////////
C51 COMPILER V9.56.0.0   APP_WORK                                                          08/01/2017 22:22:45 PAGE 2   

  54   2                      app_key_clear_noOps_timeoutCnt();
  55   2                      app_work_pro();
  56   2              }
  57   1      
  58   1      }
  59          
  60          static void app_work_pro(void) {
  61   1              static BIT finish_flag = 0;
  62   1              static BIT reps_num_appear_flag = 0;
  63   1      
  64   1              level = 0;
  65   1              Repeat_Stop();
  66   1      
  67   1              switch (g_tWork.mode) {
  68   2              case E_Simple_metering_mode:
  69   2      
  70   2                      if (g_tWork.sum % 10 == 0) {
  71   3                              BEEP_Start(1, BEEP_LONG_TIME, 1, 1);
  72   3                      } else {
  73   3                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
  74   3                      }
  75   2                      g_tWork.pulls_num = g_tWork.sum;
  76   2                      g_tWork.cal_num = g_tWork.sum * CAL_a;
  77   2      
  78   2                      /********************/
  79   2                      LCD_Show_Pulls_Num(g_tWork.pulls_num);
  80   2                      LCD_Show_CAL_Num(g_tWork.cal_num);
  81   2      
  82   2                      LCD_Clear_REP_Num();
  83   2                      LCD_Clear_REP_ICO();
  84   2                      LCD_Clear_ABCD();
  85   2                      LCD_Clear_QS_ICO();
  86   2                      LCD_Clear_COACH_ICO();
  87   2      
  88   2                      LCD_Show_CAL_ICO();
  89   2                      LCD_Show_Line_up();
  90   2                      break;
  91   2              case E_Quick_start_mode:
  92   2      
  93   2                      if (finish_flag) {
  94   3                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
  95   3                              g_tWork.sum = Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
  96   3                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
  97   3                      } else {
  98   3                              if (g_tWork.sum
  99   3                                              == Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
 100   3                                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1]) {
 101   4                                      finish_flag = 1;
 102   4                                      BEEP_Start(1, 3 * BEEP_SHORT_TIME, 1, 1);
 103   4                              } else {
 104   4                                      if (g_tWork.sum % Rep_Pull_num[g_tWork.reps_mode - 'A'][1]
 105   4                                                      == 0) {
 106   5                                              BEEP_Start(1, BEEP_SHORT_TIME, BEEP_SHORT_TIME, 3);
 107   5                                      } else {
 108   5                                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
 109   5                                      }
 110   4                              }
 111   3                              reps_num_appear_flag = 1;
 112   3                              g_tWork.reps_num = g_tWork.sum
 113   3                                              / Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 114   3                              g_tWork.pulls_num = g_tWork.sum
 115   3                                              % Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
C51 COMPILER V9.56.0.0   APP_WORK                                                          08/01/2017 22:22:45 PAGE 3   

 116   3                              g_tWork.cal_num = g_tWork.sum * CAL_a;
 117   3                      }
 118   2                      LCD_Show_REP_Num(g_tWork.reps_num);
 119   2                      LCD_Show_Pulls_Num(g_tWork.pulls_num);
 120   2                      LCD_Show_CAL_Num(g_tWork.cal_num);
 121   2      
 122   2                      LCD_Show_REP_ICO();
 123   2                      LCD_Show_ABCD(g_tWork.reps_mode);
 124   2      
 125   2                      LCD_Show_QS_ICO();
 126   2                      LCD_Clear_COACH_ICO();
 127   2      
 128   2                      LCD_Show_CAL_ICO();
 129   2                      LCD_Show_Line_up();
 130   2      
 131   2                      break;
 132   2              case E_Coach_mode:
 133   2                      if (finish_flag) {
 134   3                              BEEP_Start(COACH_DELAY_TIME, BEEP_SHORT_TIME, 1, 1);
 135   3                              g_tWork.sum = Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
 136   3                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 137   3                      } else {
 138   3                              if (g_tWork.sum
 139   3                                              == Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
 140   3                                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1]) {
 141   4                                      finish_flag = 1;
 142   4                                      BEEP_Start(1, 3 * BEEP_SHORT_TIME, 1, 1);
 143   4                              } else {
 144   4                                      if (g_tWork.sum % Rep_Pull_num[g_tWork.reps_mode - 'A'][1]
 145   4                                                      == 0) {
 146   5                                              BEEP_Start(1, BEEP_SHORT_TIME, BEEP_SHORT_TIME, 3);
 147   5                                      } else {
 148   5                                              BEEP_Start(COACH_DELAY_TIME, BEEP_SHORT_TIME, 1, 1);
 149   5                                      }
 150   4                              }
 151   3                              reps_num_appear_flag = 1;
 152   3                              g_tWork.reps_num = g_tWork.sum
 153   3                                              / Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 154   3                              g_tWork.pulls_num = g_tWork.sum
 155   3                                              % Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 156   3                              g_tWork.cal_num = g_tWork.sum * CAL_a;
 157   3                      }
 158   2                      LCD_Show_REP_Num(g_tWork.reps_num);
 159   2                      LCD_Show_Pulls_Num(g_tWork.pulls_num);
 160   2                      LCD_Show_CAL_Num(g_tWork.cal_num);
 161   2      
 162   2                      LCD_Show_REP_ICO();
 163   2                      LCD_Show_ABCD(g_tWork.reps_mode);
 164   2      
 165   2                      LCD_Clear_QS_ICO();
 166   2                      LCD_Show_COACH_ICO();
 167   2      
 168   2                      LCD_Show_CAL_ICO();
 169   2                      LCD_Show_Line_up();
 170   2      
 171   2                      break;
 172   2              }
 173   1      
 174   1      #if 0
                      LCD_Show_Pulls_Num(g_tWork.pulls_num);
                      LCD_Show_CAL_Num(g_tWork.cal_num);
                      if (reps_num_appear_flag) {
C51 COMPILER V9.56.0.0   APP_WORK                                                          08/01/2017 22:22:45 PAGE 4   

                              LCD_Show_REP_Num(g_tWork.reps_num);
                      } else {
                              LCD_Clear_REP_Num();
                      }
              #endif
 183   1      }
 184          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1051    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BSP_DISPLAY
OBJECT MODULE PLACED IN .\Out\Objects\bsp_display.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_display.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common
                    -\inc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_display.ls
                    -t) OBJECT(.\Out\Objects\bsp_display.obj)

line level    source

   1          /*
   2           * bsp_display.c
   3           *
   4           *  Created on: 2017Äê6ÔÂ26ÈÕ
   5           *      Author: fly
   6           */
   7          
   8          #include "bsp.h"
   9          
  10          #define COM0    0x01
  11          #define COM1    0x02
  12          #define COM2    0x04
  13          #define COM3    0x08
  14          
  15          void LCD_display_InitHard(void) {
  16   1      
  17   1      #if 1
  18   1              P0M2 = 0x00;
  19   1              P0M1 = 0x80;
  20   1      
  21   1              P1M2 = 0x00;
  22   1              P1M1 = 0xFF;
  23   1      
  24   1              P2M2 = 0x00;
  25   1              P2M1 = 0xFF;
  26   1      
  27   1              P3M2 = 0x00;
  28   1              P3M1 = 0x0F;
  29   1      
  30   1              P4M2 = 0x00;
  31   1              P4M1 = 0xFF;
  32   1      
  33   1              P5M2 = 0x00;
  34   1              P5M1 = 0xFF;
  35   1      #endif
  36   1      
  37   1              //LCDCON = 0x40;      //;VLCD = 0.9VDD (VDD = 3.3V, VLCD = 3.0V)
  38   1              LCDCON = 0x00;                  //;1/4 duty, 1/3 bias, 150kO resistor ladder
  39   1      
  40   1              LCDCLK = 0x04;      //
  41   1      
  42   1              //enable seg pin
  43   1              LCDSEG0 = 0xFF;
  44   1              LCDSEG1 = 0xFF;
  45   1              LCDSEG2 = 0xFF;
  46   1              LCDSEG3 = 0xFF;
  47   1      
  48   1              LCDCON |= SET_BIT7;  //LCDEN = 1
  49   1      
  50   1              LCD_Clear_All();
  51   1      }
  52          
  53          void LCD_Clear_All(void) {
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 2   

  54   1              uint8_t i;
  55   1              for (i = 0; i < 32; i++) {
  56   2                      LCDPTR = i;
  57   2                      LCDDAT = 0;
  58   2              }
  59   1      }
  60          
  61          void LCD_Clear_LED_ICO(void) {
  62   1              LCDPTR = 18;
  63   1              LCDDAT &= ~ COM3;
  64   1      }
  65          void LCD_Show_LED_ICO(void) {
  66   1              LCDPTR = 18;
  67   1              LCDDAT |= COM3;
  68   1      }
  69          void LCD_Clear_FM_ICO(void) {
  70   1              LCDPTR = 14;
  71   1              LCDDAT &= ~ COM3;
  72   1      }
  73          void LCD_Show_FM_ICO(void) {
  74   1              LCDPTR = 14;
  75   1              LCDDAT |= COM3;
  76   1      }
  77          void LCD_Clear_BLUETooTH_ICO(void) {
  78   1              LCDPTR = 11;
  79   1              LCDDAT &= ~ COM3;
  80   1      }
  81          void LCD_Show_BLUETooTH_ICO(void) {
  82   1              LCDPTR = 11;
  83   1              LCDDAT |= COM3;
  84   1      }
  85          void LCD_Clear_AUX_ICO(void) {
  86   1              LCDPTR = 10;
  87   1              LCDDAT &= ~COM3;
  88   1      }
  89          void LCD_Show_AUX_ICO(void) {
  90   1              LCDPTR = 10;
  91   1              LCDDAT |= COM3;
  92   1      }
  93          void LCD_Clear_USB_ICO(void) {
  94   1              LCDPTR = 3;
  95   1              LCDDAT &= ~ COM3;
  96   1      }
  97          void LCD_Show_USB_ICO(void) {
  98   1              LCDPTR = 3;
  99   1              LCDDAT |= COM3;
 100   1      }
 101          void LCD_Clear_MHZ_ICO(void) {
 102   1              LCDPTR = 2;
 103   1              LCDDAT &= ~ COM3;
 104   1      }
 105          void LCD_Show_MHZ_ICO(void) {
 106   1              LCDPTR = 2;
 107   1              LCDDAT |= COM3;
 108   1      }
 109          void LCD_Clear_BAZOOKA_ICO(void) {
 110   1              LCDPTR = 15;
 111   1              LCDDAT &= ~ COM3;
 112   1      }
 113          void LCD_Show_BAZOOKA_ICO(void) {
 114   1              LCDPTR = 15;
 115   1              LCDDAT |= COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 3   

 116   1      }
 117          /*
 118           * Ã°ºÅ   :
 119           * */
 120          void LCD_Clear_upColon_ICO(void) {
 121   1              LCDPTR = 7;
 122   1              LCDDAT &= ~ COM3;
 123   1      }
 124          void LCD_Show_upColon_ICO(void) {
 125   1              LCDPTR = 7;
 126   1              LCDDAT |= COM3;
 127   1      }
 128          void LCD_Clear_downColon_ICO(void) {
 129   1              LCDPTR = 6;
 130   1              LCDDAT &= ~ COM3;
 131   1      }
 132          void LCD_Show_downColon_ICO(void) {
 133   1              LCDPTR = 6;
 134   1              LCDDAT |= COM3;
 135   1      }
 136          
 137          void LCD_Clear_mi(uint8_t n) {
 138   1              switch (n) {
 139   2              case 0:
 140   2                      LCDPTR = 31;
 141   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 142   2      
 143   2                      LCDPTR = 30;
 144   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 145   2      
 146   2                      LCDPTR = 29;
 147   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 148   2      
 149   2                      LCDPTR = 28;
 150   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 151   2                      break;
 152   2              case 1:
 153   2                      LCDPTR = 27;
 154   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 155   2      
 156   2                      LCDPTR = 26;
 157   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 158   2      
 159   2                      LCDPTR = 25;
 160   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 161   2      
 162   2                      LCDPTR = 24;
 163   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 164   2                      break;
 165   2              case 2:
 166   2                      LCDPTR = 23;
 167   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 168   2      
 169   2                      LCDPTR = 22;
 170   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 171   2      
 172   2                      LCDPTR = 21;
 173   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 174   2      
 175   2                      LCDPTR = 20;
 176   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 177   2                      break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 4   

 178   2              case 3:
 179   2                      LCDPTR = 19;
 180   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 181   2      
 182   2                      LCDPTR = 18;
 183   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 184   2      
 185   2                      LCDPTR = 17;
 186   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 187   2      
 188   2                      LCDPTR = 16;
 189   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 190   2                      break;
 191   2              case 4:
 192   2                      LCDPTR = 15;
 193   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 194   2      
 195   2                      LCDPTR = 14;
 196   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 197   2      
 198   2                      LCDPTR = 13;
 199   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 200   2      
 201   2                      LCDPTR = 12;
 202   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 203   2                      break;
 204   2              case 5:
 205   2                      LCDPTR = 11;
 206   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 207   2      
 208   2                      LCDPTR = 10;
 209   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 210   2      
 211   2                      LCDPTR = 9;
 212   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 213   2      
 214   2                      LCDPTR = 8;
 215   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 216   2                      break;
 217   2              case 6:
 218   2                      LCDPTR = 7;
 219   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 220   2      
 221   2                      LCDPTR = 6;
 222   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 223   2      
 224   2                      LCDPTR = 5;
 225   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 226   2      
 227   2                      LCDPTR = 4;
 228   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 229   2                      break;
 230   2              case 7:
 231   2                      LCDPTR = 3;
 232   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 233   2      
 234   2                      LCDPTR = 2;
 235   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 236   2      
 237   2                      LCDPTR = 1;
 238   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 239   2      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 5   

 240   2                      LCDPTR = 0;
 241   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 242   2                      break;
 243   2              }
 244   1      }
 245          void LCD_Clear_mi_all(void) {
 246   1              uint8_t i = 0;
 247   1              for (i = 0; i < 8; i++) {
 248   2                      LCD_Clear_mi(i);
 249   2              }
 250   1      }
 251          void LCD_Show_mi_(uint8_t n, char c) {
 252   1              if (n > 7) {
 253   2                      return;
 254   2              }
 255   1      
 256   1              switch (c) {
 257   2              case '0':
 258   2                      LCDPTR = 31 - n * 4;
 259   2                      LCDDAT = COM0 + COM2;
 260   2      
 261   2                      LCDPTR = 30 - n * 4;
 262   2                      LCDDAT = COM0 + COM2;
 263   2      
 264   2                      LCDPTR = 29 - n * 4;
 265   2                      LCDDAT = COM0 + COM3;
 266   2      
 267   2                      LCDPTR = 28 - n * 4;
 268   2                      LCDDAT = COM0 + COM3;
 269   2                      break;
 270   2              case '1':
 271   2                      LCDPTR = 31 - n * 4;
 272   2                      LCDDAT = 0;
 273   2      
 274   2                      LCDPTR = 30 - n * 4;
 275   2                      LCDDAT = 0;
 276   2      
 277   2                      LCDPTR = 29 - n * 4;
 278   2                      LCDDAT = COM0;
 279   2      
 280   2                      LCDPTR = 28 - n * 4;
 281   2                      LCDDAT = COM0 + COM3;
 282   2                      break;
 283   2              case '2':
 284   2                      LCDPTR = 31 - n * 4;
 285   2                      LCDDAT = COM1 + COM2;
 286   2      
 287   2                      LCDPTR = 30 - n * 4;
 288   2                      LCDDAT = COM0;
 289   2      
 290   2                      LCDPTR = 29 - n * 4;
 291   2                      LCDDAT = COM3;
 292   2      
 293   2                      LCDPTR = 28 - n * 4;
 294   2                      LCDDAT = COM0 + COM1;
 295   2                      break;
 296   2              case '3':
 297   2                      LCDPTR = 31 - n * 4;
 298   2                      LCDDAT = COM1;
 299   2      
 300   2                      LCDPTR = 30 - n * 4;
 301   2                      LCDDAT = COM0;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 6   

 302   2      
 303   2                      LCDPTR = 29 - n * 4;
 304   2                      LCDDAT = COM3;
 305   2      
 306   2                      LCDPTR = 28 - n * 4;
 307   2                      LCDDAT = COM0 + COM1 + COM3;
 308   2                      break;
 309   2              case '4':
 310   2                      LCDPTR = 31 - n * 4;
 311   2                      LCDDAT = COM0 + COM1;
 312   2      
 313   2                      LCDPTR = 30 - n * 4;
 314   2                      LCDDAT = 0;
 315   2      
 316   2                      LCDPTR = 29 - n * 4;
 317   2                      LCDDAT = 0;
 318   2      
 319   2                      LCDPTR = 28 - n * 4;
 320   2                      LCDDAT = COM0 + COM1 + COM3;
 321   2                      break;
 322   2              case '5':
 323   2                      LCDPTR = 31 - n * 4;
 324   2                      LCDDAT = COM0 + COM1;
 325   2      
 326   2                      LCDPTR = 30 - n * 4;
 327   2                      LCDDAT = COM0;
 328   2      
 329   2                      LCDPTR = 29 - n * 4;
 330   2                      LCDDAT = COM3;
 331   2      
 332   2                      LCDPTR = 28 - n * 4;
 333   2                      LCDDAT = COM1 + COM3;
 334   2                      break;
 335   2              case '6':
 336   2                      LCDPTR = 31 - n * 4;
 337   2                      LCDDAT = COM0 + COM1 + COM2;
 338   2      
 339   2                      LCDPTR = 30 - n * 4;
 340   2                      LCDDAT = COM0;
 341   2      
 342   2                      LCDPTR = 29 - n * 4;
 343   2                      LCDDAT = COM3;
 344   2      
 345   2                      LCDPTR = 28 - n * 4;
 346   2                      LCDDAT = COM1 + COM3;
 347   2                      break;
 348   2              case '7':
 349   2                      LCDPTR = 31 - n * 4;
 350   2                      LCDDAT = 0;
 351   2      
 352   2                      LCDPTR = 30 - n * 4;
 353   2                      LCDDAT = COM0;
 354   2      
 355   2                      LCDPTR = 29 - n * 4;
 356   2                      LCDDAT = 0;
 357   2      
 358   2                      LCDPTR = 28 - n * 4;
 359   2                      LCDDAT = COM0 + COM3;
 360   2                      break;
 361   2              case '8':
 362   2                      LCDPTR = 31 - n * 4;
 363   2                      LCDDAT = COM0 + COM1 + COM2;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 7   

 364   2      
 365   2                      LCDPTR = 30 - n * 4;
 366   2                      LCDDAT = COM0;
 367   2      
 368   2                      LCDPTR = 29 - n * 4;
 369   2                      LCDDAT = COM3;
 370   2      
 371   2                      LCDPTR = 28 - n * 4;
 372   2                      LCDDAT = COM0 + COM1 + COM3;
 373   2                      break;
 374   2              case '9':
 375   2                      LCDPTR = 31 - n * 4;
 376   2                      LCDDAT = COM0 + COM1;
 377   2      
 378   2                      LCDPTR = 30 - n * 4;
 379   2                      LCDDAT = COM0;
 380   2      
 381   2                      LCDPTR = 29 - n * 4;
 382   2                      LCDDAT = COM3;
 383   2      
 384   2                      LCDPTR = 28 - n * 4;
 385   2                      LCDDAT = COM0 + COM1 + COM3;
 386   2                      break;
 387   2              case ' ':
 388   2                      LCD_Clear_mi(n);
 389   2                      break;
 390   2              case 'A':
 391   2                      LCDPTR = 31 - n * 4;
 392   2                      LCDDAT = COM0 + COM1 + COM2;
 393   2      
 394   2                      LCDPTR = 30 - n * 4;
 395   2                      LCDDAT = COM0;
 396   2      
 397   2                      LCDPTR = 29 - n * 4;
 398   2                      LCDDAT = 0;
 399   2      
 400   2                      LCDPTR = 28 - n * 4;
 401   2                      LCDDAT = COM0 + COM1 + COM3;
 402   2                      break;
 403   2              case 'B':
 404   2                      LCDPTR = 31 - n * 4;
 405   2                      LCDDAT = 0;
 406   2      
 407   2                      LCDPTR = 30 - n * 4;
 408   2                      LCDDAT = COM0;
 409   2      
 410   2                      LCDPTR = 29 - n * 4;
 411   2                      LCDDAT = COM1 + COM2 + COM3;
 412   2      
 413   2                      LCDPTR = 28 - n * 4;
 414   2                      LCDDAT = COM0 + COM1 + COM3;
 415   2                      break;
 416   2              case 'C':
 417   2                      LCDPTR = 31 - n * 4;
 418   2                      LCDDAT = COM0 + COM2;
 419   2      
 420   2                      LCDPTR = 30 - n * 4;
 421   2                      LCDDAT = COM0;
 422   2      
 423   2                      LCDPTR = 29 - n * 4;
 424   2                      LCDDAT = COM3;
 425   2      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 8   

 426   2                      LCDPTR = 28 - n * 4;
 427   2                      LCDDAT = 0;
 428   2                      break;
 429   2              case 'D':
 430   2                      LCDPTR = 31 - n * 4;
 431   2                      LCDDAT = 0;
 432   2      
 433   2                      LCDPTR = 30 - n * 4;
 434   2                      LCDDAT = COM0;
 435   2      
 436   2                      LCDPTR = 29 - n * 4;
 437   2                      LCDDAT = COM1 + COM2 + COM3;
 438   2      
 439   2                      LCDPTR = 28 - n * 4;
 440   2                      LCDDAT = COM0 + COM3;
 441   2                      break;
 442   2              case 'E':
 443   2                      LCDPTR = 31 - n * 4;
 444   2                      LCDDAT = COM0 + COM1 + COM2;
 445   2      
 446   2                      LCDPTR = 30 - n * 4;
 447   2                      LCDDAT = COM0;
 448   2      
 449   2                      LCDPTR = 29 - n * 4;
 450   2                      LCDDAT = COM3;
 451   2      
 452   2                      LCDPTR = 28 - n * 4;
 453   2                      LCDDAT = COM1;
 454   2                      break;
 455   2              case 'F':
 456   2                      LCDPTR = 31 - n * 4;
 457   2                      LCDDAT = COM0 + COM1 + COM2;
 458   2      
 459   2                      LCDPTR = 30 - n * 4;
 460   2                      LCDDAT = COM0;
 461   2      
 462   2                      LCDPTR = 29 - n * 4;
 463   2                      LCDDAT = 0;
 464   2      
 465   2                      LCDPTR = 28 - n * 4;
 466   2                      LCDDAT = COM1;
 467   2                      break;
 468   2              case 'G':
 469   2                      LCDPTR = 31 - n * 4;
 470   2                      LCDDAT = COM0 + COM2;
 471   2      
 472   2                      LCDPTR = 30 - n * 4;
 473   2                      LCDDAT = COM0;
 474   2      
 475   2                      LCDPTR = 29 - n * 4;
 476   2                      LCDDAT = COM3;
 477   2      
 478   2                      LCDPTR = 28 - n * 4;
 479   2                      LCDDAT = COM1 + COM3;
 480   2                      break;
 481   2              case 'H':
 482   2                      LCDPTR = 31 - n * 4;
 483   2                      LCDDAT = COM0 + COM1 + COM2;
 484   2      
 485   2                      LCDPTR = 30 - n * 4;
 486   2                      LCDDAT = 0;
 487   2      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 9   

 488   2                      LCDPTR = 29 - n * 4;
 489   2                      LCDDAT = 0;
 490   2      
 491   2                      LCDPTR = 28 - n * 4;
 492   2                      LCDDAT = COM0 + COM1 + COM3;
 493   2                      break;
 494   2              case 'I':
 495   2      
 496   2                      break;
 497   2              case 'J':
 498   2      
 499   2                      break;
 500   2              case 'K':
 501   2      
 502   2                      break;
 503   2              case 'L':
 504   2      
 505   2                      break;
 506   2              case 'M':
 507   2      
 508   2                      break;
 509   2              case 'N':
 510   2      
 511   2                      break;
 512   2              case 'O':
 513   2      
 514   2                      break;
 515   2              case 'P':
 516   2      
 517   2                      break;
 518   2              case 'Q':
 519   2      
 520   2                      break;
 521   2              case 'R':
 522   2      
 523   2                      break;
 524   2              case 'S':
 525   2      
 526   2                      break;
 527   2              case 'T':
 528   2      
 529   2                      break;
 530   2              case 'U':
 531   2      
 532   2                      break;
 533   2              case 'V':
 534   2      
 535   2                      break;
 536   2              case 'W':
 537   2      
 538   2                      break;
 539   2              case 'X':
 540   2      
 541   2                      break;
 542   2              case 'Y':
 543   2      
 544   2                      break;
 545   2              case 'Z':
 546   2      
 547   2                      break;
 548   2              }
 549   1      }
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 10  

 550          void LCD_Show_mi(uint8_t n, char c) {
 551   1              switch (n) {
 552   2              case 0: {
 553   3                      switch (c) {
 554   4                      case '0':
 555   4                              LCDPTR = 31;
 556   4                              LCDDAT = COM0 + COM2;
 557   4      
 558   4                              LCDPTR = 30;
 559   4                              LCDDAT = COM0 + COM2;
 560   4      
 561   4                              LCDPTR = 29;
 562   4                              LCDDAT = COM0 + COM3;
 563   4      
 564   4                              LCDPTR = 28;
 565   4                              LCDDAT = COM0 + COM3;
 566   4                              break;
 567   4                      case '1':
 568   4                              LCDPTR = 31;
 569   4                              LCDDAT = 0;
 570   4      
 571   4                              LCDPTR = 30;
 572   4                              LCDDAT = 0;
 573   4      
 574   4                              LCDPTR = 29;
 575   4                              LCDDAT = COM0;
 576   4      
 577   4                              LCDPTR = 28;
 578   4                              LCDDAT = COM0 + COM3;
 579   4                              break;
 580   4                      case '2':
 581   4                              LCDPTR = 31;
 582   4                              LCDDAT = COM1 + COM2;
 583   4      
 584   4                              LCDPTR = 30;
 585   4                              LCDDAT = COM0;
 586   4      
 587   4                              LCDPTR = 29;
 588   4                              LCDDAT = COM3;
 589   4      
 590   4                              LCDPTR = 28;
 591   4                              LCDDAT = COM0 + COM1;
 592   4                              break;
 593   4                      case '3':
 594   4                              LCDPTR = 31;
 595   4                              LCDDAT = COM1;
 596   4      
 597   4                              LCDPTR = 30;
 598   4                              LCDDAT = COM0;
 599   4      
 600   4                              LCDPTR = 29;
 601   4                              LCDDAT = COM3;
 602   4      
 603   4                              LCDPTR = 28;
 604   4                              LCDDAT = COM0 + COM1 + COM3;
 605   4                              break;
 606   4                      case '4':
 607   4                              LCDPTR = 31;
 608   4                              LCDDAT = COM0 + COM1;
 609   4      
 610   4                              LCDPTR = 30;
 611   4                              LCDDAT = 0;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 11  

 612   4      
 613   4                              LCDPTR = 29;
 614   4                              LCDDAT = 0;
 615   4      
 616   4                              LCDPTR = 28;
 617   4                              LCDDAT = COM0 + COM1 + COM3;
 618   4                              break;
 619   4                      case '5':
 620   4                              LCDPTR = 31;
 621   4                              LCDDAT = COM0 + COM1;
 622   4      
 623   4                              LCDPTR = 30;
 624   4                              LCDDAT = COM0;
 625   4      
 626   4                              LCDPTR = 29;
 627   4                              LCDDAT = COM3;
 628   4      
 629   4                              LCDPTR = 28;
 630   4                              LCDDAT = COM1 + COM3;
 631   4                              break;
 632   4                      case '6':
 633   4                              LCDPTR = 31;
 634   4                              LCDDAT = COM0 + COM1 + COM2;
 635   4      
 636   4                              LCDPTR = 30;
 637   4                              LCDDAT = COM0;
 638   4      
 639   4                              LCDPTR = 29;
 640   4                              LCDDAT = COM3;
 641   4      
 642   4                              LCDPTR = 28;
 643   4                              LCDDAT = COM1 + COM3;
 644   4                              break;
 645   4                      case '7':
 646   4                              LCDPTR = 31;
 647   4                              LCDDAT = 0;
 648   4      
 649   4                              LCDPTR = 30;
 650   4                              LCDDAT = COM0;
 651   4      
 652   4                              LCDPTR = 29;
 653   4                              LCDDAT = 0;
 654   4      
 655   4                              LCDPTR = 28;
 656   4                              LCDDAT = COM0 + COM3;
 657   4                              break;
 658   4                      case '8':
 659   4                              LCDPTR = 31;
 660   4                              LCDDAT = COM0 + COM1 + COM2;
 661   4      
 662   4                              LCDPTR = 30;
 663   4                              LCDDAT = COM0;
 664   4      
 665   4                              LCDPTR = 29;
 666   4                              LCDDAT = COM3;
 667   4      
 668   4                              LCDPTR = 28;
 669   4                              LCDDAT = COM0 + COM1 + COM3;
 670   4                              break;
 671   4                      case '9':
 672   4                              LCDPTR = 31;
 673   4                              LCDDAT = COM0 + COM1;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 12  

 674   4      
 675   4                              LCDPTR = 30;
 676   4                              LCDDAT = COM0;
 677   4      
 678   4                              LCDPTR = 29;
 679   4                              LCDDAT = COM3;
 680   4      
 681   4                              LCDPTR = 28;
 682   4                              LCDDAT = COM0 + COM1 + COM3;
 683   4                              break;
 684   4                      case ' ':
 685   4                              LCD_Clear_mi(n);
 686   4                              break;
 687   4                      case 'A':
 688   4      
 689   4                              break;
 690   4                      case 'B':
 691   4      
 692   4                              break;
 693   4                      case 'C':
 694   4      
 695   4                              break;
 696   4                      case 'D':
 697   4      
 698   4                              break;
 699   4                      case 'E':
 700   4      
 701   4                              break;
 702   4                      case 'F':
 703   4      
 704   4                              break;
 705   4                      case 'G':
 706   4      
 707   4                              break;
 708   4                      }
 709   3              }
 710   2                      break;
 711   2              case 1: {
 712   3                      switch (c) {
 713   4                      case '0':
 714   4                              LCDPTR = 27;
 715   4                              LCDDAT = COM0 + COM2;
 716   4      
 717   4                              LCDPTR = 26;
 718   4                              LCDDAT = COM0 + COM2;
 719   4      
 720   4                              LCDPTR = 25;
 721   4                              LCDDAT = COM0 + COM3;
 722   4      
 723   4                              LCDPTR = 24;
 724   4                              LCDDAT = COM0 + COM3;
 725   4                              break;
 726   4                      case '1':
 727   4                              LCDPTR = 27;
 728   4                              LCDDAT = 0;
 729   4      
 730   4                              LCDPTR = 26;
 731   4                              LCDDAT = 0;
 732   4      
 733   4                              LCDPTR = 25;
 734   4                              LCDDAT = COM0;
 735   4      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 13  

 736   4                              LCDPTR = 24;
 737   4                              LCDDAT = COM0 + COM3;
 738   4                              break;
 739   4                      case '2':
 740   4                              LCDPTR = 27;
 741   4                              LCDDAT = COM1 + COM2;
 742   4      
 743   4                              LCDPTR = 26;
 744   4                              LCDDAT = COM0;
 745   4      
 746   4                              LCDPTR = 25;
 747   4                              LCDDAT = COM3;
 748   4      
 749   4                              LCDPTR = 24;
 750   4                              LCDDAT = COM0 + COM1;
 751   4                              break;
 752   4                      case '3':
 753   4                              LCDPTR = 27;
 754   4                              LCDDAT = COM1;
 755   4      
 756   4                              LCDPTR = 26;
 757   4                              LCDDAT = COM0;
 758   4      
 759   4                              LCDPTR = 25;
 760   4                              LCDDAT = COM3;
 761   4      
 762   4                              LCDPTR = 24;
 763   4                              LCDDAT = COM0 + COM1 + COM3;
 764   4                              break;
 765   4                      case '4':
 766   4                              LCDPTR = 27;
 767   4                              LCDDAT = COM0 + COM1;
 768   4      
 769   4                              LCDPTR = 26;
 770   4                              LCDDAT = 0;
 771   4      
 772   4                              LCDPTR = 25;
 773   4                              LCDDAT = 0;
 774   4      
 775   4                              LCDPTR = 24;
 776   4                              LCDDAT = COM0 + COM1 + COM3;
 777   4                              break;
 778   4                      case '5':
 779   4                              LCDPTR = 27;
 780   4                              LCDDAT = COM0 + COM1;
 781   4      
 782   4                              LCDPTR = 26;
 783   4                              LCDDAT = COM0;
 784   4      
 785   4                              LCDPTR = 25;
 786   4                              LCDDAT = COM3;
 787   4      
 788   4                              LCDPTR = 24;
 789   4                              LCDDAT = COM1 + COM3;
 790   4                              break;
 791   4                      case '6':
 792   4                              LCDPTR = 27;
 793   4                              LCDDAT = COM0 + COM1 + COM2;
 794   4      
 795   4                              LCDPTR = 26;
 796   4                              LCDDAT = COM0;
 797   4      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 14  

 798   4                              LCDPTR = 25;
 799   4                              LCDDAT = COM3;
 800   4      
 801   4                              LCDPTR = 24;
 802   4                              LCDDAT = COM1 + COM3;
 803   4                              break;
 804   4                      case '7':
 805   4                              LCDPTR = 27;
 806   4                              LCDDAT = 0;
 807   4      
 808   4                              LCDPTR = 26;
 809   4                              LCDDAT = COM0;
 810   4      
 811   4                              LCDPTR = 25;
 812   4                              LCDDAT = 0;
 813   4      
 814   4                              LCDPTR = 24;
 815   4                              LCDDAT = COM0 + COM3;
 816   4                              break;
 817   4                      case '8':
 818   4                              LCDPTR = 27;
 819   4                              LCDDAT = COM0 + COM1 + COM2;
 820   4      
 821   4                              LCDPTR = 26;
 822   4                              LCDDAT = COM0;
 823   4      
 824   4                              LCDPTR = 25;
 825   4                              LCDDAT = COM3;
 826   4      
 827   4                              LCDPTR = 24;
 828   4                              LCDDAT = COM0 + COM1 + COM3;
 829   4                              break;
 830   4                      case '9':
 831   4                              LCDPTR = 27;
 832   4                              LCDDAT = COM0 + COM1;
 833   4      
 834   4                              LCDPTR = 26;
 835   4                              LCDDAT = COM0;
 836   4      
 837   4                              LCDPTR = 25;
 838   4                              LCDDAT = COM3;
 839   4      
 840   4                              LCDPTR = 24;
 841   4                              LCDDAT = COM0 + COM1 + COM3;
 842   4                              break;
 843   4                      case ' ':
 844   4                              LCD_Clear_mi(n);
 845   4                              break;
 846   4                      }
 847   3              }
 848   2                      break;
 849   2              case 2:
 850   2                      break;
 851   2              case 3:
 852   2                      break;
 853   2              case 4:
 854   2                      break;
 855   2              case 5:
 856   2                      break;
 857   2              case 6:
 858   2                      break;
 859   2              case 7:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 15  

 860   2                      break;
 861   2              }
 862   1      }
 863          
 864          void LCD_Show_REP_Num(uint8_t num) {
 865   1              uint8_t ge;
 866   1              uint8_t shi;
 867   1      
 868   1              if (num > 99) {
 869   2                      return;
 870   2              }
 871   1      
 872   1              shi = num / 10;
 873   1              ge = num % 10;
 874   1              if (num > 9) {
 875   2      //              set_SEG14EN;
 876   2      //              set_SEG15EN;
 877   2                      switch (shi) {
 878   3                      case 0:
 879   3                              LCDPTR = 14;
 880   3                              LCDDAT = COM1 + COM3;
 881   3      
 882   3                              LCDPTR = 15;
 883   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 884   3                              break;
 885   3                      case 1:
 886   3                              LCDPTR = 14;
 887   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 888   3      
 889   3                              LCDPTR = 15;
 890   3                              LCDDAT = COM1 + COM2;
 891   3                              break;
 892   3                      case 2:
 893   3                              LCDPTR = 14;
 894   3                              LCDDAT = COM2 + COM3;
 895   3      
 896   3                              LCDPTR = 15;
 897   3                              LCDDAT = COM0 + COM1 + COM3;
 898   3                              break;
 899   3                      case 3:
 900   3                              LCDPTR = 14;
 901   3                              LCDDAT = COM2;
 902   3      
 903   3                              LCDPTR = 15;
 904   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 905   3                              break;
 906   3                      case 4:
 907   3                              LCDPTR = 14;
 908   3                              LCDDAT = COM1 + COM2;
 909   3      
 910   3                              LCDPTR = 15;
 911   3                              LCDDAT = COM1 + COM2;
 912   3                              break;
 913   3                      case 5:
 914   3                              LCDPTR = 14;
 915   3                              LCDDAT = COM1 + COM2;
 916   3      
 917   3                              LCDPTR = 15;
 918   3                              LCDDAT = COM0 + COM2 + COM3;
 919   3                              break;
 920   3                      case 6:
 921   3                              LCDPTR = 14;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 16  

 922   3                              LCDDAT = COM1 + COM2 + COM3;
 923   3      
 924   3                              LCDPTR = 15;
 925   3                              LCDDAT = COM0 + COM2 + COM3;
 926   3                              break;
 927   3                      case 7:
 928   3                              LCDPTR = 14;
 929   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 930   3      
 931   3                              LCDPTR = 15;
 932   3                              LCDDAT = COM0 + COM1 + COM2;
 933   3                              break;
 934   3                      case 8:
 935   3                              LCDPTR = 14;
 936   3                              LCDDAT = COM1 + COM2 + COM3;
 937   3      
 938   3                              LCDPTR = 15;
 939   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 940   3                              break;
 941   3                      case 9:
 942   3                              LCDPTR = 14;
 943   3                              LCDDAT = COM1 + COM2;
 944   3      
 945   3                              LCDPTR = 15;
 946   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 947   3                              break;
 948   3                      }
 949   2              } else {
 950   2      //              clr_SEG14EN;
 951   2      //              clr_SEG15EN;
 952   2      
 953   2                      LCDPTR = 14;
 954   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 955   2      //              LCDDAT = COM0 + COM1 + COM2 + COM3;
 956   2      
 957   2                      LCDPTR = 15;
 958   2                      LCDDAT = 0;
 959   2      //              LCDDAT = COM0 + COM1 + COM2 + COM3;
 960   2              }
 961   1      //      set_SEG16EN;
 962   1      //      set_SEG17EN;
 963   1              switch (ge) {
 964   2              case 0:
 965   2                      LCDPTR = 16;
 966   2                      LCDDAT = COM1 + COM3;
 967   2      
 968   2                      LCDPTR = 17;
 969   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 970   2                      break;
 971   2              case 1:
 972   2                      LCDPTR = 16;
 973   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 974   2      
 975   2                      LCDPTR = 17;
 976   2                      LCDDAT = COM1 + COM2;
 977   2                      break;
 978   2              case 2:
 979   2                      LCDPTR = 16;
 980   2                      LCDDAT = COM2 + COM3;
 981   2      
 982   2                      LCDPTR = 17;
 983   2                      LCDDAT = COM0 + COM1 + COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 17  

 984   2                      break;
 985   2              case 3:
 986   2                      LCDPTR = 16;
 987   2                      LCDDAT = COM2;
 988   2      
 989   2                      LCDPTR = 17;
 990   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 991   2                      break;
 992   2              case 4:
 993   2                      LCDPTR = 16;
 994   2                      LCDDAT = COM1 + COM2;
 995   2      
 996   2                      LCDPTR = 17;
 997   2                      LCDDAT = COM1 + COM2;
 998   2                      break;
 999   2              case 5:
1000   2                      LCDPTR = 16;
1001   2                      LCDDAT = COM1 + COM2;
1002   2      
1003   2                      LCDPTR = 17;
1004   2                      LCDDAT = COM0 + COM2 + COM3;
1005   2                      break;
1006   2              case 6:
1007   2                      LCDPTR = 16;
1008   2                      LCDDAT = COM1 + COM2 + COM3;
1009   2      
1010   2                      LCDPTR = 17;
1011   2                      LCDDAT = COM0 + COM2 + COM3;
1012   2                      break;
1013   2              case 7:
1014   2                      LCDPTR = 16;
1015   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1016   2      
1017   2                      LCDPTR = 17;
1018   2                      LCDDAT = COM0 + COM1 + COM2;
1019   2                      break;
1020   2              case 8:
1021   2                      LCDPTR = 16;
1022   2                      LCDDAT = COM1 + COM2 + COM3;
1023   2      
1024   2                      LCDPTR = 17;
1025   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1026   2                      break;
1027   2              case 9:
1028   2                      LCDPTR = 16;
1029   2                      LCDDAT = COM1 + COM2;
1030   2      
1031   2                      LCDPTR = 17;
1032   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1033   2                      break;
1034   2              }
1035   1      }
1036          void LCD_Clear_ABCD(void) {
1037   1      //      clr_SEG18EN;
1038   1              LCDPTR = 18;
1039   1              LCDDAT = 0;
1040   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
1041   1      }
1042          void LCD_Show_ABCD_all(void) {
1043   1      //      set_SEG18EN;
1044   1              LCDPTR = 18;
1045   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 18  

1046   1      }
1047          void LCD_Show_ABCD(char c) {
1048   1      //      set_SEG18EN;
1049   1              LCDPTR = 18;
1050   1      
1051   1              switch (c) {
1052   2              case 'A':
1053   2                      LCDDAT = COM0;
1054   2                      break;
1055   2              case 'B':
1056   2                      LCDDAT = COM1;
1057   2                      break;
1058   2              case 'C':
1059   2                      LCDDAT = COM2;
1060   2                      break;
1061   2              case 'D':
1062   2                      LCDDAT = COM3;
1063   2                      break;
1064   2              default:
1065   2      //              LCDPTR = 18;
1066   2      //              LCDDAT = 0;
1067   2                      break;
1068   2              }
1069   1      }
1070          void LCD_Clear_Pulls_Num(void) {
1071   1      
1072   1              LCDPTR = 8;
1073   1              LCDDAT &= ~(COM1 + COM2 + COM3);
1074   1      //      LCDDAT = COM1 + COM2 + COM3;
1075   1      
1076   1              LCDPTR = 9;
1077   1              LCDDAT = 0;
1078   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
1079   1      
1080   1              LCDPTR = 10;
1081   1              LCDDAT &= ~(COM1 + COM2 + COM3);
1082   1      //      LCDDAT = COM1 + COM2 + COM3;
1083   1      
1084   1              LCDPTR = 11;
1085   1              LCDDAT = 0;
1086   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
1087   1      
1088   1              LCDPTR = 12;
1089   1              LCDDAT &= ~(COM1 + COM2 + COM3);
1090   1      //      LCDDAT = COM1 + COM2 + COM3;
1091   1      
1092   1              LCDPTR = 13;
1093   1              LCDDAT = 0;
1094   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
1095   1      }
1096          void LCD_Show_Pulls_Num(uint16_t num) {
1097   1              uint8_t ge;
1098   1              uint8_t shi;
1099   1              uint8_t bai;
1100   1      
1101   1              if (num > 999) {
1102   2      
1103   2                      return;
1104   2              }
1105   1              bai = num / 100;
1106   1              shi = num % 100 / 10;
1107   1              ge = num % 10;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 19  

1108   1              if (num > 99) {
1109   2      //              set_SEG8EN;
1110   2      //              set_SEG9EN;
1111   2      
1112   2                      switch (bai) {
1113   3                      case 0:
1114   3                              LCDPTR = 8;
1115   3                              LCDDAT = COM1 + COM3;
1116   3      
1117   3                              LCDPTR = 9;
1118   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1119   3                              break;
1120   3                      case 1:
1121   3                              LCDPTR = 8;
1122   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1123   3      
1124   3                              LCDPTR = 9;
1125   3                              LCDDAT = COM1 + COM2;
1126   3                              break;
1127   3                      case 2:
1128   3                              LCDPTR = 8;
1129   3                              LCDDAT = COM2 + COM3;
1130   3      
1131   3                              LCDPTR = 9;
1132   3                              LCDDAT = COM0 + COM1 + COM3;
1133   3                              break;
1134   3                      case 3:
1135   3                              LCDPTR = 8;
1136   3                              LCDDAT = COM2;
1137   3      
1138   3                              LCDPTR = 9;
1139   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1140   3                              break;
1141   3                      case 4:
1142   3                              LCDPTR = 8;
1143   3                              LCDDAT = COM1 + COM2;
1144   3      
1145   3                              LCDPTR = 9;
1146   3                              LCDDAT = COM1 + COM2;
1147   3                              break;
1148   3                      case 5:
1149   3                              LCDPTR = 8;
1150   3                              LCDDAT = COM1 + COM2;
1151   3      
1152   3                              LCDPTR = 9;
1153   3                              LCDDAT = COM0 + COM2 + COM3;
1154   3                              break;
1155   3                      case 6:
1156   3                              LCDPTR = 8;
1157   3                              LCDDAT = COM1 + COM2 + COM3;
1158   3      
1159   3                              LCDPTR = 9;
1160   3                              LCDDAT = COM0 + COM2 + COM3;
1161   3                              break;
1162   3                      case 7:
1163   3                              LCDPTR = 8;
1164   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1165   3      
1166   3                              LCDPTR = 9;
1167   3                              LCDDAT = COM0 + COM1 + COM2;
1168   3                              break;
1169   3                      case 8:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 20  

1170   3                              LCDPTR = 8;
1171   3                              LCDDAT = COM1 + COM2 + COM3;
1172   3      
1173   3                              LCDPTR = 9;
1174   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1175   3                              break;
1176   3                      case 9:
1177   3                              LCDPTR = 8;
1178   3                              LCDDAT = COM1 + COM2;
1179   3      
1180   3                              LCDPTR = 9;
1181   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1182   3                              break;
1183   3                      }
1184   2              } else {
1185   2                      LCDPTR = 8;
1186   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1187   2      
1188   2                      LCDPTR = 9;
1189   2                      LCDDAT = 0;
1190   2              }
1191   1              if (num > 9) {
1192   2                      set_SEG10EN;
1193   2                      set_SEG11EN;
1194   2      
1195   2                      switch (shi) {
1196   3                      case 0:
1197   3                              LCDPTR = 10;
1198   3                              LCDDAT = COM1 + COM3;
1199   3      
1200   3                              LCDPTR = 11;
1201   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1202   3                              break;
1203   3                      case 1:
1204   3                              LCDPTR = 10;
1205   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1206   3      
1207   3                              LCDPTR = 11;
1208   3                              LCDDAT = COM1 + COM2;
1209   3                              break;
1210   3                      case 2:
1211   3                              LCDPTR = 10;
1212   3                              LCDDAT = COM2 + COM3;
1213   3      
1214   3                              LCDPTR = 11;
1215   3                              LCDDAT = COM0 + COM1 + COM3;
1216   3                              break;
1217   3                      case 3:
1218   3                              LCDPTR = 10;
1219   3                              LCDDAT = COM2;
1220   3      
1221   3                              LCDPTR = 11;
1222   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1223   3                              break;
1224   3                      case 4:
1225   3                              LCDPTR = 10;
1226   3                              LCDDAT = COM1 + COM2;
1227   3      
1228   3                              LCDPTR = 11;
1229   3                              LCDDAT = COM1 + COM2;
1230   3                              break;
1231   3                      case 5:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 21  

1232   3                              LCDPTR = 10;
1233   3                              LCDDAT = COM1 + COM2;
1234   3      
1235   3                              LCDPTR = 11;
1236   3                              LCDDAT = COM0 + COM2 + COM3;
1237   3                              break;
1238   3                      case 6:
1239   3                              LCDPTR = 10;
1240   3                              LCDDAT = COM1 + COM2 + COM3;
1241   3      
1242   3                              LCDPTR = 11;
1243   3                              LCDDAT = COM0 + COM2 + COM3;
1244   3                              break;
1245   3                      case 7:
1246   3                              LCDPTR = 10;
1247   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1248   3      
1249   3                              LCDPTR = 11;
1250   3                              LCDDAT = COM0 + COM1 + COM2;
1251   3                              break;
1252   3                      case 8:
1253   3                              LCDPTR = 10;
1254   3                              LCDDAT = COM1 + COM2 + COM3;
1255   3      
1256   3                              LCDPTR = 11;
1257   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1258   3                              break;
1259   3                      case 9:
1260   3                              LCDPTR = 10;
1261   3                              LCDDAT = COM1 + COM2;
1262   3      
1263   3                              LCDPTR = 11;
1264   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1265   3                              break;
1266   3                      }
1267   2              } else {
1268   2      //              clr_SEG10EN;
1269   2      //              clr_SEG11EN;
1270   2                      LCDPTR = 10;
1271   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1272   2      
1273   2                      LCDPTR = 11;
1274   2                      LCDDAT = 0;
1275   2              }
1276   1      //      set_SEG12EN;
1277   1      //      set_SEG13EN;
1278   1              switch (ge) {
1279   2              case 0:
1280   2                      LCDPTR = 12;
1281   2                      LCDDAT = COM1 + COM3;
1282   2      
1283   2                      LCDPTR = 13;
1284   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1285   2                      break;
1286   2              case 1:
1287   2                      LCDPTR = 12;
1288   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1289   2      
1290   2                      LCDPTR = 13;
1291   2                      LCDDAT = COM1 + COM2;
1292   2                      break;
1293   2              case 2:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 22  

1294   2                      LCDPTR = 12;
1295   2                      LCDDAT = COM2 + COM3;
1296   2      
1297   2                      LCDPTR = 13;
1298   2                      LCDDAT = COM0 + COM1 + COM3;
1299   2                      break;
1300   2              case 3:
1301   2                      LCDPTR = 12;
1302   2                      LCDDAT = COM2;
1303   2      
1304   2                      LCDPTR = 13;
1305   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1306   2                      break;
1307   2              case 4:
1308   2                      LCDPTR = 12;
1309   2                      LCDDAT = COM1 + COM2;
1310   2      
1311   2                      LCDPTR = 13;
1312   2                      LCDDAT = COM1 + COM2;
1313   2                      break;
1314   2              case 5:
1315   2                      LCDPTR = 12;
1316   2                      LCDDAT = COM1 + COM2;
1317   2      
1318   2                      LCDPTR = 13;
1319   2                      LCDDAT = COM0 + COM2 + COM3;
1320   2                      break;
1321   2              case 6:
1322   2                      LCDPTR = 12;
1323   2                      LCDDAT = COM1 + COM2 + COM3;
1324   2      
1325   2                      LCDPTR = 13;
1326   2                      LCDDAT = COM0 + COM2 + COM3;
1327   2                      break;
1328   2              case 7:
1329   2                      LCDPTR = 12;
1330   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1331   2      
1332   2                      LCDPTR = 13;
1333   2                      LCDDAT = COM0 + COM1 + COM2;
1334   2                      break;
1335   2              case 8:
1336   2                      LCDPTR = 12;
1337   2                      LCDDAT = COM1 + COM2 + COM3;
1338   2      
1339   2                      LCDPTR = 13;
1340   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1341   2                      break;
1342   2              case 9:
1343   2                      LCDPTR = 12;
1344   2                      LCDDAT = COM1 + COM2;
1345   2      
1346   2                      LCDPTR = 13;
1347   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1348   2                      break;
1349   2              }
1350   1      }
1351          void LCD_Clear_QS_ICO(void) {
1352   1      //      clr_SEG2EN;
1353   1              LCDPTR = 2;
1354   1              LCDDAT &= ~ COM0;
1355   1      }
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 23  

1356          void LCD_Show_QS_ICO(void) {
1357   1      //      set_SEG2EN;
1358   1              LCDPTR = 2;
1359   1              LCDDAT |= COM0;
1360   1      }
1361          void LCD_Clear_COACH_ICO(void) {
1362   1      //      clr_SEG4EN;
1363   1              LCDPTR = 4;
1364   1              LCDDAT &= ~COM0;
1365   1      }
1366          void LCD_Show_COACH_ICO(void) {
1367   1      //      set_SEG4EN;
1368   1              LCDPTR = 4;
1369   1              LCDDAT = COM0;
1370   1      }
1371          void LCD_Clear_Line_down(void) {
1372   1      //      clr_SEG8EN;
1373   1              LCDPTR = 8;
1374   1              LCDDAT &= ~COM0;
1375   1      }
1376          void LCD_Show_Line_down(void) {
1377   1      //      set_SEG8EN;
1378   1              LCDPTR = 8;
1379   1              LCDDAT |= COM0;
1380   1      }
1381          void LCD_Clear_Heart_ICO(void) {
1382   1      //      clr_SEG0EN;
1383   1              LCDPTR = 0;
1384   1              LCDDAT &= ~COM0;
1385   1      }
1386          void LCD_Show_Heart_ICO(void) {
1387   1      //      set_SEG0EN;
1388   1              LCDPTR = 0;
1389   1              LCDDAT |= COM0;
1390   1      }
1391          void LCD_Clear_CAL_Num(void) {
1392   1      
1393   1              LCDPTR = 0;
1394   1              LCDDAT &= ~(COM1 + COM2 + COM3);
1395   1      //      LCDDAT = COM1 + COM2 + COM3;
1396   1      
1397   1              LCDPTR = 1;
1398   1              LCDDAT = 0;
1399   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
1400   1      
1401   1              LCDPTR = 2;
1402   1              LCDDAT &= ~(COM1 + COM2 + COM3);
1403   1      //      LCDDAT = COM1 + COM2 + COM3;
1404   1      
1405   1              LCDPTR = 3;
1406   1              LCDDAT = 0;
1407   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
1408   1      
1409   1              LCDPTR = 4;
1410   1              LCDDAT &= ~(COM1 + COM2 + COM3);
1411   1      //      LCDDAT = COM1 + COM2 + COM3;
1412   1      
1413   1              LCDPTR = 5;
1414   1              LCDDAT = 0;
1415   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
1416   1      
1417   1              LCDPTR = 6;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 24  

1418   1              LCDDAT &= ~(COM1 + COM2 + COM3);
1419   1      //      LCDDAT = COM1 + COM2 + COM3;
1420   1      
1421   1              LCDPTR = 7;
1422   1              LCDDAT = 0;
1423   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
1424   1      }
1425          void LCD_Show_CAL_Num(uint16_t num) {
1426   1              uint8_t ge;
1427   1              uint8_t shi;
1428   1              uint8_t bai;
1429   1              uint8_t qian;
1430   1      
1431   1              if (num > 9999) {
1432   2                      return;
1433   2              }
1434   1              qian = num / 1000;
1435   1              bai = num % 1000 / 100;
1436   1              shi = num % 100 / 10;
1437   1              ge = num % 10;
1438   1              if (num > 999) {
1439   2      //              set_SEG0EN;
1440   2      //              set_SEG1EN;
1441   2      
1442   2                      switch (qian) {
1443   3                      case 0:
1444   3                              LCDPTR = 0;
1445   3                              LCDDAT = COM1 + COM3;
1446   3      
1447   3                              LCDPTR = 1;
1448   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1449   3                              break;
1450   3                      case 1:
1451   3                              LCDPTR = 0;
1452   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1453   3      
1454   3                              LCDPTR = 1;
1455   3                              LCDDAT = COM1 + COM2;
1456   3                              break;
1457   3                      case 2:
1458   3                              LCDPTR = 0;
1459   3                              LCDDAT = COM2 + COM3;
1460   3      
1461   3                              LCDPTR = 1;
1462   3                              LCDDAT = COM0 + COM1 + COM3;
1463   3                              break;
1464   3                      case 3:
1465   3                              LCDPTR = 0;
1466   3                              LCDDAT = COM2;
1467   3      
1468   3                              LCDPTR = 1;
1469   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1470   3                              break;
1471   3                      case 4:
1472   3                              LCDPTR = 0;
1473   3                              LCDDAT = COM1 + COM2;
1474   3      
1475   3                              LCDPTR = 1;
1476   3                              LCDDAT = COM1 + COM2;
1477   3                              break;
1478   3                      case 5:
1479   3                              LCDPTR = 0;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 25  

1480   3                              LCDDAT = COM1 + COM2;
1481   3      
1482   3                              LCDPTR = 1;
1483   3                              LCDDAT = COM0 + COM2 + COM3;
1484   3                              break;
1485   3                      case 6:
1486   3                              LCDPTR = 0;
1487   3                              LCDDAT = COM1 + COM2 + COM3;
1488   3      
1489   3                              LCDPTR = 1;
1490   3                              LCDDAT = COM0 + COM2 + COM3;
1491   3                              break;
1492   3                      case 7:
1493   3                              LCDPTR = 0;
1494   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1495   3      
1496   3                              LCDPTR = 1;
1497   3                              LCDDAT = COM0 + COM1 + COM2;
1498   3                              break;
1499   3                      case 8:
1500   3                              LCDPTR = 0;
1501   3                              LCDDAT = COM1 + COM2 + COM3;
1502   3      
1503   3                              LCDPTR = 1;
1504   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1505   3                              break;
1506   3                      case 9:
1507   3                              LCDPTR = 0;
1508   3                              LCDDAT = COM1 + COM2;
1509   3      
1510   3                              LCDPTR = 1;
1511   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1512   3                              break;
1513   3                      }
1514   2              } else {
1515   2                      LCDPTR = 0;
1516   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1517   2      
1518   2                      LCDPTR = 1;
1519   2                      LCDDAT = 0;
1520   2              }
1521   1              if (num > 99) {
1522   2      
1523   2                      switch (bai) {
1524   3                      case 0:
1525   3                              LCDPTR = 2;
1526   3                              LCDDAT = COM1 + COM3;
1527   3      
1528   3                              LCDPTR = 3;
1529   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1530   3                              break;
1531   3                      case 1:
1532   3                              LCDPTR = 2;
1533   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1534   3      
1535   3                              LCDPTR = 3;
1536   3                              LCDDAT = COM1 + COM2;
1537   3                              break;
1538   3                      case 2:
1539   3                              LCDPTR = 2;
1540   3                              LCDDAT = COM2 + COM3;
1541   3      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 26  

1542   3                              LCDPTR = 3;
1543   3                              LCDDAT = COM0 + COM1 + COM3;
1544   3                              break;
1545   3                      case 3:
1546   3                              LCDPTR = 2;
1547   3                              LCDDAT = COM2;
1548   3      
1549   3                              LCDPTR = 3;
1550   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1551   3                              break;
1552   3                      case 4:
1553   3                              LCDPTR = 2;
1554   3                              LCDDAT = COM1 + COM2;
1555   3      
1556   3                              LCDPTR = 3;
1557   3                              LCDDAT = COM1 + COM2;
1558   3                              break;
1559   3                      case 5:
1560   3                              LCDPTR = 2;
1561   3                              LCDDAT = COM1 + COM2;
1562   3      
1563   3                              LCDPTR = 3;
1564   3                              LCDDAT = COM0 + COM2 + COM3;
1565   3                              break;
1566   3                      case 6:
1567   3                              LCDPTR = 2;
1568   3                              LCDDAT = COM1 + COM2 + COM3;
1569   3      
1570   3                              LCDPTR = 3;
1571   3                              LCDDAT = COM0 + COM2 + COM3;
1572   3                              break;
1573   3                      case 7:
1574   3                              LCDPTR = 2;
1575   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1576   3      
1577   3                              LCDPTR = 3;
1578   3                              LCDDAT = COM0 + COM1 + COM2;
1579   3                              break;
1580   3                      case 8:
1581   3                              LCDPTR = 2;
1582   3                              LCDDAT = COM1 + COM2 + COM3;
1583   3      
1584   3                              LCDPTR = 3;
1585   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1586   3                              break;
1587   3                      case 9:
1588   3                              LCDPTR = 2;
1589   3                              LCDDAT = COM1 + COM2;
1590   3      
1591   3                              LCDPTR = 3;
1592   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1593   3                              break;
1594   3                      }
1595   2              } else {
1596   2      //              clr_SEG2EN;
1597   2      //              clr_SEG3EN;
1598   2                      LCDPTR = 2;
1599   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1600   2      
1601   2                      LCDPTR = 3;
1602   2                      LCDDAT = 0;
1603   2              }
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 27  

1604   1              if (num > 9) {
1605   2      //              set_SEG4EN;
1606   2      //              set_SEG5EN;
1607   2      
1608   2                      switch (shi) {
1609   3                      case 0:
1610   3                              LCDPTR = 4;
1611   3                              LCDDAT = COM1 + COM3;
1612   3      
1613   3                              LCDPTR = 5;
1614   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1615   3                              break;
1616   3                      case 1:
1617   3                              LCDPTR = 4;
1618   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1619   3      
1620   3                              LCDPTR = 5;
1621   3                              LCDDAT = COM1 + COM2;
1622   3                              break;
1623   3                      case 2:
1624   3                              LCDPTR = 4;
1625   3                              LCDDAT = COM2 + COM3;
1626   3      
1627   3                              LCDPTR = 5;
1628   3                              LCDDAT = COM0 + COM1 + COM3;
1629   3                              break;
1630   3                      case 3:
1631   3                              LCDPTR = 4;
1632   3                              LCDDAT = COM2;
1633   3      
1634   3                              LCDPTR = 5;
1635   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1636   3                              break;
1637   3                      case 4:
1638   3                              LCDPTR = 4;
1639   3                              LCDDAT = COM1 + COM2;
1640   3      
1641   3                              LCDPTR = 5;
1642   3                              LCDDAT = COM1 + COM2;
1643   3                              break;
1644   3                      case 5:
1645   3                              LCDPTR = 4;
1646   3                              LCDDAT = COM1 + COM2;
1647   3      
1648   3                              LCDPTR = 5;
1649   3                              LCDDAT = COM0 + COM2 + COM3;
1650   3                              break;
1651   3                      case 6:
1652   3                              LCDPTR = 4;
1653   3                              LCDDAT = COM1 + COM2 + COM3;
1654   3      
1655   3                              LCDPTR = 5;
1656   3                              LCDDAT = COM0 + COM2 + COM3;
1657   3                              break;
1658   3                      case 7:
1659   3                              LCDPTR = 4;
1660   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1661   3      
1662   3                              LCDPTR = 5;
1663   3                              LCDDAT = COM0 + COM1 + COM2;
1664   3                              break;
1665   3                      case 8:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 28  

1666   3                              LCDPTR = 4;
1667   3                              LCDDAT = COM1 + COM2 + COM3;
1668   3      
1669   3                              LCDPTR = 5;
1670   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1671   3                              break;
1672   3                      case 9:
1673   3                              LCDPTR = 4;
1674   3                              LCDDAT = COM1 + COM2;
1675   3      
1676   3                              LCDPTR = 5;
1677   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1678   3                              break;
1679   3                      }
1680   2              } else {
1681   2      //              clr_SEG4EN;
1682   2      //              clr_SEG5EN;
1683   2                      LCDPTR = 4;
1684   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1685   2      
1686   2                      LCDPTR = 5;
1687   2                      LCDDAT = 0;
1688   2              }
1689   1      
1690   1      //      set_SEG6EN;
1691   1      //      set_SEG7EN;
1692   1              switch (ge) {
1693   2              case 0:
1694   2                      LCDPTR = 6;
1695   2                      LCDDAT = COM1 + COM3;
1696   2      
1697   2                      LCDPTR = 7;
1698   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1699   2                      break;
1700   2              case 1:
1701   2                      LCDPTR = 6;
1702   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1703   2      
1704   2                      LCDPTR = 7;
1705   2                      LCDDAT = COM1 + COM2;
1706   2                      break;
1707   2              case 2:
1708   2                      LCDPTR = 6;
1709   2                      LCDDAT = COM2 + COM3;
1710   2      
1711   2                      LCDPTR = 7;
1712   2                      LCDDAT = COM0 + COM1 + COM3;
1713   2                      break;
1714   2              case 3:
1715   2                      LCDPTR = 6;
1716   2                      LCDDAT = COM2;
1717   2      
1718   2                      LCDPTR = 7;
1719   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1720   2                      break;
1721   2              case 4:
1722   2                      LCDPTR = 6;
1723   2                      LCDDAT = COM1 + COM2;
1724   2      
1725   2                      LCDPTR = 7;
1726   2                      LCDDAT = COM1 + COM2;
1727   2                      break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/13/2017 23:05:20 PAGE 29  

1728   2              case 5:
1729   2                      LCDPTR = 6;
1730   2                      LCDDAT = COM1 + COM2;
1731   2      
1732   2                      LCDPTR = 7;
1733   2                      LCDDAT = COM0 + COM2 + COM3;
1734   2                      break;
1735   2              case 6:
1736   2                      LCDPTR = 6;
1737   2                      LCDDAT = COM1 + COM2 + COM3;
1738   2      
1739   2                      LCDPTR = 7;
1740   2                      LCDDAT = COM0 + COM2 + COM3;
1741   2                      break;
1742   2              case 7:
1743   2                      LCDPTR = 6;
1744   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1745   2      
1746   2                      LCDPTR = 7;
1747   2                      LCDDAT = COM0 + COM1 + COM2;
1748   2                      break;
1749   2              case 8:
1750   2                      LCDPTR = 6;
1751   2                      LCDDAT = COM1 + COM2 + COM3;
1752   2      
1753   2                      LCDPTR = 7;
1754   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1755   2                      break;
1756   2              case 9:
1757   2                      LCDPTR = 6;
1758   2                      LCDDAT = COM1 + COM2;
1759   2      
1760   2                      LCDPTR = 7;
1761   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1762   2                      break;
1763   2              }
1764   1      }
1765          void LCD_Clear_CAL_ICO(void) {
1766   1      //      clr_SEG6EN;
1767   1              LCDPTR = 6;
1768   1              LCDDAT &= ~ COM0;
1769   1      }
1770          void LCD_Show_CAL_ICO(void) {
1771   1      //      set_SEG6EN;
1772   1              LCDPTR = 6;
1773   1              LCDDAT |= COM0;
1774   1      }
1775          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3683    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

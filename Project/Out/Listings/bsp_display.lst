C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BSP_DISPLAY
OBJECT MODULE PLACED IN .\Out\Objects\bsp_display.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_display.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common
                    -\inc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_display.ls
                    -t) OBJECT(.\Out\Objects\bsp_display.obj)

line level    source

   1          /*
   2           * bsp_display.c
   3           *
   4           *  Created on: 2017Äê6ÔÂ26ÈÕ
   5           *      Author: fly
   6           */
   7          
   8          #include "bsp.h"
   9          
  10          #define COM0    0x01
  11          #define COM1    0x02
  12          #define COM2    0x04
  13          #define COM3    0x08
  14          
  15          void LCD_display_InitHard(void) {
  16   1      
  17   1      #if 1
  18   1              P0M2 = 0x00;
  19   1              P0M1 = 0x80;
  20   1      
  21   1              P1M2 = 0x00;
  22   1              P1M1 = 0xFF;
  23   1      
  24   1              P2M2 = 0x00;
  25   1              P2M1 = 0xFF;
  26   1      
  27   1              P3M2 = 0x00;
  28   1              P3M1 = 0x0F;
  29   1      
  30   1              P4M2 = 0x00;
  31   1              P4M1 = 0xFF;
  32   1      
  33   1              P5M2 = 0x00;
  34   1              P5M1 = 0xFF;
  35   1      #endif
  36   1      
  37   1              //LCDCON = 0x40;      //;VLCD = 0.9VDD (VDD = 3.3V, VLCD = 3.0V)
  38   1              LCDCON = 0x00;                  //;1/4 duty, 1/3 bias, 150kO resistor ladder
  39   1      
  40   1              LCDCLK = 0x04;      //
  41   1      
  42   1              //enable seg pin
  43   1              LCDSEG0 = 0xFF;
  44   1              LCDSEG1 = 0xFF;
  45   1              LCDSEG2 = 0xFF;
  46   1              LCDSEG3 = 0xFF;
  47   1      
  48   1              LCDCON |= SET_BIT7;  //LCDEN = 1
  49   1      
  50   1              LCD_Clear_All();
  51   1      }
  52          
  53          void LCD_Clear_All(void) {
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 2   

  54   1              uint8_t i;
  55   1              for (i = 0; i < 32; i++) {
  56   2                      LCDPTR = i;
  57   2                      LCDDAT = 0;
  58   2              }
  59   1      }
  60          
  61          void LCD_Clear_LED_ICO(void) {
  62   1              LCDPTR = 18;
  63   1              LCDDAT &= ~ COM3;
  64   1      }
  65          void LCD_Show_LED_ICO(void) {
  66   1              LCDPTR = 18;
  67   1              LCDDAT |= COM3;
  68   1      }
  69          void LCD_Clear_FM_ICO(void) {
  70   1              LCDPTR = 14;
  71   1              LCDDAT &= ~ COM3;
  72   1      }
  73          void LCD_Show_FM_ICO(void) {
  74   1              LCDPTR = 14;
  75   1              LCDDAT |= COM3;
  76   1      }
  77          void LCD_Clear_BLUETooTH_ICO(void) {
  78   1      //      clr_SEG12EN;
  79   1              LCDPTR = 12;
  80   1              LCDDAT &= ~ COM0;
  81   1      }
  82          void LCD_Show_BLUETooTH_ICO(void) {
  83   1      //      set_SEG12EN;
  84   1              LCDPTR = 12;
  85   1              LCDDAT |= COM0;
  86   1      }
  87          
  88          void LCD_Clear_AUX_ICO(void) {
  89   1      //      clr_SEG14EN;
  90   1              LCDPTR = 14;
  91   1              LCDDAT &= ~COM0;
  92   1      }
  93          void LCD_Show_AUX_ICO(void) {
  94   1      //      set_SEG14EN;
  95   1              LCDPTR = 14;
  96   1              LCDDAT |= COM0;
  97   1      }
  98          void LCD_Clear_USB_ICO(void) {
  99   1      //      clr_SEG16EN;
 100   1              LCDPTR = 16;
 101   1              LCDDAT &= ~ COM0;
 102   1      }
 103          void LCD_Show_USB_ICO(void) {
 104   1      //      set_SEG16EN;
 105   1              LCDPTR = 16;
 106   1              LCDDAT |= COM0;
 107   1      }
 108          void LCD_Clear_MHZ_ICO(void) {
 109   1      //      clr_SEG16EN;
 110   1              LCDPTR = 16;
 111   1              LCDDAT &= ~ COM0;
 112   1      }
 113          void LCD_Show_MHZ_ICO(void) {
 114   1      //      set_SEG16EN;
 115   1              LCDPTR = 16;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 3   

 116   1              LCDDAT |= COM0;
 117   1      }
 118          void LCD_Clear_BAZOOKA_ICO(void) {
 119   1              //      clr_SEG16EN;
 120   1              LCDPTR = 16;
 121   1              LCDDAT &= ~ COM0;
 122   1      }
 123          void LCD_Show_BAZOOKA_ICO(void) {
 124   1              //      set_SEG16EN;
 125   1              LCDPTR = 16;
 126   1              LCDDAT |= COM0;
 127   1      }
 128          void LCD_Clear_colon_ICO(void) {
 129   1              //      clr_SEG16EN;
 130   1              LCDPTR = 16;
 131   1              LCDDAT &= ~ COM0;
 132   1      }
 133          void LCD_Show_colon_ICO(void) {
 134   1              //      set_SEG16EN;
 135   1              LCDPTR = 16;
 136   1              LCDDAT |= COM0;
 137   1      }
 138          void LCD_Clear_mi_all(void) {
 139   1      
 140   1              LCDPTR = 18;
 141   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 142   1      //      LCDDAT = COM1 + COM2 + COM3;
 143   1      
 144   1              LCDPTR = 19;
 145   1              LCDDAT = 0;
 146   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 147   1      
 148   1              LCDPTR = 20;
 149   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 150   1      //      LCDDAT = COM1 + COM2 + COM3;
 151   1      
 152   1              LCDPTR = 21;
 153   1              LCDDAT = 0;
 154   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 155   1      }
 156          void LCD_Clear_mi(uint8_t n) {
 157   1      n++;
 158   1      }
 159          void LCD_show_mi(uint8_t n, char c) {
 160   1              switch (n) {
 161   2              case 0: {
 162   3                      switch (c) {
 163   4                      case '0':
 164   4                              LCDPTR = 14;
 165   4                              LCDDAT = COM1 + COM3;
 166   4      
 167   4                              LCDPTR = 15;
 168   4                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 169   4                              break;
 170   4                      case '1':
 171   4                              break;
 172   4                      case '2':
 173   4                              break;
 174   4                      case '3':
 175   4                              break;
 176   4                      case '4':
 177   4                              break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 4   

 178   4                      case '5':
 179   4                              break;
 180   4                      case '6':
 181   4                              break;
 182   4                      case '7':
 183   4                              break;
 184   4                      case '8':
 185   4                              break;
 186   4                      case '9':
 187   4                              break;
 188   4                      case ' ':
 189   4                              LCD_Clear_mi(n);
 190   4                              break;
 191   4                      }
 192   3              }
 193   2                      break;
 194   2              case 1:
 195   2                      break;
 196   2              case 2:
 197   2                      break;
 198   2              case 3:
 199   2                      break;
 200   2              case 4:
 201   2                      break;
 202   2              case 5:
 203   2                      break;
 204   2              case 6:
 205   2                      break;
 206   2              case 7:
 207   2                      break;
 208   2              }
 209   1      }
 210          
 211          void LCD_Show_REP_Num(uint8_t num) {
 212   1              uint8_t ge;
 213   1              uint8_t shi;
 214   1      
 215   1              if (num > 99) {
 216   2                      return;
 217   2              }
 218   1      
 219   1              shi = num / 10;
 220   1              ge = num % 10;
 221   1              if (num > 9) {
 222   2      //              set_SEG14EN;
 223   2      //              set_SEG15EN;
 224   2                      switch (shi) {
 225   3                      case 0:
 226   3                              LCDPTR = 14;
 227   3                              LCDDAT = COM1 + COM3;
 228   3      
 229   3                              LCDPTR = 15;
 230   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 231   3                              break;
 232   3                      case 1:
 233   3                              LCDPTR = 14;
 234   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 235   3      
 236   3                              LCDPTR = 15;
 237   3                              LCDDAT = COM1 + COM2;
 238   3                              break;
 239   3                      case 2:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 5   

 240   3                              LCDPTR = 14;
 241   3                              LCDDAT = COM2 + COM3;
 242   3      
 243   3                              LCDPTR = 15;
 244   3                              LCDDAT = COM0 + COM1 + COM3;
 245   3                              break;
 246   3                      case 3:
 247   3                              LCDPTR = 14;
 248   3                              LCDDAT = COM2;
 249   3      
 250   3                              LCDPTR = 15;
 251   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 252   3                              break;
 253   3                      case 4:
 254   3                              LCDPTR = 14;
 255   3                              LCDDAT = COM1 + COM2;
 256   3      
 257   3                              LCDPTR = 15;
 258   3                              LCDDAT = COM1 + COM2;
 259   3                              break;
 260   3                      case 5:
 261   3                              LCDPTR = 14;
 262   3                              LCDDAT = COM1 + COM2;
 263   3      
 264   3                              LCDPTR = 15;
 265   3                              LCDDAT = COM0 + COM2 + COM3;
 266   3                              break;
 267   3                      case 6:
 268   3                              LCDPTR = 14;
 269   3                              LCDDAT = COM1 + COM2 + COM3;
 270   3      
 271   3                              LCDPTR = 15;
 272   3                              LCDDAT = COM0 + COM2 + COM3;
 273   3                              break;
 274   3                      case 7:
 275   3                              LCDPTR = 14;
 276   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 277   3      
 278   3                              LCDPTR = 15;
 279   3                              LCDDAT = COM0 + COM1 + COM2;
 280   3                              break;
 281   3                      case 8:
 282   3                              LCDPTR = 14;
 283   3                              LCDDAT = COM1 + COM2 + COM3;
 284   3      
 285   3                              LCDPTR = 15;
 286   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 287   3                              break;
 288   3                      case 9:
 289   3                              LCDPTR = 14;
 290   3                              LCDDAT = COM1 + COM2;
 291   3      
 292   3                              LCDPTR = 15;
 293   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 294   3                              break;
 295   3                      }
 296   2              } else {
 297   2      //              clr_SEG14EN;
 298   2      //              clr_SEG15EN;
 299   2      
 300   2                      LCDPTR = 14;
 301   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 6   

 302   2      //              LCDDAT = COM0 + COM1 + COM2 + COM3;
 303   2      
 304   2                      LCDPTR = 15;
 305   2                      LCDDAT = 0;
 306   2      //              LCDDAT = COM0 + COM1 + COM2 + COM3;
 307   2              }
 308   1      //      set_SEG16EN;
 309   1      //      set_SEG17EN;
 310   1              switch (ge) {
 311   2              case 0:
 312   2                      LCDPTR = 16;
 313   2                      LCDDAT = COM1 + COM3;
 314   2      
 315   2                      LCDPTR = 17;
 316   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 317   2                      break;
 318   2              case 1:
 319   2                      LCDPTR = 16;
 320   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 321   2      
 322   2                      LCDPTR = 17;
 323   2                      LCDDAT = COM1 + COM2;
 324   2                      break;
 325   2              case 2:
 326   2                      LCDPTR = 16;
 327   2                      LCDDAT = COM2 + COM3;
 328   2      
 329   2                      LCDPTR = 17;
 330   2                      LCDDAT = COM0 + COM1 + COM3;
 331   2                      break;
 332   2              case 3:
 333   2                      LCDPTR = 16;
 334   2                      LCDDAT = COM2;
 335   2      
 336   2                      LCDPTR = 17;
 337   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 338   2                      break;
 339   2              case 4:
 340   2                      LCDPTR = 16;
 341   2                      LCDDAT = COM1 + COM2;
 342   2      
 343   2                      LCDPTR = 17;
 344   2                      LCDDAT = COM1 + COM2;
 345   2                      break;
 346   2              case 5:
 347   2                      LCDPTR = 16;
 348   2                      LCDDAT = COM1 + COM2;
 349   2      
 350   2                      LCDPTR = 17;
 351   2                      LCDDAT = COM0 + COM2 + COM3;
 352   2                      break;
 353   2              case 6:
 354   2                      LCDPTR = 16;
 355   2                      LCDDAT = COM1 + COM2 + COM3;
 356   2      
 357   2                      LCDPTR = 17;
 358   2                      LCDDAT = COM0 + COM2 + COM3;
 359   2                      break;
 360   2              case 7:
 361   2                      LCDPTR = 16;
 362   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 363   2      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 7   

 364   2                      LCDPTR = 17;
 365   2                      LCDDAT = COM0 + COM1 + COM2;
 366   2                      break;
 367   2              case 8:
 368   2                      LCDPTR = 16;
 369   2                      LCDDAT = COM1 + COM2 + COM3;
 370   2      
 371   2                      LCDPTR = 17;
 372   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 373   2                      break;
 374   2              case 9:
 375   2                      LCDPTR = 16;
 376   2                      LCDDAT = COM1 + COM2;
 377   2      
 378   2                      LCDPTR = 17;
 379   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 380   2                      break;
 381   2              }
 382   1      }
 383          void LCD_Clear_ABCD(void) {
 384   1      //      clr_SEG18EN;
 385   1              LCDPTR = 18;
 386   1              LCDDAT = 0;
 387   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 388   1      }
 389          void LCD_Show_ABCD_all(void) {
 390   1      //      set_SEG18EN;
 391   1              LCDPTR = 18;
 392   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 393   1      }
 394          void LCD_Show_ABCD(char c) {
 395   1      //      set_SEG18EN;
 396   1              LCDPTR = 18;
 397   1      
 398   1              switch (c) {
 399   2              case 'A':
 400   2                      LCDDAT = COM0;
 401   2                      break;
 402   2              case 'B':
 403   2                      LCDDAT = COM1;
 404   2                      break;
 405   2              case 'C':
 406   2                      LCDDAT = COM2;
 407   2                      break;
 408   2              case 'D':
 409   2                      LCDDAT = COM3;
 410   2                      break;
 411   2              default:
 412   2      //              LCDPTR = 18;
 413   2      //              LCDDAT = 0;
 414   2                      break;
 415   2              }
 416   1      }
 417          void LCD_Clear_Pulls_Num(void) {
 418   1      
 419   1              LCDPTR = 8;
 420   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 421   1      //      LCDDAT = COM1 + COM2 + COM3;
 422   1      
 423   1              LCDPTR = 9;
 424   1              LCDDAT = 0;
 425   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 8   

 426   1      
 427   1              LCDPTR = 10;
 428   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 429   1      //      LCDDAT = COM1 + COM2 + COM3;
 430   1      
 431   1              LCDPTR = 11;
 432   1              LCDDAT = 0;
 433   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 434   1      
 435   1              LCDPTR = 12;
 436   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 437   1      //      LCDDAT = COM1 + COM2 + COM3;
 438   1      
 439   1              LCDPTR = 13;
 440   1              LCDDAT = 0;
 441   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 442   1      }
 443          void LCD_Show_Pulls_Num(uint16_t num) {
 444   1              uint8_t ge;
 445   1              uint8_t shi;
 446   1              uint8_t bai;
 447   1      
 448   1              if (num > 999) {
 449   2      
 450   2                      return;
 451   2              }
 452   1              bai = num / 100;
 453   1              shi = num % 100 / 10;
 454   1              ge = num % 10;
 455   1              if (num > 99) {
 456   2      //              set_SEG8EN;
 457   2      //              set_SEG9EN;
 458   2      
 459   2                      switch (bai) {
 460   3                      case 0:
 461   3                              LCDPTR = 8;
 462   3                              LCDDAT = COM1 + COM3;
 463   3      
 464   3                              LCDPTR = 9;
 465   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 466   3                              break;
 467   3                      case 1:
 468   3                              LCDPTR = 8;
 469   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 470   3      
 471   3                              LCDPTR = 9;
 472   3                              LCDDAT = COM1 + COM2;
 473   3                              break;
 474   3                      case 2:
 475   3                              LCDPTR = 8;
 476   3                              LCDDAT = COM2 + COM3;
 477   3      
 478   3                              LCDPTR = 9;
 479   3                              LCDDAT = COM0 + COM1 + COM3;
 480   3                              break;
 481   3                      case 3:
 482   3                              LCDPTR = 8;
 483   3                              LCDDAT = COM2;
 484   3      
 485   3                              LCDPTR = 9;
 486   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 487   3                              break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 9   

 488   3                      case 4:
 489   3                              LCDPTR = 8;
 490   3                              LCDDAT = COM1 + COM2;
 491   3      
 492   3                              LCDPTR = 9;
 493   3                              LCDDAT = COM1 + COM2;
 494   3                              break;
 495   3                      case 5:
 496   3                              LCDPTR = 8;
 497   3                              LCDDAT = COM1 + COM2;
 498   3      
 499   3                              LCDPTR = 9;
 500   3                              LCDDAT = COM0 + COM2 + COM3;
 501   3                              break;
 502   3                      case 6:
 503   3                              LCDPTR = 8;
 504   3                              LCDDAT = COM1 + COM2 + COM3;
 505   3      
 506   3                              LCDPTR = 9;
 507   3                              LCDDAT = COM0 + COM2 + COM3;
 508   3                              break;
 509   3                      case 7:
 510   3                              LCDPTR = 8;
 511   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 512   3      
 513   3                              LCDPTR = 9;
 514   3                              LCDDAT = COM0 + COM1 + COM2;
 515   3                              break;
 516   3                      case 8:
 517   3                              LCDPTR = 8;
 518   3                              LCDDAT = COM1 + COM2 + COM3;
 519   3      
 520   3                              LCDPTR = 9;
 521   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 522   3                              break;
 523   3                      case 9:
 524   3                              LCDPTR = 8;
 525   3                              LCDDAT = COM1 + COM2;
 526   3      
 527   3                              LCDPTR = 9;
 528   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 529   3                              break;
 530   3                      }
 531   2              } else {
 532   2                      LCDPTR = 8;
 533   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 534   2      
 535   2                      LCDPTR = 9;
 536   2                      LCDDAT = 0;
 537   2              }
 538   1              if (num > 9) {
 539   2                      set_SEG10EN;
 540   2                      set_SEG11EN;
 541   2      
 542   2                      switch (shi) {
 543   3                      case 0:
 544   3                              LCDPTR = 10;
 545   3                              LCDDAT = COM1 + COM3;
 546   3      
 547   3                              LCDPTR = 11;
 548   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 549   3                              break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 10  

 550   3                      case 1:
 551   3                              LCDPTR = 10;
 552   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 553   3      
 554   3                              LCDPTR = 11;
 555   3                              LCDDAT = COM1 + COM2;
 556   3                              break;
 557   3                      case 2:
 558   3                              LCDPTR = 10;
 559   3                              LCDDAT = COM2 + COM3;
 560   3      
 561   3                              LCDPTR = 11;
 562   3                              LCDDAT = COM0 + COM1 + COM3;
 563   3                              break;
 564   3                      case 3:
 565   3                              LCDPTR = 10;
 566   3                              LCDDAT = COM2;
 567   3      
 568   3                              LCDPTR = 11;
 569   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 570   3                              break;
 571   3                      case 4:
 572   3                              LCDPTR = 10;
 573   3                              LCDDAT = COM1 + COM2;
 574   3      
 575   3                              LCDPTR = 11;
 576   3                              LCDDAT = COM1 + COM2;
 577   3                              break;
 578   3                      case 5:
 579   3                              LCDPTR = 10;
 580   3                              LCDDAT = COM1 + COM2;
 581   3      
 582   3                              LCDPTR = 11;
 583   3                              LCDDAT = COM0 + COM2 + COM3;
 584   3                              break;
 585   3                      case 6:
 586   3                              LCDPTR = 10;
 587   3                              LCDDAT = COM1 + COM2 + COM3;
 588   3      
 589   3                              LCDPTR = 11;
 590   3                              LCDDAT = COM0 + COM2 + COM3;
 591   3                              break;
 592   3                      case 7:
 593   3                              LCDPTR = 10;
 594   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 595   3      
 596   3                              LCDPTR = 11;
 597   3                              LCDDAT = COM0 + COM1 + COM2;
 598   3                              break;
 599   3                      case 8:
 600   3                              LCDPTR = 10;
 601   3                              LCDDAT = COM1 + COM2 + COM3;
 602   3      
 603   3                              LCDPTR = 11;
 604   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 605   3                              break;
 606   3                      case 9:
 607   3                              LCDPTR = 10;
 608   3                              LCDDAT = COM1 + COM2;
 609   3      
 610   3                              LCDPTR = 11;
 611   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 11  

 612   3                              break;
 613   3                      }
 614   2              } else {
 615   2      //              clr_SEG10EN;
 616   2      //              clr_SEG11EN;
 617   2                      LCDPTR = 10;
 618   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 619   2      
 620   2                      LCDPTR = 11;
 621   2                      LCDDAT = 0;
 622   2              }
 623   1      //      set_SEG12EN;
 624   1      //      set_SEG13EN;
 625   1              switch (ge) {
 626   2              case 0:
 627   2                      LCDPTR = 12;
 628   2                      LCDDAT = COM1 + COM3;
 629   2      
 630   2                      LCDPTR = 13;
 631   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 632   2                      break;
 633   2              case 1:
 634   2                      LCDPTR = 12;
 635   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 636   2      
 637   2                      LCDPTR = 13;
 638   2                      LCDDAT = COM1 + COM2;
 639   2                      break;
 640   2              case 2:
 641   2                      LCDPTR = 12;
 642   2                      LCDDAT = COM2 + COM3;
 643   2      
 644   2                      LCDPTR = 13;
 645   2                      LCDDAT = COM0 + COM1 + COM3;
 646   2                      break;
 647   2              case 3:
 648   2                      LCDPTR = 12;
 649   2                      LCDDAT = COM2;
 650   2      
 651   2                      LCDPTR = 13;
 652   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 653   2                      break;
 654   2              case 4:
 655   2                      LCDPTR = 12;
 656   2                      LCDDAT = COM1 + COM2;
 657   2      
 658   2                      LCDPTR = 13;
 659   2                      LCDDAT = COM1 + COM2;
 660   2                      break;
 661   2              case 5:
 662   2                      LCDPTR = 12;
 663   2                      LCDDAT = COM1 + COM2;
 664   2      
 665   2                      LCDPTR = 13;
 666   2                      LCDDAT = COM0 + COM2 + COM3;
 667   2                      break;
 668   2              case 6:
 669   2                      LCDPTR = 12;
 670   2                      LCDDAT = COM1 + COM2 + COM3;
 671   2      
 672   2                      LCDPTR = 13;
 673   2                      LCDDAT = COM0 + COM2 + COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 12  

 674   2                      break;
 675   2              case 7:
 676   2                      LCDPTR = 12;
 677   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 678   2      
 679   2                      LCDPTR = 13;
 680   2                      LCDDAT = COM0 + COM1 + COM2;
 681   2                      break;
 682   2              case 8:
 683   2                      LCDPTR = 12;
 684   2                      LCDDAT = COM1 + COM2 + COM3;
 685   2      
 686   2                      LCDPTR = 13;
 687   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 688   2                      break;
 689   2              case 9:
 690   2                      LCDPTR = 12;
 691   2                      LCDDAT = COM1 + COM2;
 692   2      
 693   2                      LCDPTR = 13;
 694   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 695   2                      break;
 696   2              }
 697   1      }
 698          void LCD_Clear_QS_ICO(void) {
 699   1      //      clr_SEG2EN;
 700   1              LCDPTR = 2;
 701   1              LCDDAT &= ~ COM0;
 702   1      }
 703          void LCD_Show_QS_ICO(void) {
 704   1      //      set_SEG2EN;
 705   1              LCDPTR = 2;
 706   1              LCDDAT |= COM0;
 707   1      }
 708          void LCD_Clear_COACH_ICO(void) {
 709   1      //      clr_SEG4EN;
 710   1              LCDPTR = 4;
 711   1              LCDDAT &= ~COM0;
 712   1      }
 713          void LCD_Show_COACH_ICO(void) {
 714   1      //      set_SEG4EN;
 715   1              LCDPTR = 4;
 716   1              LCDDAT = COM0;
 717   1      }
 718          void LCD_Clear_Line_down(void) {
 719   1      //      clr_SEG8EN;
 720   1              LCDPTR = 8;
 721   1              LCDDAT &= ~COM0;
 722   1      }
 723          void LCD_Show_Line_down(void) {
 724   1      //      set_SEG8EN;
 725   1              LCDPTR = 8;
 726   1              LCDDAT |= COM0;
 727   1      }
 728          void LCD_Clear_Heart_ICO(void) {
 729   1      //      clr_SEG0EN;
 730   1              LCDPTR = 0;
 731   1              LCDDAT &= ~COM0;
 732   1      }
 733          void LCD_Show_Heart_ICO(void) {
 734   1      //      set_SEG0EN;
 735   1              LCDPTR = 0;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 13  

 736   1              LCDDAT |= COM0;
 737   1      }
 738          void LCD_Clear_CAL_Num(void) {
 739   1      
 740   1              LCDPTR = 0;
 741   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 742   1      //      LCDDAT = COM1 + COM2 + COM3;
 743   1      
 744   1              LCDPTR = 1;
 745   1              LCDDAT = 0;
 746   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 747   1      
 748   1              LCDPTR = 2;
 749   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 750   1      //      LCDDAT = COM1 + COM2 + COM3;
 751   1      
 752   1              LCDPTR = 3;
 753   1              LCDDAT = 0;
 754   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 755   1      
 756   1              LCDPTR = 4;
 757   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 758   1      //      LCDDAT = COM1 + COM2 + COM3;
 759   1      
 760   1              LCDPTR = 5;
 761   1              LCDDAT = 0;
 762   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 763   1      
 764   1              LCDPTR = 6;
 765   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 766   1      //      LCDDAT = COM1 + COM2 + COM3;
 767   1      
 768   1              LCDPTR = 7;
 769   1              LCDDAT = 0;
 770   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 771   1      }
 772          void LCD_Show_CAL_Num(uint16_t num) {
 773   1              uint8_t ge;
 774   1              uint8_t shi;
 775   1              uint8_t bai;
 776   1              uint8_t qian;
 777   1      
 778   1              if (num > 9999) {
 779   2                      return;
 780   2              }
 781   1              qian = num / 1000;
 782   1              bai = num % 1000 / 100;
 783   1              shi = num % 100 / 10;
 784   1              ge = num % 10;
 785   1              if (num > 999) {
 786   2      //              set_SEG0EN;
 787   2      //              set_SEG1EN;
 788   2      
 789   2                      switch (qian) {
 790   3                      case 0:
 791   3                              LCDPTR = 0;
 792   3                              LCDDAT = COM1 + COM3;
 793   3      
 794   3                              LCDPTR = 1;
 795   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 796   3                              break;
 797   3                      case 1:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 14  

 798   3                              LCDPTR = 0;
 799   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 800   3      
 801   3                              LCDPTR = 1;
 802   3                              LCDDAT = COM1 + COM2;
 803   3                              break;
 804   3                      case 2:
 805   3                              LCDPTR = 0;
 806   3                              LCDDAT = COM2 + COM3;
 807   3      
 808   3                              LCDPTR = 1;
 809   3                              LCDDAT = COM0 + COM1 + COM3;
 810   3                              break;
 811   3                      case 3:
 812   3                              LCDPTR = 0;
 813   3                              LCDDAT = COM2;
 814   3      
 815   3                              LCDPTR = 1;
 816   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 817   3                              break;
 818   3                      case 4:
 819   3                              LCDPTR = 0;
 820   3                              LCDDAT = COM1 + COM2;
 821   3      
 822   3                              LCDPTR = 1;
 823   3                              LCDDAT = COM1 + COM2;
 824   3                              break;
 825   3                      case 5:
 826   3                              LCDPTR = 0;
 827   3                              LCDDAT = COM1 + COM2;
 828   3      
 829   3                              LCDPTR = 1;
 830   3                              LCDDAT = COM0 + COM2 + COM3;
 831   3                              break;
 832   3                      case 6:
 833   3                              LCDPTR = 0;
 834   3                              LCDDAT = COM1 + COM2 + COM3;
 835   3      
 836   3                              LCDPTR = 1;
 837   3                              LCDDAT = COM0 + COM2 + COM3;
 838   3                              break;
 839   3                      case 7:
 840   3                              LCDPTR = 0;
 841   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 842   3      
 843   3                              LCDPTR = 1;
 844   3                              LCDDAT = COM0 + COM1 + COM2;
 845   3                              break;
 846   3                      case 8:
 847   3                              LCDPTR = 0;
 848   3                              LCDDAT = COM1 + COM2 + COM3;
 849   3      
 850   3                              LCDPTR = 1;
 851   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 852   3                              break;
 853   3                      case 9:
 854   3                              LCDPTR = 0;
 855   3                              LCDDAT = COM1 + COM2;
 856   3      
 857   3                              LCDPTR = 1;
 858   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 859   3                              break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 15  

 860   3                      }
 861   2              } else {
 862   2                      LCDPTR = 0;
 863   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 864   2      
 865   2                      LCDPTR = 1;
 866   2                      LCDDAT = 0;
 867   2              }
 868   1              if (num > 99) {
 869   2      
 870   2                      switch (bai) {
 871   3                      case 0:
 872   3                              LCDPTR = 2;
 873   3                              LCDDAT = COM1 + COM3;
 874   3      
 875   3                              LCDPTR = 3;
 876   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 877   3                              break;
 878   3                      case 1:
 879   3                              LCDPTR = 2;
 880   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 881   3      
 882   3                              LCDPTR = 3;
 883   3                              LCDDAT = COM1 + COM2;
 884   3                              break;
 885   3                      case 2:
 886   3                              LCDPTR = 2;
 887   3                              LCDDAT = COM2 + COM3;
 888   3      
 889   3                              LCDPTR = 3;
 890   3                              LCDDAT = COM0 + COM1 + COM3;
 891   3                              break;
 892   3                      case 3:
 893   3                              LCDPTR = 2;
 894   3                              LCDDAT = COM2;
 895   3      
 896   3                              LCDPTR = 3;
 897   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 898   3                              break;
 899   3                      case 4:
 900   3                              LCDPTR = 2;
 901   3                              LCDDAT = COM1 + COM2;
 902   3      
 903   3                              LCDPTR = 3;
 904   3                              LCDDAT = COM1 + COM2;
 905   3                              break;
 906   3                      case 5:
 907   3                              LCDPTR = 2;
 908   3                              LCDDAT = COM1 + COM2;
 909   3      
 910   3                              LCDPTR = 3;
 911   3                              LCDDAT = COM0 + COM2 + COM3;
 912   3                              break;
 913   3                      case 6:
 914   3                              LCDPTR = 2;
 915   3                              LCDDAT = COM1 + COM2 + COM3;
 916   3      
 917   3                              LCDPTR = 3;
 918   3                              LCDDAT = COM0 + COM2 + COM3;
 919   3                              break;
 920   3                      case 7:
 921   3                              LCDPTR = 2;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 16  

 922   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 923   3      
 924   3                              LCDPTR = 3;
 925   3                              LCDDAT = COM0 + COM1 + COM2;
 926   3                              break;
 927   3                      case 8:
 928   3                              LCDPTR = 2;
 929   3                              LCDDAT = COM1 + COM2 + COM3;
 930   3      
 931   3                              LCDPTR = 3;
 932   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 933   3                              break;
 934   3                      case 9:
 935   3                              LCDPTR = 2;
 936   3                              LCDDAT = COM1 + COM2;
 937   3      
 938   3                              LCDPTR = 3;
 939   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 940   3                              break;
 941   3                      }
 942   2              } else {
 943   2      //              clr_SEG2EN;
 944   2      //              clr_SEG3EN;
 945   2                      LCDPTR = 2;
 946   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 947   2      
 948   2                      LCDPTR = 3;
 949   2                      LCDDAT = 0;
 950   2              }
 951   1              if (num > 9) {
 952   2      //              set_SEG4EN;
 953   2      //              set_SEG5EN;
 954   2      
 955   2                      switch (shi) {
 956   3                      case 0:
 957   3                              LCDPTR = 4;
 958   3                              LCDDAT = COM1 + COM3;
 959   3      
 960   3                              LCDPTR = 5;
 961   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 962   3                              break;
 963   3                      case 1:
 964   3                              LCDPTR = 4;
 965   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 966   3      
 967   3                              LCDPTR = 5;
 968   3                              LCDDAT = COM1 + COM2;
 969   3                              break;
 970   3                      case 2:
 971   3                              LCDPTR = 4;
 972   3                              LCDDAT = COM2 + COM3;
 973   3      
 974   3                              LCDPTR = 5;
 975   3                              LCDDAT = COM0 + COM1 + COM3;
 976   3                              break;
 977   3                      case 3:
 978   3                              LCDPTR = 4;
 979   3                              LCDDAT = COM2;
 980   3      
 981   3                              LCDPTR = 5;
 982   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 983   3                              break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 17  

 984   3                      case 4:
 985   3                              LCDPTR = 4;
 986   3                              LCDDAT = COM1 + COM2;
 987   3      
 988   3                              LCDPTR = 5;
 989   3                              LCDDAT = COM1 + COM2;
 990   3                              break;
 991   3                      case 5:
 992   3                              LCDPTR = 4;
 993   3                              LCDDAT = COM1 + COM2;
 994   3      
 995   3                              LCDPTR = 5;
 996   3                              LCDDAT = COM0 + COM2 + COM3;
 997   3                              break;
 998   3                      case 6:
 999   3                              LCDPTR = 4;
1000   3                              LCDDAT = COM1 + COM2 + COM3;
1001   3      
1002   3                              LCDPTR = 5;
1003   3                              LCDDAT = COM0 + COM2 + COM3;
1004   3                              break;
1005   3                      case 7:
1006   3                              LCDPTR = 4;
1007   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1008   3      
1009   3                              LCDPTR = 5;
1010   3                              LCDDAT = COM0 + COM1 + COM2;
1011   3                              break;
1012   3                      case 8:
1013   3                              LCDPTR = 4;
1014   3                              LCDDAT = COM1 + COM2 + COM3;
1015   3      
1016   3                              LCDPTR = 5;
1017   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1018   3                              break;
1019   3                      case 9:
1020   3                              LCDPTR = 4;
1021   3                              LCDDAT = COM1 + COM2;
1022   3      
1023   3                              LCDPTR = 5;
1024   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1025   3                              break;
1026   3                      }
1027   2              } else {
1028   2      //              clr_SEG4EN;
1029   2      //              clr_SEG5EN;
1030   2                      LCDPTR = 4;
1031   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1032   2      
1033   2                      LCDPTR = 5;
1034   2                      LCDDAT = 0;
1035   2              }
1036   1      
1037   1      //      set_SEG6EN;
1038   1      //      set_SEG7EN;
1039   1              switch (ge) {
1040   2              case 0:
1041   2                      LCDPTR = 6;
1042   2                      LCDDAT = COM1 + COM3;
1043   2      
1044   2                      LCDPTR = 7;
1045   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 18  

1046   2                      break;
1047   2              case 1:
1048   2                      LCDPTR = 6;
1049   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1050   2      
1051   2                      LCDPTR = 7;
1052   2                      LCDDAT = COM1 + COM2;
1053   2                      break;
1054   2              case 2:
1055   2                      LCDPTR = 6;
1056   2                      LCDDAT = COM2 + COM3;
1057   2      
1058   2                      LCDPTR = 7;
1059   2                      LCDDAT = COM0 + COM1 + COM3;
1060   2                      break;
1061   2              case 3:
1062   2                      LCDPTR = 6;
1063   2                      LCDDAT = COM2;
1064   2      
1065   2                      LCDPTR = 7;
1066   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1067   2                      break;
1068   2              case 4:
1069   2                      LCDPTR = 6;
1070   2                      LCDDAT = COM1 + COM2;
1071   2      
1072   2                      LCDPTR = 7;
1073   2                      LCDDAT = COM1 + COM2;
1074   2                      break;
1075   2              case 5:
1076   2                      LCDPTR = 6;
1077   2                      LCDDAT = COM1 + COM2;
1078   2      
1079   2                      LCDPTR = 7;
1080   2                      LCDDAT = COM0 + COM2 + COM3;
1081   2                      break;
1082   2              case 6:
1083   2                      LCDPTR = 6;
1084   2                      LCDDAT = COM1 + COM2 + COM3;
1085   2      
1086   2                      LCDPTR = 7;
1087   2                      LCDDAT = COM0 + COM2 + COM3;
1088   2                      break;
1089   2              case 7:
1090   2                      LCDPTR = 6;
1091   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1092   2      
1093   2                      LCDPTR = 7;
1094   2                      LCDDAT = COM0 + COM1 + COM2;
1095   2                      break;
1096   2              case 8:
1097   2                      LCDPTR = 6;
1098   2                      LCDDAT = COM1 + COM2 + COM3;
1099   2      
1100   2                      LCDPTR = 7;
1101   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1102   2                      break;
1103   2              case 9:
1104   2                      LCDPTR = 6;
1105   2                      LCDDAT = COM1 + COM2;
1106   2      
1107   2                      LCDPTR = 7;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/09/2017 22:10:03 PAGE 19  

1108   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1109   2                      break;
1110   2              }
1111   1      }
1112          void LCD_Clear_CAL_ICO(void) {
1113   1      //      clr_SEG6EN;
1114   1              LCDPTR = 6;
1115   1              LCDDAT &= ~ COM0;
1116   1      }
1117          void LCD_Show_CAL_ICO(void) {
1118   1      //      set_SEG6EN;
1119   1              LCDPTR = 6;
1120   1              LCDDAT |= COM0;
1121   1      }
1122          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2178    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BSP_DISPLAY
OBJECT MODULE PLACED IN .\Out\Objects\bsp_display.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_display.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common
                    -\inc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_display.ls
                    -t) OBJECT(.\Out\Objects\bsp_display.obj)

line level    source

   1          /*
   2           * bsp_display.c
   3           *
   4           *  Created on: 2017Äê6ÔÂ26ÈÕ
   5           *      Author: fly
   6           */
   7          
   8          #include "bsp.h"
   9          
  10          #define COM0    0x01
  11          #define COM1    0x02
  12          #define COM2    0x04
  13          #define COM3    0x08
  14          
  15          void LCD_display_InitHard(void) {
  16   1      
  17   1      #if 1
  18   1              P0M2 = 0x00;
  19   1              P0M1 = 0x80;
  20   1      
  21   1              P1M2 = 0x00;
  22   1              P1M1 = 0xFF;
  23   1      
  24   1              P2M2 = 0x00;
  25   1              P2M1 = 0xFF;
  26   1      
  27   1              P3M2 = 0x00;
  28   1              P3M1 = 0x0F;
  29   1      
  30   1              P4M2 = 0x00;
  31   1              P4M1 = 0xFF;
  32   1      
  33   1              P5M2 = 0x00;
  34   1              P5M1 = 0xFF;
  35   1      #endif
  36   1      
  37   1              //LCDCON = 0x40;      //;VLCD = 0.9VDD (VDD = 3.3V, VLCD = 3.0V)
  38   1              LCDCON = 0x00;                  //;1/4 duty, 1/3 bias, 150kO resistor ladder
  39   1      
  40   1              LCDCLK = 0x04;      //
  41   1      
  42   1              //enable seg pin
  43   1              LCDSEG0 = 0xFF;
  44   1              LCDSEG1 = 0xFF;
  45   1              LCDSEG2 = 0xFF;
  46   1              LCDSEG3 = 0xFF;
  47   1      
  48   1              LCDCON |= SET_BIT7;  //LCDEN = 1
  49   1      
  50   1              LCD_Clear_All();
  51   1      }
  52          
  53          void LCD_Clear_All(void) {
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 2   

  54   1              uint8_t i;
  55   1              for (i = 0; i < 32; i++) {
  56   2                      LCDPTR = i;
  57   2                      LCDDAT = 0;
  58   2              }
  59   1      }
  60          
  61          void LCD_Clear_LED_ICO(void) {
  62   1              LCDPTR = 18;
  63   1              LCDDAT &= ~ COM3;
  64   1      }
  65          void LCD_Show_LED_ICO(void) {
  66   1              LCDPTR = 18;
  67   1              LCDDAT |= COM3;
  68   1      }
  69          void LCD_Clear_FM_ICO(void) {
  70   1              LCDPTR = 14;
  71   1              LCDDAT &= ~ COM3;
  72   1      }
  73          void LCD_Show_FM_ICO(void) {
  74   1              LCDPTR = 14;
  75   1              LCDDAT |= COM3;
  76   1      }
  77          void LCD_Clear_BLUETooTH_ICO(void) {
  78   1              LCDPTR = 11;
  79   1              LCDDAT &= ~ COM3;
  80   1      }
  81          void LCD_Show_BLUETooTH_ICO(void) {
  82   1              LCDPTR = 11;
  83   1              LCDDAT |= COM3;
  84   1      }
  85          void LCD_Clear_AUX_ICO(void) {
  86   1              LCDPTR = 10;
  87   1              LCDDAT &= ~COM3;
  88   1      }
  89          void LCD_Show_AUX_ICO(void) {
  90   1              LCDPTR = 10;
  91   1              LCDDAT |= COM3;
  92   1      }
  93          void LCD_Clear_USB_ICO(void) {
  94   1              LCDPTR = 3;
  95   1              LCDDAT &= ~ COM3;
  96   1      }
  97          void LCD_Show_USB_ICO(void) {
  98   1              LCDPTR = 3;
  99   1              LCDDAT |= COM3;
 100   1      }
 101          void LCD_Clear_MHZ_ICO(void) {
 102   1              LCDPTR = 2;
 103   1              LCDDAT &= ~ COM3;
 104   1      }
 105          void LCD_Show_MHZ_ICO(void) {
 106   1              LCDPTR = 2;
 107   1              LCDDAT |= COM3;
 108   1      }
 109          void LCD_Clear_BAZOOKA_ICO(void) {
 110   1              LCDPTR = 15;
 111   1              LCDDAT &= ~ COM3;
 112   1      }
 113          void LCD_Show_BAZOOKA_ICO(void) {
 114   1              LCDPTR = 15;
 115   1              LCDDAT |= COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 3   

 116   1      }
 117          /*
 118           * Ã°ºÅ   :
 119           * */
 120          void LCD_Clear_upColon_ICO(void) {
 121   1              LCDPTR = 7;
 122   1              LCDDAT &= ~ COM3;
 123   1      }
 124          void LCD_Show_upColon_ICO(void) {
 125   1              LCDPTR = 7;
 126   1              LCDDAT |= COM3;
 127   1      }
 128          void LCD_Clear_downColon_ICO(void) {
 129   1              LCDPTR = 6;
 130   1              LCDDAT &= ~ COM3;
 131   1      }
 132          void LCD_Show_downColon_ICO(void) {
 133   1              LCDPTR = 6;
 134   1              LCDDAT |= COM3;
 135   1      }
 136          
 137          void LCD_Clear_mi(uint8_t n) {
 138   1              switch (n) {
 139   2              case 0:
 140   2                      LCDPTR = 31;
 141   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 142   2      
 143   2                      LCDPTR = 30;
 144   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 145   2      
 146   2                      LCDPTR = 29;
 147   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 148   2      
 149   2                      LCDPTR = 28;
 150   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 151   2                      break;
 152   2              case 1:
 153   2                      LCDPTR = 27;
 154   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 155   2      
 156   2                      LCDPTR = 26;
 157   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 158   2      
 159   2                      LCDPTR = 25;
 160   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 161   2      
 162   2                      LCDPTR = 24;
 163   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 164   2                      break;
 165   2              case 2:
 166   2                      LCDPTR = 23;
 167   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 168   2      
 169   2                      LCDPTR = 22;
 170   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 171   2      
 172   2                      LCDPTR = 21;
 173   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 174   2      
 175   2                      LCDPTR = 20;
 176   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 177   2                      break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 4   

 178   2              case 3:
 179   2                      LCDPTR = 19;
 180   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 181   2      
 182   2                      LCDPTR = 18;
 183   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 184   2      
 185   2                      LCDPTR = 17;
 186   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 187   2      
 188   2                      LCDPTR = 16;
 189   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 190   2                      break;
 191   2              case 4:
 192   2                      LCDPTR = 15;
 193   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 194   2      
 195   2                      LCDPTR = 14;
 196   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 197   2      
 198   2                      LCDPTR = 13;
 199   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 200   2      
 201   2                      LCDPTR = 12;
 202   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 203   2                      break;
 204   2              case 5:
 205   2                      LCDPTR = 11;
 206   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 207   2      
 208   2                      LCDPTR = 10;
 209   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 210   2      
 211   2                      LCDPTR = 9;
 212   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 213   2      
 214   2                      LCDPTR = 8;
 215   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 216   2                      break;
 217   2              case 6:
 218   2                      LCDPTR = 7;
 219   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 220   2      
 221   2                      LCDPTR = 6;
 222   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 223   2      
 224   2                      LCDPTR = 5;
 225   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 226   2      
 227   2                      LCDPTR = 4;
 228   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 229   2                      break;
 230   2              case 7:
 231   2                      LCDPTR = 3;
 232   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 233   2      
 234   2                      LCDPTR = 2;
 235   2                      LCDDAT &= ~(COM0 + COM1 + COM2);
 236   2      
 237   2                      LCDPTR = 1;
 238   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 239   2      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 5   

 240   2                      LCDPTR = 0;
 241   2                      LCDDAT &= ~(COM0 + COM1 + COM2 + COM3);
 242   2                      break;
 243   2              }
 244   1      }
 245          void LCD_Clear_mi_all(void) {
 246   1              uint8_t i = 0;
 247   1              for (i = 0; i < 8; i++) {
 248   2                      LCD_Clear_mi(i);
 249   2              }
 250   1      }
 251          void LCD_Show_mi(uint8_t n, char c) {
 252   1              switch (n) {
 253   2              case 0: {
 254   3                      switch (c) {
 255   4                      case '0':
 256   4                              LCDPTR = 31;
 257   4                              LCDDAT = COM0 + COM2;
 258   4      
 259   4                              LCDPTR = 30;
 260   4                              LCDDAT = COM0;
 261   4      
 262   4                              LCDPTR = 29;
 263   4                              LCDDAT = COM3;
 264   4      
 265   4                              LCDPTR = 28;
 266   4                              LCDDAT = COM0 + COM3;
 267   4                              break;
 268   4                      case '1':
 269   4                              LCDPTR = 31;
 270   4                              LCDDAT = 0;
 271   4      
 272   4                              LCDPTR = 30;
 273   4                              LCDDAT = 0;
 274   4      
 275   4                              LCDPTR = 29;
 276   4                              LCDDAT = 0;
 277   4      
 278   4                              LCDPTR = 28;
 279   4                              LCDDAT = COM0 + COM3;
 280   4                              break;
 281   4                      case '2':
 282   4                              LCDPTR = 31;
 283   4                              LCDDAT = COM1 + COM2;
 284   4      
 285   4                              LCDPTR = 30;
 286   4                              LCDDAT = COM0;
 287   4      
 288   4                              LCDPTR = 29;
 289   4                              LCDDAT = COM3;
 290   4      
 291   4                              LCDPTR = 28;
 292   4                              LCDDAT = COM0 + COM1;
 293   4                              break;
 294   4                      case '3':
 295   4                              LCDPTR = 31;
 296   4                              LCDDAT = COM1;
 297   4      
 298   4                              LCDPTR = 30;
 299   4                              LCDDAT = COM0;
 300   4      
 301   4                              LCDPTR = 29;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 6   

 302   4                              LCDDAT = COM3;
 303   4      
 304   4                              LCDPTR = 28;
 305   4                              LCDDAT = COM0 + COM1 + COM3;
 306   4                              break;
 307   4                      case '4':
 308   4                              LCDPTR = 31;
 309   4                              LCDDAT = COM0 +COM1;
 310   4      
 311   4                              LCDPTR = 30;
 312   4                              LCDDAT = 0;
 313   4      
 314   4                              LCDPTR = 29;
 315   4                              LCDDAT = 0;
 316   4      
 317   4                              LCDPTR = 28;
 318   4                              LCDDAT = COM0 + COM1 + COM3;
 319   4                              break;
 320   4                      case '5':
 321   4                              break;
 322   4                      case '6':
 323   4                              break;
 324   4                      case '7':
 325   4                              break;
 326   4                      case '8':
 327   4                              break;
 328   4                      case '9':
 329   4                              break;
 330   4                      case ' ':
 331   4                              LCD_Clear_mi(n);
 332   4      
 333   4                              break;
 334   4                      }
 335   3              }
 336   2                      break;
 337   2              case 1:
 338   2                      break;
 339   2              case 2:
 340   2                      break;
 341   2              case 3:
 342   2                      break;
 343   2              case 4:
 344   2                      break;
 345   2              case 5:
 346   2                      break;
 347   2              case 6:
 348   2                      break;
 349   2              case 7:
 350   2                      break;
 351   2              }
 352   1      }
 353          
 354          void LCD_Show_REP_Num(uint8_t num) {
 355   1              uint8_t ge;
 356   1              uint8_t shi;
 357   1      
 358   1              if (num > 99) {
 359   2                      return;
 360   2              }
 361   1      
 362   1              shi = num / 10;
 363   1              ge = num % 10;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 7   

 364   1              if (num > 9) {
 365   2      //              set_SEG14EN;
 366   2      //              set_SEG15EN;
 367   2                      switch (shi) {
 368   3                      case 0:
 369   3                              LCDPTR = 14;
 370   3                              LCDDAT = COM1 + COM3;
 371   3      
 372   3                              LCDPTR = 15;
 373   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 374   3                              break;
 375   3                      case 1:
 376   3                              LCDPTR = 14;
 377   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 378   3      
 379   3                              LCDPTR = 15;
 380   3                              LCDDAT = COM1 + COM2;
 381   3                              break;
 382   3                      case 2:
 383   3                              LCDPTR = 14;
 384   3                              LCDDAT = COM2 + COM3;
 385   3      
 386   3                              LCDPTR = 15;
 387   3                              LCDDAT = COM0 + COM1 + COM3;
 388   3                              break;
 389   3                      case 3:
 390   3                              LCDPTR = 14;
 391   3                              LCDDAT = COM2;
 392   3      
 393   3                              LCDPTR = 15;
 394   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 395   3                              break;
 396   3                      case 4:
 397   3                              LCDPTR = 14;
 398   3                              LCDDAT = COM1 + COM2;
 399   3      
 400   3                              LCDPTR = 15;
 401   3                              LCDDAT = COM1 + COM2;
 402   3                              break;
 403   3                      case 5:
 404   3                              LCDPTR = 14;
 405   3                              LCDDAT = COM1 + COM2;
 406   3      
 407   3                              LCDPTR = 15;
 408   3                              LCDDAT = COM0 + COM2 + COM3;
 409   3                              break;
 410   3                      case 6:
 411   3                              LCDPTR = 14;
 412   3                              LCDDAT = COM1 + COM2 + COM3;
 413   3      
 414   3                              LCDPTR = 15;
 415   3                              LCDDAT = COM0 + COM2 + COM3;
 416   3                              break;
 417   3                      case 7:
 418   3                              LCDPTR = 14;
 419   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 420   3      
 421   3                              LCDPTR = 15;
 422   3                              LCDDAT = COM0 + COM1 + COM2;
 423   3                              break;
 424   3                      case 8:
 425   3                              LCDPTR = 14;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 8   

 426   3                              LCDDAT = COM1 + COM2 + COM3;
 427   3      
 428   3                              LCDPTR = 15;
 429   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 430   3                              break;
 431   3                      case 9:
 432   3                              LCDPTR = 14;
 433   3                              LCDDAT = COM1 + COM2;
 434   3      
 435   3                              LCDPTR = 15;
 436   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 437   3                              break;
 438   3                      }
 439   2              } else {
 440   2      //              clr_SEG14EN;
 441   2      //              clr_SEG15EN;
 442   2      
 443   2                      LCDPTR = 14;
 444   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 445   2      //              LCDDAT = COM0 + COM1 + COM2 + COM3;
 446   2      
 447   2                      LCDPTR = 15;
 448   2                      LCDDAT = 0;
 449   2      //              LCDDAT = COM0 + COM1 + COM2 + COM3;
 450   2              }
 451   1      //      set_SEG16EN;
 452   1      //      set_SEG17EN;
 453   1              switch (ge) {
 454   2              case 0:
 455   2                      LCDPTR = 16;
 456   2                      LCDDAT = COM1 + COM3;
 457   2      
 458   2                      LCDPTR = 17;
 459   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 460   2                      break;
 461   2              case 1:
 462   2                      LCDPTR = 16;
 463   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 464   2      
 465   2                      LCDPTR = 17;
 466   2                      LCDDAT = COM1 + COM2;
 467   2                      break;
 468   2              case 2:
 469   2                      LCDPTR = 16;
 470   2                      LCDDAT = COM2 + COM3;
 471   2      
 472   2                      LCDPTR = 17;
 473   2                      LCDDAT = COM0 + COM1 + COM3;
 474   2                      break;
 475   2              case 3:
 476   2                      LCDPTR = 16;
 477   2                      LCDDAT = COM2;
 478   2      
 479   2                      LCDPTR = 17;
 480   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 481   2                      break;
 482   2              case 4:
 483   2                      LCDPTR = 16;
 484   2                      LCDDAT = COM1 + COM2;
 485   2      
 486   2                      LCDPTR = 17;
 487   2                      LCDDAT = COM1 + COM2;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 9   

 488   2                      break;
 489   2              case 5:
 490   2                      LCDPTR = 16;
 491   2                      LCDDAT = COM1 + COM2;
 492   2      
 493   2                      LCDPTR = 17;
 494   2                      LCDDAT = COM0 + COM2 + COM3;
 495   2                      break;
 496   2              case 6:
 497   2                      LCDPTR = 16;
 498   2                      LCDDAT = COM1 + COM2 + COM3;
 499   2      
 500   2                      LCDPTR = 17;
 501   2                      LCDDAT = COM0 + COM2 + COM3;
 502   2                      break;
 503   2              case 7:
 504   2                      LCDPTR = 16;
 505   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 506   2      
 507   2                      LCDPTR = 17;
 508   2                      LCDDAT = COM0 + COM1 + COM2;
 509   2                      break;
 510   2              case 8:
 511   2                      LCDPTR = 16;
 512   2                      LCDDAT = COM1 + COM2 + COM3;
 513   2      
 514   2                      LCDPTR = 17;
 515   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 516   2                      break;
 517   2              case 9:
 518   2                      LCDPTR = 16;
 519   2                      LCDDAT = COM1 + COM2;
 520   2      
 521   2                      LCDPTR = 17;
 522   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 523   2                      break;
 524   2              }
 525   1      }
 526          void LCD_Clear_ABCD(void) {
 527   1      //      clr_SEG18EN;
 528   1              LCDPTR = 18;
 529   1              LCDDAT = 0;
 530   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 531   1      }
 532          void LCD_Show_ABCD_all(void) {
 533   1      //      set_SEG18EN;
 534   1              LCDPTR = 18;
 535   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 536   1      }
 537          void LCD_Show_ABCD(char c) {
 538   1      //      set_SEG18EN;
 539   1              LCDPTR = 18;
 540   1      
 541   1              switch (c) {
 542   2              case 'A':
 543   2                      LCDDAT = COM0;
 544   2                      break;
 545   2              case 'B':
 546   2                      LCDDAT = COM1;
 547   2                      break;
 548   2              case 'C':
 549   2                      LCDDAT = COM2;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 10  

 550   2                      break;
 551   2              case 'D':
 552   2                      LCDDAT = COM3;
 553   2                      break;
 554   2              default:
 555   2      //              LCDPTR = 18;
 556   2      //              LCDDAT = 0;
 557   2                      break;
 558   2              }
 559   1      }
 560          void LCD_Clear_Pulls_Num(void) {
 561   1      
 562   1              LCDPTR = 8;
 563   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 564   1      //      LCDDAT = COM1 + COM2 + COM3;
 565   1      
 566   1              LCDPTR = 9;
 567   1              LCDDAT = 0;
 568   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 569   1      
 570   1              LCDPTR = 10;
 571   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 572   1      //      LCDDAT = COM1 + COM2 + COM3;
 573   1      
 574   1              LCDPTR = 11;
 575   1              LCDDAT = 0;
 576   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 577   1      
 578   1              LCDPTR = 12;
 579   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 580   1      //      LCDDAT = COM1 + COM2 + COM3;
 581   1      
 582   1              LCDPTR = 13;
 583   1              LCDDAT = 0;
 584   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 585   1      }
 586          void LCD_Show_Pulls_Num(uint16_t num) {
 587   1              uint8_t ge;
 588   1              uint8_t shi;
 589   1              uint8_t bai;
 590   1      
 591   1              if (num > 999) {
 592   2      
 593   2                      return;
 594   2              }
 595   1              bai = num / 100;
 596   1              shi = num % 100 / 10;
 597   1              ge = num % 10;
 598   1              if (num > 99) {
 599   2      //              set_SEG8EN;
 600   2      //              set_SEG9EN;
 601   2      
 602   2                      switch (bai) {
 603   3                      case 0:
 604   3                              LCDPTR = 8;
 605   3                              LCDDAT = COM1 + COM3;
 606   3      
 607   3                              LCDPTR = 9;
 608   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 609   3                              break;
 610   3                      case 1:
 611   3                              LCDPTR = 8;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 11  

 612   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 613   3      
 614   3                              LCDPTR = 9;
 615   3                              LCDDAT = COM1 + COM2;
 616   3                              break;
 617   3                      case 2:
 618   3                              LCDPTR = 8;
 619   3                              LCDDAT = COM2 + COM3;
 620   3      
 621   3                              LCDPTR = 9;
 622   3                              LCDDAT = COM0 + COM1 + COM3;
 623   3                              break;
 624   3                      case 3:
 625   3                              LCDPTR = 8;
 626   3                              LCDDAT = COM2;
 627   3      
 628   3                              LCDPTR = 9;
 629   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 630   3                              break;
 631   3                      case 4:
 632   3                              LCDPTR = 8;
 633   3                              LCDDAT = COM1 + COM2;
 634   3      
 635   3                              LCDPTR = 9;
 636   3                              LCDDAT = COM1 + COM2;
 637   3                              break;
 638   3                      case 5:
 639   3                              LCDPTR = 8;
 640   3                              LCDDAT = COM1 + COM2;
 641   3      
 642   3                              LCDPTR = 9;
 643   3                              LCDDAT = COM0 + COM2 + COM3;
 644   3                              break;
 645   3                      case 6:
 646   3                              LCDPTR = 8;
 647   3                              LCDDAT = COM1 + COM2 + COM3;
 648   3      
 649   3                              LCDPTR = 9;
 650   3                              LCDDAT = COM0 + COM2 + COM3;
 651   3                              break;
 652   3                      case 7:
 653   3                              LCDPTR = 8;
 654   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 655   3      
 656   3                              LCDPTR = 9;
 657   3                              LCDDAT = COM0 + COM1 + COM2;
 658   3                              break;
 659   3                      case 8:
 660   3                              LCDPTR = 8;
 661   3                              LCDDAT = COM1 + COM2 + COM3;
 662   3      
 663   3                              LCDPTR = 9;
 664   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 665   3                              break;
 666   3                      case 9:
 667   3                              LCDPTR = 8;
 668   3                              LCDDAT = COM1 + COM2;
 669   3      
 670   3                              LCDPTR = 9;
 671   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 672   3                              break;
 673   3                      }
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 12  

 674   2              } else {
 675   2                      LCDPTR = 8;
 676   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 677   2      
 678   2                      LCDPTR = 9;
 679   2                      LCDDAT = 0;
 680   2              }
 681   1              if (num > 9) {
 682   2                      set_SEG10EN;
 683   2                      set_SEG11EN;
 684   2      
 685   2                      switch (shi) {
 686   3                      case 0:
 687   3                              LCDPTR = 10;
 688   3                              LCDDAT = COM1 + COM3;
 689   3      
 690   3                              LCDPTR = 11;
 691   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 692   3                              break;
 693   3                      case 1:
 694   3                              LCDPTR = 10;
 695   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 696   3      
 697   3                              LCDPTR = 11;
 698   3                              LCDDAT = COM1 + COM2;
 699   3                              break;
 700   3                      case 2:
 701   3                              LCDPTR = 10;
 702   3                              LCDDAT = COM2 + COM3;
 703   3      
 704   3                              LCDPTR = 11;
 705   3                              LCDDAT = COM0 + COM1 + COM3;
 706   3                              break;
 707   3                      case 3:
 708   3                              LCDPTR = 10;
 709   3                              LCDDAT = COM2;
 710   3      
 711   3                              LCDPTR = 11;
 712   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 713   3                              break;
 714   3                      case 4:
 715   3                              LCDPTR = 10;
 716   3                              LCDDAT = COM1 + COM2;
 717   3      
 718   3                              LCDPTR = 11;
 719   3                              LCDDAT = COM1 + COM2;
 720   3                              break;
 721   3                      case 5:
 722   3                              LCDPTR = 10;
 723   3                              LCDDAT = COM1 + COM2;
 724   3      
 725   3                              LCDPTR = 11;
 726   3                              LCDDAT = COM0 + COM2 + COM3;
 727   3                              break;
 728   3                      case 6:
 729   3                              LCDPTR = 10;
 730   3                              LCDDAT = COM1 + COM2 + COM3;
 731   3      
 732   3                              LCDPTR = 11;
 733   3                              LCDDAT = COM0 + COM2 + COM3;
 734   3                              break;
 735   3                      case 7:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 13  

 736   3                              LCDPTR = 10;
 737   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 738   3      
 739   3                              LCDPTR = 11;
 740   3                              LCDDAT = COM0 + COM1 + COM2;
 741   3                              break;
 742   3                      case 8:
 743   3                              LCDPTR = 10;
 744   3                              LCDDAT = COM1 + COM2 + COM3;
 745   3      
 746   3                              LCDPTR = 11;
 747   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 748   3                              break;
 749   3                      case 9:
 750   3                              LCDPTR = 10;
 751   3                              LCDDAT = COM1 + COM2;
 752   3      
 753   3                              LCDPTR = 11;
 754   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 755   3                              break;
 756   3                      }
 757   2              } else {
 758   2      //              clr_SEG10EN;
 759   2      //              clr_SEG11EN;
 760   2                      LCDPTR = 10;
 761   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 762   2      
 763   2                      LCDPTR = 11;
 764   2                      LCDDAT = 0;
 765   2              }
 766   1      //      set_SEG12EN;
 767   1      //      set_SEG13EN;
 768   1              switch (ge) {
 769   2              case 0:
 770   2                      LCDPTR = 12;
 771   2                      LCDDAT = COM1 + COM3;
 772   2      
 773   2                      LCDPTR = 13;
 774   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 775   2                      break;
 776   2              case 1:
 777   2                      LCDPTR = 12;
 778   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 779   2      
 780   2                      LCDPTR = 13;
 781   2                      LCDDAT = COM1 + COM2;
 782   2                      break;
 783   2              case 2:
 784   2                      LCDPTR = 12;
 785   2                      LCDDAT = COM2 + COM3;
 786   2      
 787   2                      LCDPTR = 13;
 788   2                      LCDDAT = COM0 + COM1 + COM3;
 789   2                      break;
 790   2              case 3:
 791   2                      LCDPTR = 12;
 792   2                      LCDDAT = COM2;
 793   2      
 794   2                      LCDPTR = 13;
 795   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 796   2                      break;
 797   2              case 4:
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 14  

 798   2                      LCDPTR = 12;
 799   2                      LCDDAT = COM1 + COM2;
 800   2      
 801   2                      LCDPTR = 13;
 802   2                      LCDDAT = COM1 + COM2;
 803   2                      break;
 804   2              case 5:
 805   2                      LCDPTR = 12;
 806   2                      LCDDAT = COM1 + COM2;
 807   2      
 808   2                      LCDPTR = 13;
 809   2                      LCDDAT = COM0 + COM2 + COM3;
 810   2                      break;
 811   2              case 6:
 812   2                      LCDPTR = 12;
 813   2                      LCDDAT = COM1 + COM2 + COM3;
 814   2      
 815   2                      LCDPTR = 13;
 816   2                      LCDDAT = COM0 + COM2 + COM3;
 817   2                      break;
 818   2              case 7:
 819   2                      LCDPTR = 12;
 820   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
 821   2      
 822   2                      LCDPTR = 13;
 823   2                      LCDDAT = COM0 + COM1 + COM2;
 824   2                      break;
 825   2              case 8:
 826   2                      LCDPTR = 12;
 827   2                      LCDDAT = COM1 + COM2 + COM3;
 828   2      
 829   2                      LCDPTR = 13;
 830   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 831   2                      break;
 832   2              case 9:
 833   2                      LCDPTR = 12;
 834   2                      LCDDAT = COM1 + COM2;
 835   2      
 836   2                      LCDPTR = 13;
 837   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 838   2                      break;
 839   2              }
 840   1      }
 841          void LCD_Clear_QS_ICO(void) {
 842   1      //      clr_SEG2EN;
 843   1              LCDPTR = 2;
 844   1              LCDDAT &= ~ COM0;
 845   1      }
 846          void LCD_Show_QS_ICO(void) {
 847   1      //      set_SEG2EN;
 848   1              LCDPTR = 2;
 849   1              LCDDAT |= COM0;
 850   1      }
 851          void LCD_Clear_COACH_ICO(void) {
 852   1      //      clr_SEG4EN;
 853   1              LCDPTR = 4;
 854   1              LCDDAT &= ~COM0;
 855   1      }
 856          void LCD_Show_COACH_ICO(void) {
 857   1      //      set_SEG4EN;
 858   1              LCDPTR = 4;
 859   1              LCDDAT = COM0;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 15  

 860   1      }
 861          void LCD_Clear_Line_down(void) {
 862   1      //      clr_SEG8EN;
 863   1              LCDPTR = 8;
 864   1              LCDDAT &= ~COM0;
 865   1      }
 866          void LCD_Show_Line_down(void) {
 867   1      //      set_SEG8EN;
 868   1              LCDPTR = 8;
 869   1              LCDDAT |= COM0;
 870   1      }
 871          void LCD_Clear_Heart_ICO(void) {
 872   1      //      clr_SEG0EN;
 873   1              LCDPTR = 0;
 874   1              LCDDAT &= ~COM0;
 875   1      }
 876          void LCD_Show_Heart_ICO(void) {
 877   1      //      set_SEG0EN;
 878   1              LCDPTR = 0;
 879   1              LCDDAT |= COM0;
 880   1      }
 881          void LCD_Clear_CAL_Num(void) {
 882   1      
 883   1              LCDPTR = 0;
 884   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 885   1      //      LCDDAT = COM1 + COM2 + COM3;
 886   1      
 887   1              LCDPTR = 1;
 888   1              LCDDAT = 0;
 889   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 890   1      
 891   1              LCDPTR = 2;
 892   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 893   1      //      LCDDAT = COM1 + COM2 + COM3;
 894   1      
 895   1              LCDPTR = 3;
 896   1              LCDDAT = 0;
 897   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 898   1      
 899   1              LCDPTR = 4;
 900   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 901   1      //      LCDDAT = COM1 + COM2 + COM3;
 902   1      
 903   1              LCDPTR = 5;
 904   1              LCDDAT = 0;
 905   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 906   1      
 907   1              LCDPTR = 6;
 908   1              LCDDAT &= ~(COM1 + COM2 + COM3);
 909   1      //      LCDDAT = COM1 + COM2 + COM3;
 910   1      
 911   1              LCDPTR = 7;
 912   1              LCDDAT = 0;
 913   1      //      LCDDAT = COM0 + COM1 + COM2 + COM3;
 914   1      }
 915          void LCD_Show_CAL_Num(uint16_t num) {
 916   1              uint8_t ge;
 917   1              uint8_t shi;
 918   1              uint8_t bai;
 919   1              uint8_t qian;
 920   1      
 921   1              if (num > 9999) {
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 16  

 922   2                      return;
 923   2              }
 924   1              qian = num / 1000;
 925   1              bai = num % 1000 / 100;
 926   1              shi = num % 100 / 10;
 927   1              ge = num % 10;
 928   1              if (num > 999) {
 929   2      //              set_SEG0EN;
 930   2      //              set_SEG1EN;
 931   2      
 932   2                      switch (qian) {
 933   3                      case 0:
 934   3                              LCDPTR = 0;
 935   3                              LCDDAT = COM1 + COM3;
 936   3      
 937   3                              LCDPTR = 1;
 938   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 939   3                              break;
 940   3                      case 1:
 941   3                              LCDPTR = 0;
 942   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 943   3      
 944   3                              LCDPTR = 1;
 945   3                              LCDDAT = COM1 + COM2;
 946   3                              break;
 947   3                      case 2:
 948   3                              LCDPTR = 0;
 949   3                              LCDDAT = COM2 + COM3;
 950   3      
 951   3                              LCDPTR = 1;
 952   3                              LCDDAT = COM0 + COM1 + COM3;
 953   3                              break;
 954   3                      case 3:
 955   3                              LCDPTR = 0;
 956   3                              LCDDAT = COM2;
 957   3      
 958   3                              LCDPTR = 1;
 959   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 960   3                              break;
 961   3                      case 4:
 962   3                              LCDPTR = 0;
 963   3                              LCDDAT = COM1 + COM2;
 964   3      
 965   3                              LCDPTR = 1;
 966   3                              LCDDAT = COM1 + COM2;
 967   3                              break;
 968   3                      case 5:
 969   3                              LCDPTR = 0;
 970   3                              LCDDAT = COM1 + COM2;
 971   3      
 972   3                              LCDPTR = 1;
 973   3                              LCDDAT = COM0 + COM2 + COM3;
 974   3                              break;
 975   3                      case 6:
 976   3                              LCDPTR = 0;
 977   3                              LCDDAT = COM1 + COM2 + COM3;
 978   3      
 979   3                              LCDPTR = 1;
 980   3                              LCDDAT = COM0 + COM2 + COM3;
 981   3                              break;
 982   3                      case 7:
 983   3                              LCDPTR = 0;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 17  

 984   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
 985   3      
 986   3                              LCDPTR = 1;
 987   3                              LCDDAT = COM0 + COM1 + COM2;
 988   3                              break;
 989   3                      case 8:
 990   3                              LCDPTR = 0;
 991   3                              LCDDAT = COM1 + COM2 + COM3;
 992   3      
 993   3                              LCDPTR = 1;
 994   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 995   3                              break;
 996   3                      case 9:
 997   3                              LCDPTR = 0;
 998   3                              LCDDAT = COM1 + COM2;
 999   3      
1000   3                              LCDPTR = 1;
1001   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1002   3                              break;
1003   3                      }
1004   2              } else {
1005   2                      LCDPTR = 0;
1006   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1007   2      
1008   2                      LCDPTR = 1;
1009   2                      LCDDAT = 0;
1010   2              }
1011   1              if (num > 99) {
1012   2      
1013   2                      switch (bai) {
1014   3                      case 0:
1015   3                              LCDPTR = 2;
1016   3                              LCDDAT = COM1 + COM3;
1017   3      
1018   3                              LCDPTR = 3;
1019   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1020   3                              break;
1021   3                      case 1:
1022   3                              LCDPTR = 2;
1023   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1024   3      
1025   3                              LCDPTR = 3;
1026   3                              LCDDAT = COM1 + COM2;
1027   3                              break;
1028   3                      case 2:
1029   3                              LCDPTR = 2;
1030   3                              LCDDAT = COM2 + COM3;
1031   3      
1032   3                              LCDPTR = 3;
1033   3                              LCDDAT = COM0 + COM1 + COM3;
1034   3                              break;
1035   3                      case 3:
1036   3                              LCDPTR = 2;
1037   3                              LCDDAT = COM2;
1038   3      
1039   3                              LCDPTR = 3;
1040   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1041   3                              break;
1042   3                      case 4:
1043   3                              LCDPTR = 2;
1044   3                              LCDDAT = COM1 + COM2;
1045   3      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 18  

1046   3                              LCDPTR = 3;
1047   3                              LCDDAT = COM1 + COM2;
1048   3                              break;
1049   3                      case 5:
1050   3                              LCDPTR = 2;
1051   3                              LCDDAT = COM1 + COM2;
1052   3      
1053   3                              LCDPTR = 3;
1054   3                              LCDDAT = COM0 + COM2 + COM3;
1055   3                              break;
1056   3                      case 6:
1057   3                              LCDPTR = 2;
1058   3                              LCDDAT = COM1 + COM2 + COM3;
1059   3      
1060   3                              LCDPTR = 3;
1061   3                              LCDDAT = COM0 + COM2 + COM3;
1062   3                              break;
1063   3                      case 7:
1064   3                              LCDPTR = 2;
1065   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1066   3      
1067   3                              LCDPTR = 3;
1068   3                              LCDDAT = COM0 + COM1 + COM2;
1069   3                              break;
1070   3                      case 8:
1071   3                              LCDPTR = 2;
1072   3                              LCDDAT = COM1 + COM2 + COM3;
1073   3      
1074   3                              LCDPTR = 3;
1075   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1076   3                              break;
1077   3                      case 9:
1078   3                              LCDPTR = 2;
1079   3                              LCDDAT = COM1 + COM2;
1080   3      
1081   3                              LCDPTR = 3;
1082   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1083   3                              break;
1084   3                      }
1085   2              } else {
1086   2      //              clr_SEG2EN;
1087   2      //              clr_SEG3EN;
1088   2                      LCDPTR = 2;
1089   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1090   2      
1091   2                      LCDPTR = 3;
1092   2                      LCDDAT = 0;
1093   2              }
1094   1              if (num > 9) {
1095   2      //              set_SEG4EN;
1096   2      //              set_SEG5EN;
1097   2      
1098   2                      switch (shi) {
1099   3                      case 0:
1100   3                              LCDPTR = 4;
1101   3                              LCDDAT = COM1 + COM3;
1102   3      
1103   3                              LCDPTR = 5;
1104   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1105   3                              break;
1106   3                      case 1:
1107   3                              LCDPTR = 4;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 19  

1108   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1109   3      
1110   3                              LCDPTR = 5;
1111   3                              LCDDAT = COM1 + COM2;
1112   3                              break;
1113   3                      case 2:
1114   3                              LCDPTR = 4;
1115   3                              LCDDAT = COM2 + COM3;
1116   3      
1117   3                              LCDPTR = 5;
1118   3                              LCDDAT = COM0 + COM1 + COM3;
1119   3                              break;
1120   3                      case 3:
1121   3                              LCDPTR = 4;
1122   3                              LCDDAT = COM2;
1123   3      
1124   3                              LCDPTR = 5;
1125   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1126   3                              break;
1127   3                      case 4:
1128   3                              LCDPTR = 4;
1129   3                              LCDDAT = COM1 + COM2;
1130   3      
1131   3                              LCDPTR = 5;
1132   3                              LCDDAT = COM1 + COM2;
1133   3                              break;
1134   3                      case 5:
1135   3                              LCDPTR = 4;
1136   3                              LCDDAT = COM1 + COM2;
1137   3      
1138   3                              LCDPTR = 5;
1139   3                              LCDDAT = COM0 + COM2 + COM3;
1140   3                              break;
1141   3                      case 6:
1142   3                              LCDPTR = 4;
1143   3                              LCDDAT = COM1 + COM2 + COM3;
1144   3      
1145   3                              LCDPTR = 5;
1146   3                              LCDDAT = COM0 + COM2 + COM3;
1147   3                              break;
1148   3                      case 7:
1149   3                              LCDPTR = 4;
1150   3                              LCDDAT &= ~(COM1 + COM2 + COM3);
1151   3      
1152   3                              LCDPTR = 5;
1153   3                              LCDDAT = COM0 + COM1 + COM2;
1154   3                              break;
1155   3                      case 8:
1156   3                              LCDPTR = 4;
1157   3                              LCDDAT = COM1 + COM2 + COM3;
1158   3      
1159   3                              LCDPTR = 5;
1160   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1161   3                              break;
1162   3                      case 9:
1163   3                              LCDPTR = 4;
1164   3                              LCDDAT = COM1 + COM2;
1165   3      
1166   3                              LCDPTR = 5;
1167   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
1168   3                              break;
1169   3                      }
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 20  

1170   2              } else {
1171   2      //              clr_SEG4EN;
1172   2      //              clr_SEG5EN;
1173   2                      LCDPTR = 4;
1174   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1175   2      
1176   2                      LCDPTR = 5;
1177   2                      LCDDAT = 0;
1178   2              }
1179   1      
1180   1      //      set_SEG6EN;
1181   1      //      set_SEG7EN;
1182   1              switch (ge) {
1183   2              case 0:
1184   2                      LCDPTR = 6;
1185   2                      LCDDAT = COM1 + COM3;
1186   2      
1187   2                      LCDPTR = 7;
1188   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1189   2                      break;
1190   2              case 1:
1191   2                      LCDPTR = 6;
1192   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1193   2      
1194   2                      LCDPTR = 7;
1195   2                      LCDDAT = COM1 + COM2;
1196   2                      break;
1197   2              case 2:
1198   2                      LCDPTR = 6;
1199   2                      LCDDAT = COM2 + COM3;
1200   2      
1201   2                      LCDPTR = 7;
1202   2                      LCDDAT = COM0 + COM1 + COM3;
1203   2                      break;
1204   2              case 3:
1205   2                      LCDPTR = 6;
1206   2                      LCDDAT = COM2;
1207   2      
1208   2                      LCDPTR = 7;
1209   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1210   2                      break;
1211   2              case 4:
1212   2                      LCDPTR = 6;
1213   2                      LCDDAT = COM1 + COM2;
1214   2      
1215   2                      LCDPTR = 7;
1216   2                      LCDDAT = COM1 + COM2;
1217   2                      break;
1218   2              case 5:
1219   2                      LCDPTR = 6;
1220   2                      LCDDAT = COM1 + COM2;
1221   2      
1222   2                      LCDPTR = 7;
1223   2                      LCDDAT = COM0 + COM2 + COM3;
1224   2                      break;
1225   2              case 6:
1226   2                      LCDPTR = 6;
1227   2                      LCDDAT = COM1 + COM2 + COM3;
1228   2      
1229   2                      LCDPTR = 7;
1230   2                      LCDDAT = COM0 + COM2 + COM3;
1231   2                      break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       08/10/2017 22:48:22 PAGE 21  

1232   2              case 7:
1233   2                      LCDPTR = 6;
1234   2                      LCDDAT &= ~(COM1 + COM2 + COM3);
1235   2      
1236   2                      LCDPTR = 7;
1237   2                      LCDDAT = COM0 + COM1 + COM2;
1238   2                      break;
1239   2              case 8:
1240   2                      LCDPTR = 6;
1241   2                      LCDDAT = COM1 + COM2 + COM3;
1242   2      
1243   2                      LCDPTR = 7;
1244   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1245   2                      break;
1246   2              case 9:
1247   2                      LCDPTR = 6;
1248   2                      LCDDAT = COM1 + COM2;
1249   2      
1250   2                      LCDPTR = 7;
1251   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1252   2                      break;
1253   2              }
1254   1      }
1255          void LCD_Clear_CAL_ICO(void) {
1256   1      //      clr_SEG6EN;
1257   1              LCDPTR = 6;
1258   1              LCDDAT &= ~ COM0;
1259   1      }
1260          void LCD_Show_CAL_ICO(void) {
1261   1      //      set_SEG6EN;
1262   1              LCDPTR = 6;
1263   1              LCDDAT |= COM0;
1264   1      }
1265          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2526    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

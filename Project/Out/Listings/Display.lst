C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN .\Out\Objects\Display.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Common\src\Display.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\
                    -inc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\Display.lst) OB
                    -JECT(.\Out\Objects\Display.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Jan/07/2015
  12          //********************************************************************************************************
             -***
  13          
  14          #include <stdio.h>
  15          #include <N76E616.h>
  16          #include "Version.h"
  17          #include "Typedef.h"
  18          #include "Define.h"
  19          #include "SFR_Macro.h"
  20          #include "Common.h"
  21          #include "Delay.h"
  22          #include "Display.h"
  23          
  24          void LCD_Initial(void)
  25          {
  26   1          //step1: enable clock source
  27   1          clr_EXTEN1;
  28   1          set_EXTEN0;
  29   1          
  30   1          //step2: check ready
  31   1          while((CKSWT&SET_BIT6)==0);
  32   1      
  33   1          LCDCLK = 0x13;      //;Select LXT as LCD clock source
  34   1          
  35   1          Set_All_GPIO_Input_Mode();
  36   1      
  37   1          LCDCON = 0x40;      //;VLCD = 0.9VDD (VDD = 3.3V, VLCD = 3.0V)
  38   1                              //;1/4 duty, 1/3 bias, 150kO resistor ladder
  39   1          
  40   1          LCDSEG0=0xff;       //Enable all segments except SEG29 and SEG30(shared with LXT's Xin and Xout)
  41   1          LCDSEG1=0xff;
  42   1          LCDSEG2=0xff;
  43   1          LCDSEG3=0x9f;
  44   1      
  45   1          LCDCON |= SET_BIT7;  //LCDEN = 1
  46   1      }
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 2   

  47          
  48          void LCD_Display_All_Clear()
  49          {
  50   1          unsigned char i;
  51   1      
  52   1          for(i=0;i<32;i++)       //clear all previous pattern
  53   1          {
  54   2              LCDPTR  = i;
  55   2              LCDDAT  = 0;
  56   2          }
  57   1      }
  58          
  59          void LCD_Try_Run()
  60          {
  61   1          unsigned char j;
  62   1      
  63   1          for(j=0;j<32;j++)
  64   1          {
  65   2                  LCDPTR  = j;
  66   2                  LCDDAT  = 0xff;
  67   2          }
  68   1          Timer0_Delay1ms(1000);
  69   1      
  70   1          LCD_Blank();
  71   1          LCD_Blank();
  72   1      
  73   1          for(j=0;j<10;j++)
  74   1          {
  75   2                  LCD_Display_All_Clear();
  76   2                  LCD_Display_Num_1(j);
  77   2                  LCD_Display_Num_2(j);
  78   2                  LCD_Display_Num_3(j);
  79   2                  LCD_Display_Num_4(j);
  80   2                  LCD_Display_Num_5(j);
  81   2                  LCD_Display_Num_6(j);
  82   2                  LCD_Display_Num_7(j);
  83   2                  Timer0_Delay1ms(300);
  84   2          }
  85   1          LCD_Blank();
  86   1          Timer0_Delay1ms(500);
  87   1      }
  88          
  89          void LCD_Blank()
  90          {
  91   1          LCDSEG0 = 0x00;
  92   1          LCDSEG1 = 0x00;
  93   1          LCDSEG2 = 0x00;
  94   1          LCDSEG3 = 0x00;
  95   1      
  96   1          Timer0_Delay1ms(500);
  97   1      
  98   1          LCDSEG0=0xff;
  99   1          LCDSEG1=0xff;
 100   1          LCDSEG2=0xff;
 101   1          LCDSEG3=0x9f;
 102   1      
 103   1          Timer0_Delay1ms(500);
 104   1      }    
 105          
 106          void LCD_Display_Num_1(unsigned char u8Num_1)
 107          {
 108   1          switch (u8Num_1)
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 3   

 109   1          {
 110   2              case E_NUM_0:    //show "0" -- 1'st 14seg Display
 111   2              {
 112   3                  LCDPTR  = 0;
 113   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 114   3      
 115   3                  LCDPTR  = 28;
 116   3                  LCDDAT  = (COM1 + COM2);
 117   3              }break;
 118   2              
 119   2              case E_NUM_1:    //show "1" -- 1'st 14seg Display
 120   2              {
 121   3                  LCDPTR  = 0;
 122   3                  LCDDAT  = (COM1 + COM2);
 123   3              }break;
 124   2              
 125   2              case E_NUM_2:    //show "2" -- 1'st 14seg Display
 126   2              {
 127   3                  LCDPTR  = 0;
 128   3                  LCDDAT  = (COM0 + COM2 + COM3);
 129   3      
 130   3                  LCDPTR  = 31;
 131   3                  LCDDAT  = COM2;
 132   3      
 133   3                  LCDPTR  = 1;
 134   3                  LCDDAT  = COM1;
 135   3      
 136   3                  LCDPTR  = 28;
 137   3                  LCDDAT  = COM1;
 138   3              }break;
 139   2              
 140   2              case E_NUM_3:    //show "3" -- 1'st 14seg Display
 141   2              {
 142   3                  LCDPTR  = 0;
 143   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 144   3      
 145   3                  LCDPTR  = 31;
 146   3                  LCDDAT  = COM2;
 147   3      
 148   3                  LCDPTR  = 1;
 149   3                  LCDDAT  = COM1;
 150   3              }break;
 151   2              
 152   2              case E_NUM_4:    //show "4" -- 1'st 14seg Display
 153   2              {
 154   3                  LCDPTR  = 28;
 155   3                  LCDDAT  = COM2;
 156   3      
 157   3                  LCDPTR  = 31;
 158   3                  LCDDAT  = COM2;
 159   3      
 160   3                  LCDPTR  = 1;
 161   3                  LCDDAT  = COM1;
 162   3      
 163   3                  LCDPTR  = 0;
 164   3                  LCDDAT  = (COM1 + COM2);
 165   3              }break;
 166   2              
 167   2              case E_NUM_5:    //show "5" -- 1'st 14seg Display
 168   2              {
 169   3                  LCDPTR  = 0;
 170   3                  LCDDAT  = (COM0 + COM1 + COM3);
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 4   

 171   3      
 172   3                  LCDPTR  = 31;
 173   3                  LCDDAT  = COM2;
 174   3      
 175   3                  LCDPTR  = 1;
 176   3                  LCDDAT  = COM1;
 177   3      
 178   3                  LCDPTR  = 28;
 179   3                  LCDDAT  = COM2;
 180   3              }break;
 181   2              
 182   2              case E_NUM_6:    //show "6" -- 1'st 14seg Display
 183   2              {
 184   3                  LCDPTR  = 0;
 185   3                  LCDDAT  = (COM0 + COM1 + COM3);
 186   3      
 187   3                  LCDPTR  = 28;
 188   3                  LCDDAT  = (COM1 + COM2);
 189   3      
 190   3                  LCDPTR  = 31;
 191   3                  LCDDAT  = COM2;
 192   3      
 193   3                  LCDPTR  = 1;
 194   3                  LCDDAT  = COM1;
 195   3              }break;
 196   2              
 197   2              case E_NUM_7:    //show "7" -- 1'st 14seg Display
 198   2              {
 199   3                  LCDPTR  = 0;                            
 200   3                  LCDDAT  = (COM1 + COM2 + COM3);         
 201   3          
 202   3                  LCDPTR  = 28;                            
 203   3                  LCDDAT  = COM2;                         
 204   3              }break;
 205   2              
 206   2              case E_NUM_8:    //show "8" -- 1'st 14seg Display
 207   2              {
 208   3                  LCDPTR  = 0;
 209   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 210   3                  
 211   3                  LCDPTR  = 28;
 212   3                  LCDDAT  = (COM1 + COM2);
 213   3                  
 214   3                  LCDPTR  = 31;
 215   3                  LCDDAT  = COM2;
 216   3      
 217   3                  LCDPTR  = 1;
 218   3                  LCDDAT  = COM1;
 219   3              }break;
 220   2              
 221   2              case E_NUM_9:    //show "9" -- 1'st 14seg Display
 222   2              {
 223   3                  LCDPTR  = 0;
 224   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 225   3                  
 226   3                  LCDPTR  = 28;
 227   3                  LCDDAT  = COM2;
 228   3                  
 229   3                  LCDPTR  = 31;
 230   3                  LCDDAT  = COM2;
 231   3      
 232   3                  LCDPTR  = 1;
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 5   

 233   3                  LCDDAT  = COM1;
 234   3              }break;
 235   2          }
 236   1      }
 237          
 238          void LCD_Display_Num_2(unsigned char u8Num_2)
 239          {
 240   1          switch (u8Num_2)
 241   1          {
 242   2              case E_NUM_0:    //show "0" -- 2'nd 14seg Display
 243   2              {
 244   3                  LCDPTR  = 4;
 245   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 246   3      
 247   3                  LCDPTR  = 2;
 248   3                  LCDDAT  = (COM1 + COM2);
 249   3              }break;
 250   2              
 251   2              case E_NUM_1:    //show "1" -- 2'nd 14seg Display
 252   2              {
 253   3                  LCDPTR  = 4;
 254   3                  LCDDAT  = (COM1 + COM2);
 255   3              }break;
 256   2              
 257   2              case E_NUM_2:    //show "2" -- 2'nd 14seg Display
 258   2              {
 259   3                  LCDPTR  = 4;
 260   3                  LCDDAT  = (COM0 + COM2 + COM3);
 261   3      
 262   3                  LCDPTR  = 5;
 263   3                  LCDDAT  = COM1;
 264   3      
 265   3                  LCDPTR  = 3;
 266   3                  LCDDAT  = COM2;
 267   3      
 268   3                  LCDPTR  = 2;
 269   3                  LCDDAT  = COM1;
 270   3              }break;
 271   2              
 272   2              case E_NUM_3:    //show "3" -- 2'nd 14seg Display
 273   2              {
 274   3                  LCDPTR  = 4;
 275   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 276   3      
 277   3                  LCDPTR  = 5;
 278   3                  LCDDAT  = COM1;
 279   3      
 280   3                  LCDPTR  = 3;
 281   3                  LCDDAT  = COM2;
 282   3              }break;
 283   2              
 284   2              case E_NUM_4:    //show "4" -- 2'nd 14seg Display
 285   2              {
 286   3                  LCDPTR  = 2;
 287   3                  LCDDAT  = COM2;
 288   3      
 289   3                  LCDPTR  = 3;
 290   3                  LCDDAT  = COM2;
 291   3      
 292   3                  LCDPTR  = 5;
 293   3                  LCDDAT  = COM1;
 294   3      
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 6   

 295   3                  LCDPTR  = 4;
 296   3                  LCDDAT  = (COM1 + COM2);
 297   3              }break;
 298   2              
 299   2              case E_NUM_5:    //show "5" -- 2'nd 14seg Display
 300   2              {
 301   3                  LCDPTR  = 4;
 302   3                  LCDDAT  = (COM0 + COM1 + COM3);
 303   3      
 304   3                  LCDPTR  = 2;
 305   3                  LCDDAT  = COM2;
 306   3      
 307   3                  LCDPTR  = 3;
 308   3                  LCDDAT  = COM2;
 309   3      
 310   3                  LCDPTR  = 5;
 311   3                  LCDDAT  = COM1;
 312   3              }break;
 313   2              
 314   2              case E_NUM_6:    //show "6" -- 2'nd 14seg Display
 315   2              {
 316   3                  LCDPTR  = 4;
 317   3                  LCDDAT  = (COM0 + COM1 + COM3);
 318   3      
 319   3                  LCDPTR  = 2;
 320   3                  LCDDAT  = (COM1 + COM2);
 321   3      
 322   3                  LCDPTR  = 3;
 323   3                  LCDDAT  = COM2;
 324   3      
 325   3                  LCDPTR  = 5;
 326   3                  LCDDAT  = COM1;
 327   3              }break;
 328   2              
 329   2              case E_NUM_7:    //show "7" -- 2'nd 14seg Display
 330   2              {
 331   3                  LCDPTR  = 4;                            
 332   3                  LCDDAT  = (COM1 + COM2 + COM3);         
 333   3          
 334   3                  LCDPTR  = 2;                            
 335   3                  LCDDAT  = COM2;                         
 336   3              }break;
 337   2              
 338   2              case E_NUM_8:    //show "8" -- 2'nd 14seg Display
 339   2              {
 340   3                  LCDPTR  = 4;
 341   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 342   3                  
 343   3                  LCDPTR  = 2;
 344   3                  LCDDAT  = (COM1 + COM2);
 345   3                  
 346   3                  LCDPTR  = 3;
 347   3                  LCDDAT  = COM2;
 348   3                  
 349   3                  LCDPTR  = 5;
 350   3                  LCDDAT  = COM1;
 351   3              }break;
 352   2              
 353   2              case E_NUM_9:    //show "9" -- 2'nd 14seg Display
 354   2              {
 355   3                  LCDPTR  = 4;
 356   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 7   

 357   3                  
 358   3                  LCDPTR  = 2;
 359   3                  LCDDAT  = COM2;
 360   3                  
 361   3                  LCDPTR  = 3;
 362   3                  LCDDAT  = COM2;
 363   3                  
 364   3                  LCDPTR  = 5;
 365   3                  LCDDAT  = COM1;
 366   3              }break;
 367   2          }
 368   1      }
 369          
 370          void LCD_Display_Num_3(unsigned char u8Num_3)
 371          {
 372   1          switch (u8Num_3)
 373   1          {
 374   2              case E_NUM_0:    //show "0" -- 3'rd 14seg Display
 375   2              {
 376   3                  LCDPTR  = 8;
 377   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 378   3      
 379   3                  LCDPTR  = 6;
 380   3                  LCDDAT  = (COM1 + COM2);
 381   3              }break;
 382   2              
 383   2              case E_NUM_1:    //show "1" -- 3'rd 14seg Display
 384   2              {
 385   3                  LCDPTR  = 8;
 386   3                  LCDDAT  = (COM1 + COM2);
 387   3              }break;
 388   2              
 389   2              case E_NUM_2:    //show "2" -- 3'rd 14seg Display
 390   2              {
 391   3                  LCDPTR  = 8;
 392   3                  LCDDAT  = (COM0 + COM2 + COM3);
 393   3      
 394   3                  LCDPTR  = 9;
 395   3                  LCDDAT  = COM1;
 396   3      
 397   3                  LCDPTR  = 7;
 398   3                  LCDDAT  = COM2;
 399   3      
 400   3                  LCDPTR  = 6;
 401   3                  LCDDAT  = COM1;
 402   3              }break;
 403   2              
 404   2              case E_NUM_3:    //show "3" -- 3'rd 14seg Display
 405   2              {
 406   3                  LCDPTR  = 8;
 407   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 408   3      
 409   3                  LCDPTR  = 9;
 410   3                  LCDDAT  = COM1;
 411   3      
 412   3                  LCDPTR  = 7;
 413   3                  LCDDAT  = COM2;
 414   3              }break;
 415   2              
 416   2              case E_NUM_4:    //show "4" -- 3'rd 14seg Display
 417   2              {
 418   3                  LCDPTR  = 6;
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 8   

 419   3                  LCDDAT  = COM2;
 420   3      
 421   3                  LCDPTR  = 9;
 422   3                  LCDDAT  = COM1;
 423   3      
 424   3                  LCDPTR  = 7;
 425   3                  LCDDAT  = COM2;
 426   3      
 427   3                  LCDPTR  = 8;
 428   3                  LCDDAT  = (COM1 + COM2);
 429   3              }break;
 430   2              
 431   2              case E_NUM_5:    //show "5" -- 3'rd 14seg Display
 432   2              {
 433   3                  LCDPTR  = 8;
 434   3                  LCDDAT  = (COM0 + COM1 + COM3);
 435   3      
 436   3                  LCDPTR  = 6;
 437   3                  LCDDAT  = COM2;
 438   3      
 439   3                  LCDPTR  = 9;
 440   3                  LCDDAT  = COM1;
 441   3      
 442   3                  LCDPTR  = 7;
 443   3                  LCDDAT  = COM2;
 444   3              }break;
 445   2              
 446   2              case E_NUM_6:    //show "6" -- 3'rd 14seg Display
 447   2              {
 448   3                  LCDPTR  = 8;
 449   3                  LCDDAT  = (COM0 + COM1 + COM3);
 450   3      
 451   3                  LCDPTR  = 6;
 452   3                  LCDDAT  = (COM1 + COM2);
 453   3      
 454   3                  LCDPTR  = 9;
 455   3                  LCDDAT  = COM1;
 456   3      
 457   3                  LCDPTR  = 7;
 458   3                  LCDDAT  = COM2;
 459   3              }break;
 460   2              
 461   2              case E_NUM_7:    //show "7" -- 3'rd 14seg Display
 462   2              {
 463   3                  LCDPTR  = 8;                            
 464   3                  LCDDAT  = (COM1 + COM2 + COM3);         
 465   3          
 466   3                  LCDPTR  = 6;                            
 467   3                  LCDDAT  = COM2;                         
 468   3              }break;
 469   2              
 470   2              case E_NUM_8:    //show "8" -- 3'rd 14seg Display
 471   2              {
 472   3                  LCDPTR  = 8;
 473   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 474   3                  
 475   3                  LCDPTR  = 6;
 476   3                  LCDDAT  = (COM1 + COM2);
 477   3                  
 478   3                  LCDPTR  = 9;
 479   3                  LCDDAT  = COM1;
 480   3      
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 9   

 481   3                  LCDPTR  = 7;
 482   3                  LCDDAT  = COM2;
 483   3              }break;
 484   2              
 485   2              case E_NUM_9:    //show "9" -- 3'rd 14seg Display
 486   2              {
 487   3                  LCDPTR  = 8;
 488   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 489   3                  
 490   3                  LCDPTR  = 6;
 491   3                  LCDDAT  = COM2;
 492   3                  
 493   3                  LCDPTR  = 9;
 494   3                  LCDDAT  = COM1;
 495   3      
 496   3                  LCDPTR  = 7;
 497   3                  LCDDAT  = COM2;
 498   3              }break;
 499   2          }
 500   1      }
 501          
 502          void LCD_Display_Num_4(unsigned char u8Num_4)
 503          {
 504   1          switch (u8Num_4)
 505   1          {
 506   2              case E_NUM_0:    //show "0" -- 4'th 14seg Display
 507   2              {
 508   3                  LCDPTR  = 12;
 509   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 510   3      
 511   3                  LCDPTR  = 10;
 512   3                  LCDDAT  = (COM1 + COM2);
 513   3              }break;
 514   2              
 515   2              case E_NUM_1:    //show "1" -- 4'th 14seg Display
 516   2              {
 517   3                  LCDPTR  = 12;
 518   3                  LCDDAT  = (COM1 + COM2);
 519   3              }break;
 520   2              
 521   2              case E_NUM_2:    //show "2" -- 4'th 14seg Display
 522   2              {
 523   3                  LCDPTR  = 12;
 524   3                  LCDDAT  = (COM0 + COM2 + COM3);
 525   3      
 526   3                  LCDPTR  = 13;
 527   3                  LCDDAT  = COM1;
 528   3      
 529   3                  LCDPTR  = 11;
 530   3                  LCDDAT  = COM2;
 531   3      
 532   3                  LCDPTR  = 10;
 533   3                  LCDDAT  = COM1;
 534   3              }break;
 535   2              
 536   2              case E_NUM_3:    //show "3" -- 4'th 14seg Display
 537   2              {
 538   3                  LCDPTR  = 12;
 539   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 540   3      
 541   3                  LCDPTR  = 13;
 542   3                  LCDDAT  = COM1;
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 10  

 543   3      
 544   3                  LCDPTR  = 11;
 545   3                  LCDDAT  = COM2;
 546   3              }break;
 547   2              
 548   2              case E_NUM_4:    //show "4" -- 4'th 14seg Display
 549   2              {
 550   3                  LCDPTR  = 10;
 551   3                  LCDDAT  = COM2;
 552   3      
 553   3                  LCDPTR  = 13;
 554   3                  LCDDAT  = COM1;
 555   3      
 556   3                  LCDPTR  = 11;
 557   3                  LCDDAT  = COM2;
 558   3      
 559   3                  LCDPTR  = 12;
 560   3                  LCDDAT  = (COM1 + COM2);
 561   3              }break;
 562   2              
 563   2              case E_NUM_5:    //show "5" -- 4'th 14seg Display
 564   2              {
 565   3                  LCDPTR  = 12;
 566   3                  LCDDAT  = (COM0 + COM1 + COM3);
 567   3      
 568   3                  LCDPTR  = 10;
 569   3                  LCDDAT  = COM2;
 570   3      
 571   3                  LCDPTR  = 13;
 572   3                  LCDDAT  = COM1;
 573   3      
 574   3                  LCDPTR  = 11;
 575   3                  LCDDAT  = COM2;
 576   3              }break;
 577   2              
 578   2              case E_NUM_6:    //show "6" -- 4'th 14seg Display
 579   2              {
 580   3                  LCDPTR  = 12;
 581   3                  LCDDAT  = (COM0 + COM1 + COM3);
 582   3      
 583   3                  LCDPTR  = 10;
 584   3                  LCDDAT  = (COM1 + COM2);
 585   3      
 586   3                  LCDPTR  = 13;
 587   3                  LCDDAT  = COM1;
 588   3      
 589   3                  LCDPTR  = 11;
 590   3                  LCDDAT  = COM2;
 591   3              }break;
 592   2              
 593   2              case E_NUM_7:    //show "7" -- 4'th 14seg Display
 594   2              {
 595   3                  LCDPTR  = 10;                            
 596   3                  LCDDAT  = COM2;                         
 597   3      
 598   3                  LCDPTR  = 12;                            
 599   3                  LCDDAT  = (COM1 + COM2 + COM3);         
 600   3          
 601   3              }break;
 602   2              
 603   2              case E_NUM_8:    //show "8" -- 4'th 14seg Display
 604   2              {
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 11  

 605   3                  LCDPTR  = 12;
 606   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 607   3                  
 608   3                  LCDPTR  = 10;
 609   3                  LCDDAT  = (COM1 + COM2);
 610   3                  
 611   3                  LCDPTR  = 13;
 612   3                  LCDDAT  = COM1;
 613   3      
 614   3                  LCDPTR  = 11;
 615   3                  LCDDAT  = COM2;
 616   3              }break;
 617   2              
 618   2              case E_NUM_9:    //show "9" -- 4'th 14seg Display
 619   2              {
 620   3                  LCDPTR  = 12;
 621   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 622   3                  
 623   3                  LCDPTR  = 10;
 624   3                  LCDDAT  = COM2;
 625   3                  
 626   3                  LCDPTR  = 13;
 627   3                  LCDDAT  = COM1;
 628   3      
 629   3                  LCDPTR  = 11;
 630   3                  LCDDAT  = COM2;
 631   3              }break;
 632   2          }
 633   1      }
 634          
 635          void LCD_Display_Num_5(unsigned char u8Num_5)
 636          {
 637   1          switch (u8Num_5)
 638   1          {
 639   2              case E_NUM_0:    //show "0" -- 5'th 14seg Display
 640   2              {
 641   3                  LCDPTR  = 16;
 642   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 643   3      
 644   3                  LCDPTR  = 14;
 645   3                  LCDDAT  = (COM1 + COM2);
 646   3              }break;
 647   2              
 648   2              case E_NUM_1:    //show "1" -- 5'th 14seg Display
 649   2              {
 650   3                  LCDPTR  = 16;
 651   3                  LCDDAT  = (COM1 + COM2);
 652   3              }break;
 653   2              
 654   2              case E_NUM_2:    //show "2" -- 5'th 14seg Display
 655   2              {
 656   3                  LCDPTR  = 16;
 657   3                  LCDDAT  = (COM0 + COM2 + COM3);
 658   3      
 659   3                  LCDPTR  = 14;
 660   3                  LCDDAT  = COM1;
 661   3      
 662   3                  LCDPTR  = 17;
 663   3                  LCDDAT  = COM1;
 664   3      
 665   3                  LCDPTR  = 15;
 666   3                  LCDDAT  = COM2;
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 12  

 667   3              }break;
 668   2              
 669   2              case E_NUM_3:    //show "3" -- 5'th 14seg Display
 670   2              {
 671   3                  LCDPTR  = 16;
 672   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 673   3      
 674   3                  LCDPTR  = 17;
 675   3                  LCDDAT  = COM1;
 676   3      
 677   3                  LCDPTR  = 15;
 678   3                  LCDDAT  = COM2;
 679   3              }break;
 680   2              
 681   2              case E_NUM_4:    //show "4" -- 5'th 14seg Display
 682   2              {
 683   3                  LCDPTR  = 14;
 684   3                  LCDDAT  = COM2;
 685   3      
 686   3                  LCDPTR  = 17;
 687   3                  LCDDAT  = COM1;
 688   3      
 689   3                  LCDPTR  = 15;
 690   3                  LCDDAT  = COM2;
 691   3      
 692   3                  LCDPTR  = 16;
 693   3                  LCDDAT  = (COM1 + COM2);
 694   3              }break;
 695   2              
 696   2              case E_NUM_5:    //show "5" -- 5'th 14seg Display
 697   2              {
 698   3                  LCDPTR  = 16;
 699   3                  LCDDAT  = (COM0 + COM1 + COM3);
 700   3      
 701   3                  LCDPTR  = 14;
 702   3                  LCDDAT  = COM2;
 703   3      
 704   3                  LCDPTR  = 17;
 705   3                  LCDDAT  = COM1;
 706   3      
 707   3                  LCDPTR  = 15;
 708   3                  LCDDAT  = COM2;
 709   3              }break;
 710   2              
 711   2              case E_NUM_6:    //show "6" -- 5'th 14seg Display
 712   2              {
 713   3                  LCDPTR  = 16;
 714   3                  LCDDAT  = (COM0 + COM1 + COM3);
 715   3      
 716   3                  LCDPTR  = 14;
 717   3                  LCDDAT  = (COM1 + COM2);
 718   3      
 719   3                  LCDPTR  = 17;
 720   3                  LCDDAT  = COM1;
 721   3      
 722   3                  LCDPTR  = 15;
 723   3                  LCDDAT  = COM2;
 724   3              }break;
 725   2              
 726   2              case E_NUM_7:    //show "7" -- 5'th 14seg Display
 727   2              {
 728   3                  LCDPTR  = 14;                            
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 13  

 729   3                  LCDDAT  = COM2;                         
 730   3      
 731   3                  LCDPTR  = 16;                            
 732   3                  LCDDAT  = (COM1 + COM2 + COM3);         
 733   3          
 734   3              }break;
 735   2              
 736   2              case E_NUM_8:    //show "8" -- 5'th 14seg Display
 737   2              {
 738   3                  LCDPTR  = 16;
 739   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 740   3                  
 741   3                  LCDPTR  = 14;
 742   3                  LCDDAT  = (COM1 + COM2);
 743   3                  
 744   3                  LCDPTR  = 17;
 745   3                  LCDDAT  = COM1;
 746   3      
 747   3                  LCDPTR  = 15;
 748   3                  LCDDAT  = COM2;
 749   3              }break;
 750   2              
 751   2              case E_NUM_9:    //show "9" -- 5'th 14seg Display
 752   2              {
 753   3                  LCDPTR  = 16;
 754   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 755   3                  
 756   3                  LCDPTR  = 14;
 757   3                  LCDDAT  = COM2;
 758   3                  
 759   3                  LCDPTR  = 17;
 760   3                  LCDDAT  = COM1;
 761   3      
 762   3                  LCDPTR  = 15;
 763   3                  LCDDAT  = COM2;
 764   3              }break;
 765   2          }
 766   1      }
 767          
 768          void LCD_Display_Num_6(unsigned char u8Num_6)
 769          {
 770   1          switch (u8Num_6)
 771   1          {
 772   2              case E_NUM_0:    //show "0" -- 6'th 14seg Display
 773   2              {
 774   3                  LCDPTR  = 20;
 775   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 776   3      
 777   3                  LCDPTR  = 18;
 778   3                  LCDDAT  = (COM1 + COM2);
 779   3              }break;
 780   2              
 781   2              case E_NUM_1:    //show "1" -- 6'th 14seg Display
 782   2              {
 783   3                  LCDPTR  = 20;
 784   3                  LCDDAT  = (COM1 + COM2);
 785   3              }break;
 786   2              
 787   2              case E_NUM_2:    //show "2" -- 6'th 14seg Display
 788   2              {
 789   3                  LCDPTR  = 20;
 790   3                  LCDDAT  = (COM0 + COM2 + COM3);
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 14  

 791   3      
 792   3                  LCDPTR  = 21;
 793   3                  LCDDAT  = COM1;
 794   3      
 795   3                  LCDPTR  = 19;
 796   3                  LCDDAT  = COM2;
 797   3      
 798   3                  LCDPTR  = 18;
 799   3                  LCDDAT  = COM1;
 800   3              }break;
 801   2              
 802   2              case E_NUM_3:    //show "3" -- 6'th 14seg Display
 803   2              {
 804   3                  LCDPTR  = 20;
 805   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 806   3      
 807   3                  LCDPTR  = 21;
 808   3                  LCDDAT  = COM1;
 809   3      
 810   3                  LCDPTR  = 19;
 811   3                  LCDDAT  = COM2;
 812   3              }break;
 813   2              
 814   2              case E_NUM_4:    //show "4" -- 6'th 14seg Display
 815   2              {
 816   3                  LCDPTR  = 18;
 817   3                  LCDDAT  = COM2;
 818   3      
 819   3                  LCDPTR  = 21;
 820   3                  LCDDAT  = COM1;
 821   3      
 822   3                  LCDPTR  = 19;
 823   3                  LCDDAT  = COM2;
 824   3      
 825   3                  LCDPTR  = 20;
 826   3                  LCDDAT  = (COM1 + COM2);
 827   3              }break;
 828   2              
 829   2              case E_NUM_5:    //show "5" -- 6'th 14seg Display
 830   2              {
 831   3                  LCDPTR  = 20;
 832   3                  LCDDAT  = (COM0 + COM1 + COM3);
 833   3      
 834   3                  LCDPTR  = 18;
 835   3                  LCDDAT  = COM2;
 836   3      
 837   3                  LCDPTR  = 21;
 838   3                  LCDDAT  = COM1;
 839   3      
 840   3                  LCDPTR  = 19;
 841   3                  LCDDAT  = COM2;
 842   3              }break;
 843   2              
 844   2              case E_NUM_6:    //show "6" -- 6'th 14seg Display
 845   2              {
 846   3                  LCDPTR  = 20;
 847   3                  LCDDAT  = (COM0 + COM1 + COM3);
 848   3      
 849   3                  LCDPTR  = 18;
 850   3                  LCDDAT  = (COM1 + COM2);
 851   3      
 852   3                  LCDPTR  = 21;
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 15  

 853   3                  LCDDAT  = COM1;
 854   3      
 855   3                  LCDPTR  = 19;
 856   3                  LCDDAT  = COM2;
 857   3              }break;
 858   2              
 859   2              case E_NUM_7:    //show "7" -- 6'th 14seg Display
 860   2              {
 861   3                  LCDPTR  = 18;                            
 862   3                  LCDDAT  = COM2;                         
 863   3      
 864   3                  LCDPTR  = 20;                            
 865   3                  LCDDAT  = (COM1 + COM2 + COM3);         
 866   3          
 867   3              }break;
 868   2              
 869   2              case E_NUM_8:    //show "8" -- 6'th 14seg Display
 870   2              {
 871   3                  LCDPTR  = 20;
 872   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 873   3                  
 874   3                  LCDPTR  = 18;
 875   3                  LCDDAT  = (COM1 + COM2);
 876   3                  
 877   3                  LCDPTR  = 21;
 878   3                  LCDDAT  = COM1;
 879   3      
 880   3                  LCDPTR  = 19;
 881   3                  LCDDAT  = COM2;
 882   3              }break;
 883   2              
 884   2              case E_NUM_9:    //show "9" -- 6'th 14seg Display
 885   2              {
 886   3                  LCDPTR  = 20;
 887   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 888   3                  
 889   3                  LCDPTR  = 18;
 890   3                  LCDDAT  = COM2;
 891   3                  
 892   3                  LCDPTR  = 21;
 893   3                  LCDDAT  = COM1;
 894   3      
 895   3                  LCDPTR  = 19;
 896   3                  LCDDAT  = COM2;
 897   3              }break;
 898   2          }
 899   1      }
 900          
 901          void LCD_Display_Num_7(unsigned char u8Num_7)
 902          {
 903   1          switch (u8Num_7)
 904   1          {
 905   2              case E_NUM_0:    //show "0" -- 7'th 14seg Display
 906   2              {
 907   3                  LCDPTR  = 24;
 908   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 909   3      
 910   3                  LCDPTR  = 22;
 911   3                  LCDDAT  = (COM1 + COM2);
 912   3              }break;
 913   2              
 914   2              case E_NUM_1:    //show "1" -- 7'th 14seg Display
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 16  

 915   2              {
 916   3                  LCDPTR  = 24;
 917   3                  LCDDAT  = (COM1 + COM2);
 918   3              }break;
 919   2              
 920   2              case E_NUM_2:    //show "2" -- 7'th 14seg Display
 921   2              {
 922   3                  LCDPTR  = 24;
 923   3                  LCDDAT  = (COM0 + COM2 + COM3);
 924   3      
 925   3                  LCDPTR  = 25;
 926   3                  LCDDAT  = COM1;
 927   3      
 928   3                  LCDPTR  = 23;
 929   3                  LCDDAT  = COM2;
 930   3      
 931   3                  LCDPTR  = 22;
 932   3                  LCDDAT  = COM1;
 933   3              }break;
 934   2              
 935   2              case E_NUM_3:    //show "3" -- 7'th 14seg Display
 936   2              {
 937   3                  LCDPTR  = 24;
 938   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
 939   3      
 940   3                  LCDPTR  = 25;
 941   3                  LCDDAT  = COM1;
 942   3      
 943   3                  LCDPTR  = 23;
 944   3                  LCDDAT  = COM2;
 945   3              }break;
 946   2              
 947   2              case E_NUM_4:    //show "4" -- 7'th 14seg Display
 948   2              {
 949   3                  LCDPTR  = 22;
 950   3                  LCDDAT  = COM2;
 951   3      
 952   3                  LCDPTR  = 25;
 953   3                  LCDDAT  = COM1;
 954   3      
 955   3                  LCDPTR  = 23;
 956   3                  LCDDAT  = COM2;
 957   3      
 958   3                  LCDPTR  = 24;
 959   3                  LCDDAT  = (COM1 + COM2);
 960   3              }break;
 961   2              
 962   2              case E_NUM_5:    //show "5" -- 7'th 14seg Display
 963   2              {
 964   3                  LCDPTR  = 24;
 965   3                  LCDDAT  = (COM0 + COM1 + COM3);
 966   3      
 967   3                  LCDPTR  = 22;
 968   3                  LCDDAT  = COM2;
 969   3      
 970   3                  LCDPTR  = 25;
 971   3                  LCDDAT  = COM1;
 972   3      
 973   3                  LCDPTR  = 23;
 974   3                  LCDDAT  = COM2;
 975   3              }break;
 976   2              
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 17  

 977   2              case E_NUM_6:    //show "6" -- 7'th 14seg Display
 978   2              {
 979   3                  LCDPTR  = 24;
 980   3                  LCDDAT  = (COM0 + COM1 + COM3);
 981   3      
 982   3                  LCDPTR  = 22;
 983   3                  LCDDAT  = (COM1 + COM2);
 984   3      
 985   3                  LCDPTR  = 25;
 986   3                  LCDDAT  = COM1;
 987   3      
 988   3                  LCDPTR  = 23;
 989   3                  LCDDAT  = COM2;
 990   3              }break;
 991   2              
 992   2              case E_NUM_7:    //show "7" -- 7'th 14seg Display
 993   2              {
 994   3                  LCDPTR  = 22;                            
 995   3                  LCDDAT  = COM2;                         
 996   3      
 997   3                  LCDPTR  = 24;                            
 998   3                  LCDDAT  = (COM1 + COM2 + COM3);         
 999   3          
1000   3              }break;
1001   2              
1002   2              case E_NUM_8:    //show "8" -- 7'th 14seg Display
1003   2              {
1004   3                  LCDPTR  = 24;
1005   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
1006   3                  
1007   3                  LCDPTR  = 22;
1008   3                  LCDDAT  = (COM1 + COM2);
1009   3                  
1010   3                  LCDPTR  = 25;
1011   3                  LCDDAT  = COM1;
1012   3      
1013   3                  LCDPTR  = 23;
1014   3                  LCDDAT  = COM2;
1015   3              }break;
1016   2              
1017   2              case E_NUM_9:    //show "9" -- 7'th 14seg Display
1018   2              {
1019   3                  LCDPTR  = 24;
1020   3                  LCDDAT  = (COM0 + COM1 + COM2 + COM3);
1021   3                  
1022   3                  LCDPTR  = 22;
1023   3                  LCDDAT  = COM2;
1024   3                  
1025   3                  LCDPTR  = 25;
1026   3                  LCDDAT  = COM1;
1027   3      
1028   3                  LCDPTR  = 23;
1029   3                  LCDDAT  = COM2;
1030   3              }break;
1031   2          }
1032   1      }
1033          
1034          void LCD_Display_3DP()
1035          {
1036   1          LCDPTR  = 10;
1037   1          LCDDAT  |= COM0;
1038   1      }
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 18  

1039              
1040          void LCD_Display_Degree()
1041          {
1042   1          LCDPTR  = 20;
1043   1          LCDDAT  = (COM2 + COM3);    
1044   1          LCDPTR  = 21;
1045   1          LCDDAT  = COM1;
1046   1          LCDPTR  = 19;
1047   1          LCDDAT  = COM2;
1048   1          LCDPTR  = 18;
1049   1          LCDDAT  = COM2;
1050   1      
1051   1          LCDPTR  = 24;
1052   1          LCDDAT  = (COM0 + COM3);
1053   1          LCDPTR  = 22;
1054   1          LCDDAT  = (COM1 + COM2);
1055   1      }
1056          
1057          void LCD_Display_nuvoTon_Logo()
1058          {
1059   1          LCDPTR  = 27;
1060   1          LCDDAT  |= COM0;
1061   1      }
1062          
1063          void LCD_Display_Welcome_Pattern()
1064          {
1065   1          LCDPTR  = 22;
1066   1          LCDDAT  |= COM3;
1067   1      }
1068          
1069          void LCD_Display_N76E616_Pattern()
1070          {
1071   1          //--------------------------------------
1072   1          
1073   1          //show "nuvoTon"
1074   1          LCDPTR  = 27;                           //MCU's SEG27 -- LCD's SEG37
1075   1          LCDDAT  = COM0;                         //LCD's COM0
1076   1          
1077   1          //--------------------------------------
1078   1          
1079   1          //show "N" -- 1'st 13seg Display
1080   1          LCDPTR  = 0;                            //MCU's SEG0 -- LCD's SEG1
1081   1          LCDDAT  = (COM1 + COM2);                //LCD's COM1/2
1082   1          
1083   1          LCDPTR  = 1;                            //MCU's SEG1 -- LCD's SEG2
1084   1          LCDDAT  = COM0;                         //LCD's COM0
1085   1          
1086   1          LCDPTR  = 28;                           //MCU's SEG1 -- LCD's SEG43
1087   1          LCDDAT  = (COM1 + COM2);                //LCD's COM1/2
1088   1          
1089   1          LCDPTR  = 31;                           //MCU's SEG1 -- LCD's SEG44
1090   1          LCDDAT  = COM3;                         //LCD's COM3
1091   1          
1092   1          //--------------------------------------
1093   1          
1094   1          //show "7" -- 2'nd 13seg Display
1095   1          LCDPTR  = 4;                            //MCU's SEG4 -- LCD's SEG5
1096   1          LCDDAT  = (COM1 + COM2 + COM3);         //LCD's COM1/2/3
1097   1          
1098   1          LCDPTR  = 2;                            //MCU's SEG2 -- LCD's SEG3
1099   1          LCDDAT  = COM2;                         //LCD's COM2
1100   1      
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 19  

1101   1          //--------------------------------------
1102   1          
1103   1          //show "6" -- 3'th 13seg Display
1104   1          LCDPTR  = 6;                            //MCU's SEG6 -- LCD's SEG7
1105   1          LCDDAT  = (COM1 + COM2);                //LCD's COM1/2    
1106   1      
1107   1          LCDPTR  = 7;                            //MCU's SEG7 -- LCD's SEG8
1108   1          LCDDAT  = COM2;                         //LCD's COM2  
1109   1          
1110   1          LCDPTR  = 8;                            //MCU's SEG8 -- LCD's SEG9
1111   1          LCDDAT  = (COM0 + COM1 + COM3);         //LCD's COM0/1/3
1112   1          
1113   1          LCDPTR  = 9;                            //MCU's SEG9 -- LCD's SEG10
1114   1          LCDDAT  = COM1;                         //LCD's COM1
1115   1          
1116   1          //--------------------------------------
1117   1          
1118   1          //show "E" -- 4'th 13seg Display
1119   1          LCDPTR  = 10;                           //MCU's SEG10 -- LCD's SEG11
1120   1          LCDDAT  = (COM1 + COM2);                //LCD's COM1/2    
1121   1      
1122   1          LCDPTR  = 11;                           //MCU's SEG11 -- LCD's SEG12
1123   1          LCDDAT  = COM2;                         //LCD's COM2  
1124   1          
1125   1          LCDPTR  = 12;                           //MCU's SEG12 -- LCD's SEG13
1126   1          LCDDAT  = (COM0 + COM3);                //LCD's COM0/3
1127   1          
1128   1          LCDPTR  = 13;                           //MCU's SEG13 -- LCD's SEG14
1129   1          LCDDAT  = COM1;                         //LCD's COM1    
1130   1      
1131   1          //--------------------------------------
1132   1      
1133   1          //show "6" -- 9'th 7seg Display
1134   1          LCDPTR  = 14;                           //MCU's SEG14 -- LCD's SEG15
1135   1          LCDDAT  = (COM1 + COM2);                //LCD's COM1/2
1136   1      
1137   1          LCDPTR  = 15;                           //MCU's SEG15 -- LCD's SEG16
1138   1          LCDDAT  = COM2;                         //LCD's COM2      
1139   1      
1140   1          LCDPTR  = 16;                           //MCU's SEG16 -- LCD's SEG17
1141   1          LCDDAT  = (COM0 + COM1 + COM3);         //LCD's COM0/1/3      
1142   1      
1143   1          LCDPTR  = 17;                           //MCU's SEG17 -- LCD's SEG18
1144   1          LCDDAT  = COM1;                         //LCD's COM1      
1145   1      
1146   1          //--------------------------------------
1147   1          
1148   1          //show "1" -- 10'th 7seg Display
1149   1          LCDPTR  = 20;                           //MCU's SEG20 -- LCD's SEG21
1150   1          LCDDAT  = (COM1 + COM2);                //LCD's COM1/2
1151   1      
1152   1           //--------------------------------------
1153   1          
1154   1          //show "6" -- 9'th 7seg Display
1155   1          LCDPTR  = 22;                           //MCU's SEG22 -- LCD's SEG23
1156   1          LCDDAT  = (COM1 + COM2);                //LCD's COM1/2
1157   1      
1158   1          LCDPTR  = 23;                           //MCU's SEG23 -- LCD's SEG24
1159   1          LCDDAT  = COM2;                         //LCD's COM2      
1160   1      
1161   1          LCDPTR  = 24;                           //MCU's SEG23 -- LCD's SEG24
1162   1          LCDDAT  = (COM0 + COM1 + COM3);                //LCD's COM0/1/3
C51 COMPILER V9.56.0.0   DISPLAY                                                           07/05/2017 20:30:08 PAGE 20  

1163   1      
1164   1          LCDPTR  = 25;                           //MCU's SEG25 -- LCD's SEG26
1165   1          LCDDAT  = COM1;                         //LCD's COM1      
1166   1      }
1167          
1168          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1931    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.56.0.0   MAIN                                                              08/16/2017 20:14:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Out\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc;..
                    -\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\main.lst) OBJECT(.\Ou
                    -t\Objects\main.obj)

line level    source

   1          #include "app.h"
   2          
   3          //uint8_t c;
   4          //DEVICE_T g_tDevice;
   5          /******************************************************************************
   6           * FUNCTION_PURPOSE: ADC interrupt Service Routine
   7           ******************************************************************************/
   8          void ADC_ISR(void)
   9          interrupt 11
  10          {
  11   1              clr_ADCF;                               //clear ADC interrupt flag
  12   1      
  13   1              g_tADC_Result.result[g_tADC_Result.channel] = ADCRH;
  14   1              g_tADC_Result.result[g_tADC_Result.channel] <<= 2;
  15   1              g_tADC_Result.result[g_tADC_Result.channel] |= ADCRL;
  16   1      
  17   1              g_tADC_Result.busy = 0;
  18   1      }
  19          /******************************************************************************
  20           * FUNCTION_PURPOSE: I/O Pin interrupt Service Routine
  21           ******************************************************************************/
  22          void PinInterrupt_ISR(void)
  23          interrupt 7
  24          {
  25   1      
  26   1              if (PIF & 0x08) {
  27   2      
  28   2                      if (g_tDevice.status == E_PowerDown) {
  29   3      
  30   3                              g_tDevice.status = E_PowerReady;
  31   3      
  32   3                      }
  33   2      
  34   2              }
  35   1      
  36   1              PIF = 0x00;                             //clear interrupt flag
  37   1      }
  38          void main(void) {
  39   1              uint8_t ucKeyCode;
  40   1              System_Clock_Select(E_HIRCEN);
  41   1      
  42   1      #if  0
                      CKDIV = 1;                        //Fsys = Fosc / (2* CLKDIV) = Fcpu
              #endif
  45   1      
  46   1              /****************/
  47   1              bsp_Init();
  48   1      
  49   1              /****************/
  50   1      //      work_Init();
  51   1      //      app_key_init();
  52   1      //      app_charge_Init();
  53   1              /****************/
C51 COMPILER V9.56.0.0   MAIN                                                              08/16/2017 20:14:44 PAGE 2   

  54   1      //      Show_FW_Version_Number_To_PC();
  55   1              while (1) {
  56   2                      if (Task_time.flag_5ms) {
  57   3                              Task_time.flag_5ms = 0;
  58   3                              //////////////////
  59   3      
  60   3                              ADC_Start();
  61   3                      }
  62   2                      if (Task_time.flag_10ms) {
  63   3                              Task_time.flag_10ms = 0;
  64   3                              //////////////////
  65   3      
  66   3                              bsp_KeyScan();
  67   3      
  68   3                      }
  69   2                      if (Task_time.flag_100ms) {
  70   3                              char ss[16] = { 0 };
  71   3                              static uint8_t n = 0;
  72   3                              Task_time.flag_100ms = 0;
  73   3                              //////////////////
  74   3      //                      app_key_100ms_pro();
  75   3      //                      app_work_100ms_pro();
  76   3      //                      app_charge_100ms_pro();
  77   3      //                      Repeat_Pro();
  78   3      
  79   3                              n++;
  80   3                              if (n >= 5) {
  81   4                                      n = 0;
  82   4      #if 1
  83   4                                      sprintf(ss, "ch0 %d", g_tADC_Result.result[0]);
  84   4      #else
                                              sprintf(ss, "ch1 %d", g_tADC_Result.result[1]);
              #endif
  87   4                                      LCD_ShowString(ss);
  88   4                              }
  89   3      
  90   3                      }
  91   2                      if (Task_time.flag_1s) {
  92   3                              static char *str = "ABCDEFGHIJKLMNOPQ";
  93   3                              static uint8_t cnt = 0;
  94   3                              Task_time.flag_1s = 0;
  95   3                              //////////////////
  96   3      //                      app_key_1s_pro();
  97   3      //                      app_work_1s_pro();
  98   3      //                      app_charge_1s_pro();
  99   3      //                      app_battery_1s_pro();
 100   3                              cnt++;
 101   3      
 102   3                              //      LCD_ShowString(str + cnt);
 103   3                              if (cnt > strlen(str)) {
 104   4                                      cnt = 0;
 105   4                              }
 106   3      
 107   3                      }
 108   2      
 109   2      #if 1
 110   2      
 111   2                      ucKeyCode = bsp_GetKey();
 112   2                      if (ucKeyCode != KEY_NONE) {
 113   3                              app_key_pro(ucKeyCode);
 114   3                      }
 115   2      #endif
C51 COMPILER V9.56.0.0   MAIN                                                              08/16/2017 20:14:44 PAGE 3   

 116   2              }
 117   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    310    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =      5      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_KEY
OBJECT MODULE PLACED IN .\Out\Objects\app_key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_key.lst) OBJEC
                    -T(.\Out\Objects\app_key.obj)

line level    source

   1          /*
   2           * app_key.c
   3           *
   4           *  Created on: 2017年7月7日
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          
  10          DEVICE_T g_tDevice;
  11          
  12          static E_TRAINING_MODE mode;
  13          static char letter = '\0';
  14          
  15          #define BLINK_FLASH_TIME   4
  16          
  17          /*
  18           * level: 0, 拉动时候的界面
  19           *        1,
  20           * */
  21          uint8_t level = 0;
  22          
  23          static void app_UI_init(void);
  24          
  25          void app_key_init(void) {
  26   1              level = 0;
  27   1      
  28   1              clr_PIPS2;
  29   1              clr_PIPS1;
  30   1              clr_PIPS0;
  31   1      
  32   1              set_PIT3;
  33   1              set_PINEN3;
  34   1              clr_PIPEN3;
  35   1      
  36   1              mode = E_Simple_metering_mode;
  37   1              g_tWork.mode = E_Simple_metering_mode;
  38   1              g_tDevice.status = E_PowerOn;
  39   1              app_UI_init();
  40   1      }
  41          
  42          static void app_UI_init(void) {
  43   1              switch (mode) {
  44   2              case E_Simple_metering_mode:
  45   2      
  46   2                      LCD_Show_Pulls_Num(0);
  47   2                      LCD_Show_CAL_Num(0);
  48   2      
  49   2                      LCD_Show_Line_up();
  50   2                      LCD_Clear_REP_ICO();
  51   2      
  52   2                      LCD_Clear_ABCD();
  53   2      
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 2   

  54   2                      LCD_Show_CAL_ICO();
  55   2                      LCD_Clear_QS_ICO();
  56   2                      LCD_Clear_COACH_ICO();
  57   2      
  58   2                      break;
  59   2              case E_Quick_start_mode:
  60   2      
  61   2                      LCD_Show_REP_ICO();
  62   2                      LCD_Show_Line_up();
  63   2      
  64   2                      LCD_Show_ABCD('A');
  65   2                      LCD_Show_ABCD('B');
  66   2                      LCD_Show_ABCD('C');
  67   2                      LCD_Show_ABCD('D');
  68   2      
  69   2                      LCD_Show_CAL_ICO();
  70   2      
  71   2                      LCD_Clear_COACH_ICO();
  72   2      
  73   2                      Repeat_Stop();
  74   2                      Repeat_SetStart(LCD_Show_QS_ICO);
  75   2                      Repeat_SetStop(LCD_Clear_QS_ICO);
  76   2                      Repeat_Start(4, 4, 0);
  77   2                      break;
  78   2              case E_Coach_mode:
  79   2                      LCD_Show_REP_ICO();
  80   2                      LCD_Show_Line_up();
  81   2      
  82   2                      LCD_Show_ABCD('A');
  83   2                      LCD_Show_ABCD('B');
  84   2                      LCD_Show_ABCD('C');
  85   2                      LCD_Show_ABCD('D');
  86   2      
  87   2                      LCD_Show_CAL_ICO();
  88   2      
  89   2                      LCD_Clear_QS_ICO();
  90   2      
  91   2                      Repeat_Stop();
  92   2                      Repeat_SetStart(LCD_Show_COACH_ICO);
  93   2                      Repeat_SetStop(LCD_Clear_COACH_ICO);
  94   2                      Repeat_Start(4, 4, 0);
  95   2                      break;
  96   2              }
  97   1      }
  98          
  99          void app_flash_Show(void) {
 100   1      
 101   1              LCD_Show_Line_up();
 102   1              switch (level) {
 103   2              case 0:
 104   2                      break;
 105   2              case 1:
 106   2                      if (mode == E_Quick_start_mode) {
 107   3                              LCD_Show_QS_ICO();
 108   3                      } else if (mode == E_Coach_mode) {
 109   3                              LCD_Show_COACH_ICO();
 110   3                      }
 111   2                      break;
 112   2              case 2:
 113   2      
 114   2                      switch (letter) {
 115   3                      case '\0':
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 3   

 116   3                              break;
 117   3                      case 'A':
 118   3                              LCD_Show_REP_Num(Rep_Pull_num['A' - 'A'][0]);
 119   3                              LCD_Show_Pulls_Num(Rep_Pull_num['A' - 'A'][1]);
 120   3                              break;
 121   3                      case 'B':
 122   3                              LCD_Show_REP_Num(Rep_Pull_num['B' - 'A'][0]);
 123   3                              LCD_Show_Pulls_Num(Rep_Pull_num['B' - 'A'][1]);
 124   3                              break;
 125   3                      case 'C':
 126   3                              LCD_Show_REP_Num(Rep_Pull_num['C' - 'A'][0]);
 127   3                              LCD_Show_Pulls_Num(Rep_Pull_num['C' - 'A'][1]);
 128   3                              break;
 129   3                      case 'D':
 130   3                              LCD_Show_REP_Num(Rep_Pull_num['D' - 'A'][0]);
 131   3                              LCD_Show_Pulls_Num(Rep_Pull_num['D' - 'A'][1]);
 132   3                              break;
 133   3                      }
 134   2                      if (mode == E_Quick_start_mode) {
 135   3                              LCD_Show_QS_ICO();
 136   3                      } else if (mode == E_Coach_mode) {
 137   3                              LCD_Show_COACH_ICO();
 138   3                      }
 139   2                      LCD_Show_ABCD_all();
 140   2      
 141   2                      break;
 142   2              case 3:
 143   2                      break;
 144   2              }
 145   1              LCD_Show_Line_up();
 146   1      }
 147          void app_flash_Clear(void) {
 148   1      
 149   1              switch (level) {
 150   2              case 0:
 151   2                      break;
 152   2              case 1:
 153   2      //              LCD_Clear_ABCD();
 154   2      //              if (mode == E_Quick_start_mode) {
 155   2      //                      LCD_Clear_QS_ICO();
 156   2      //              } else if (mode == E_Coach_mode) {
 157   2      //                      LCD_Clear_COACH_ICO();
 158   2      //              }
 159   2      
 160   2                      LCD_Clear_QS_ICO();
 161   2                      LCD_Clear_COACH_ICO();
 162   2                      break;
 163   2              case 2:
 164   2      
 165   2                      if (letter == '\0') {
 166   3                              LCD_Clear_ABCD();
 167   3                      }
 168   2                      if (letter == 'A') {
 169   3                              LCD_Clear_ABCD();
 170   3                              LCD_Show_ABCD('A');
 171   3                      }
 172   2                      if (letter == 'B') {
 173   3                              LCD_Clear_ABCD();
 174   3                              LCD_Show_ABCD('B');
 175   3                      }
 176   2                      if (letter == 'C') {
 177   3                              LCD_Clear_ABCD();
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 4   

 178   3                              LCD_Show_ABCD('C');
 179   3                      }
 180   2                      if (letter == 'D') {
 181   3                              LCD_Clear_ABCD();
 182   3                              LCD_Show_ABCD('D');
 183   3                      }
 184   2                      if (mode == E_Quick_start_mode) {
 185   3                              LCD_Clear_QS_ICO();
 186   3                      } else if (mode == E_Coach_mode) {
 187   3                              LCD_Clear_COACH_ICO();
 188   3                      }
 189   2                      break;
 190   2              case 3:
 191   2                      break;
 192   2              }
 193   1      
 194   1      }
 195          void app_key_power_or_return(void) {
 196   1      
 197   1              switch (level) {
 198   2              case 0:
 199   2                      switch (mode) {
 200   3                      case E_Simple_metering_mode:
 201   3                              g_tWork.sum = 0;
 202   3                              g_tWork.cal_num = 0;
 203   3      
 204   3                              LCD_Show_Pulls_Num(g_tWork.sum);
 205   3                              LCD_Show_CAL_Num(g_tWork.cal_num);
 206   3      
 207   3                              LCD_Show_Line_up();
 208   3                              LCD_Clear_REP_ICO();
 209   3      
 210   3                              LCD_Clear_ABCD();
 211   3      
 212   3                              LCD_Show_CAL_ICO();
 213   3                              LCD_Clear_QS_ICO();
 214   3                              LCD_Clear_COACH_ICO();
 215   3      
 216   3                              break;
 217   3                      case E_Quick_start_mode:
 218   3                              g_tWork.sum = 0;
 219   3                              g_tWork.cal_num = 0;
 220   3      
 221   3                              LCD_Show_REP_Num(0);
 222   3                              LCD_Show_Pulls_Num(0);
 223   3                              LCD_Show_CAL_Num(0);
 224   3      
 225   3                              LCD_Show_Line_up();
 226   3                              LCD_Show_REP_ICO();
 227   3      
 228   3                              LCD_Show_ABCD(g_tWork.reps_mode);
 229   3      
 230   3                              LCD_Show_CAL_ICO();
 231   3                              LCD_Show_QS_ICO();
 232   3                              LCD_Clear_COACH_ICO();
 233   3                              break;
 234   3                      case E_Coach_mode:
 235   3                              g_tWork.sum = 0;
 236   3                              g_tWork.cal_num = 0;
 237   3      
 238   3                              LCD_Show_REP_Num(0);
 239   3                              LCD_Show_Pulls_Num(0);
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 5   

 240   3                              LCD_Show_CAL_Num(0);
 241   3      
 242   3                              LCD_Show_Line_up();
 243   3                              LCD_Show_REP_ICO();
 244   3      
 245   3                              LCD_Show_ABCD(g_tWork.reps_mode);
 246   3      
 247   3                              LCD_Show_CAL_ICO();
 248   3                              LCD_Clear_QS_ICO();
 249   3                              LCD_Show_COACH_ICO();
 250   3      
 251   3                              break;
 252   3                      }
 253   2                      break;
 254   2              case 1:
 255   2                      Repeat_Stop();
 256   2                      if (level) {
 257   3                              level--;
 258   3                      }
 259   2      
 260   2                      break;
 261   2              case 2:
 262   2                      if (level) {
 263   3                              level--;
 264   3                      }
 265   2                      break;
 266   2              case 3:
 267   2                      if (level) {
 268   3                              level--;
 269   3                      }
 270   2                      break;
 271   2              }
 272   1      
 273   1      }
 274          void app_key_set(void) {
 275   1      //      static BIT power_on_mode_flag = 0;
 276   1      
 277   1              switch (level) {
 278   2              case 0:
 279   2      
 280   2                      switch (g_tWork.mode) {
 281   3                      case E_Simple_metering_mode:
 282   3                              //g_tWork.mode = E_Quick_start_mode;
 283   3                              //mode = E_Quick_start_mode;
 284   3                              level = 1;
 285   3                              break;
 286   3                      case E_Quick_start_mode:
 287   3      
 288   3                              break;
 289   3                      case E_Coach_mode:
 290   3      
 291   3                              break;
 292   3                      }
 293   2      
 294   2                      LCD_Show_REP_Num(0);
 295   2                      LCD_Show_Pulls_Num(0);
 296   2                      LCD_Show_CAL_Num(0);
 297   2      
 298   2                      LCD_Show_Line_up();
 299   2                      LCD_Show_REP_ICO();
 300   2      
 301   2                      LCD_Show_ABCD_all();
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 6   

 302   2      
 303   2                      LCD_Show_CAL_ICO();
 304   2      
 305   2                      mode = g_tWork.mode;
 306   2                      mode = E_Quick_start_mode;
 307   2                      level = 1;
 308   2                      Repeat_Stop();
 309   2                      Repeat_SetStart(app_flash_Show);
 310   2                      Repeat_SetStop(app_flash_Clear);
 311   2                      Repeat_Start(BLINK_FLASH_TIME, BLINK_FLASH_TIME, 0);
 312   2                      break;
 313   2              case 1:
 314   2      //              level = 2;
 315   2      
 316   2                      break;
 317   2              case 2:
 318   2                      break;
 319   2              case 3:
 320   2                      break;
 321   2              }
 322   1      
 323   1      //      app_UI_init();
 324   1      }
 325          
 326          void app_key_add(void) {
 327   1      
 328   1              switch (level) {
 329   2              case 0:
 330   2      
 331   2                      break;
 332   2              case 1:
 333   2                      switch (mode) {
 334   3                      case E_Simple_metering_mode:
 335   3                              mode = E_Quick_start_mode;
 336   3      
 337   3                              break;
 338   3                      case E_Quick_start_mode:
 339   3                              mode = E_Coach_mode;
 340   3      
 341   3                              break;
 342   3                      case E_Coach_mode:
 343   3      
 344   3                              mode = E_Simple_metering_mode;
 345   3      
 346   3                              break;
 347   3                      }
 348   2                      break;
 349   2              case 2:
 350   2                      switch (mode) {
 351   3                      case E_Simple_metering_mode:
 352   3      
 353   3                              break;
 354   3                      case E_Quick_start_mode:
 355   3      
 356   3                              if (letter == '\0') {
 357   4                                      letter = 'A';
 358   4                              } else {
 359   4                                      letter++;
 360   4                                      if (letter > 'D') {
 361   5                                              letter = 'A';
 362   5                                      }
 363   4                              }
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 7   

 364   3      
 365   3                              break;
 366   3                      case E_Coach_mode:
 367   3                              if (letter == '\0') {
 368   4                                      letter = 'A';
 369   4                              } else {
 370   4                                      letter++;
 371   4                                      if (letter > 'D') {
 372   5                                              letter = 'A';
 373   5                                      }
 374   4                              }
 375   3                              break;
 376   3                      }
 377   2                      break;
 378   2              case 3:
 379   2                      break;
 380   2              }
 381   1      
 382   1      }
 383          void app_key_ok(void) {
 384   1              //g_tWork.mode = mode;
 385   1      
 386   1              switch (level) {
 387   2              case 0:
 388   2      
 389   2                      break;
 390   2              case 1:
 391   2      
 392   2                      switch (mode) {
 393   3                      case E_Simple_metering_mode:
 394   3      
 395   3                              break;
 396   3                      case E_Quick_start_mode:
 397   3      
 398   3                              LCD_Show_QS_ICO();
 399   3                              LCD_Clear_COACH_ICO();
 400   3      
 401   3                              break;
 402   3                      case E_Coach_mode:
 403   3                              LCD_Clear_QS_ICO();
 404   3                              LCD_Show_COACH_ICO();
 405   3      
 406   3                              break;
 407   3                      }
 408   2                      letter = 'A';
 409   2                      level = 2;
 410   2                      break;
 411   2              case 2:
 412   2                      switch (mode) {
 413   3                      case E_Simple_metering_mode:
 414   3      
 415   3                              break;
 416   3                      case E_Quick_start_mode:
 417   3      
 418   3                              Repeat_Stop();
 419   3                              LCD_Show_QS_ICO();
 420   3                              LCD_Clear_COACH_ICO();
 421   3      
 422   3                              break;
 423   3                      case E_Coach_mode:
 424   3      
 425   3                              break;
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 8   

 426   3                      }
 427   2                      g_tWork.mode = mode;
 428   2                      g_tWork.reps_mode = letter;
 429   2                      g_tWork.sum = 0;
 430   2                      level = 0;
 431   2                      break;
 432   2              case 3:
 433   2                      break;
 434   2              }
 435   1      
 436   1      //      level++;
 437   1      //      if (level >= 3) {
 438   1      //              level = 0;
 439   1      //      }
 440   1      }
 441          
 442          void app_power_on(void) {
 443   1              SW_Reset();  //复位
 444   1      }
 445          void app_power_off(void) {
 446   1              lcd_bright_off();
 447   1              LCD_Clear_All();
 448   1      }
 449          
 450          static uint8_t noOps_timeoutCnt = 0;
 451          static BIT offBight_flag = 0;
 452          //static BIT keyInvalid_flag = 0;
 453          void app_key_100ms_pro(void) {
 454   1              static uint8_t cnt = 0;
 455   1      
 456   1              if (g_tDevice.status == E_PowerDown) {
 457   2                      cnt++;
 458   2                      if (cnt >= 3) {
 459   3                              cnt = 0;
 460   3      
 461   3                              app_key_clear_noOps_timeoutCnt();
 462   3      //                      keyInvalid_flag = 1;
 463   3                              set_PD;
 464   3                      }
 465   2              } else {
 466   2                      cnt = 0;
 467   2              }
 468   1      }
 469          
 470          void app_key_1s_pro(void) {
 471   1      
 472   1              noOps_timeoutCnt++;
 473   1              if (noOps_timeoutCnt == 10) {
 474   2                      offBight_flag = 1;
 475   2      //              keyInvalid_flag = 1;
 476   2                      lcd_bright_off();
 477   2                      printf("off bright\n");
 478   2              } else if (noOps_timeoutCnt == 20) {
 479   2                      app_power_off();
 480   2                      printf("power off\n");
 481   2                      g_tDevice.status = E_PowerDown;
 482   2              }
 483   1      
 484   1      }
 485          void app_key_clear_noOps_timeoutCnt(void) {
 486   1              noOps_timeoutCnt = 0;
 487   1      }
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 9   

 488          void app_key_pro(uint8_t keyCode) {
 489   1      
 490   1              app_key_clear_noOps_timeoutCnt();
 491   1      
 492   1              if (offBight_flag && (g_tDevice.status == E_PowerOn)) {
 493   2                      offBight_flag = 0;
 494   2                      lcd_bright_on();
 495   2                      //      keyInvalid_flag = 1;
 496   2                      return;
 497   2              }
 498   1      
 499   1              switch (keyCode) {
 500   2              case KEY_UP_K1:
 501   2      
 502   2                      if (g_tDevice.status == E_PowerReady) {
 503   3                              app_power_off();
 504   3                              printf("power off\n");
 505   3                              g_tDevice.status = E_PowerDown;
 506   3                      }
 507   2      
 508   2                      break;
 509   2              case KEY_DOWN_K1:
 510   2                      BEEP_KeyTone();
 511   2                      if (g_tDevice.status == E_PowerOn) {
 512   3                              app_key_power_or_return();
 513   3                      }
 514   2      
 515   2                      break;
 516   2              case KEY_LONG_K1:
 517   2                      BEEP_KeyTone();
 518   2                      if (g_tDevice.status == E_PowerOn) {
 519   3                              g_tDevice.status = E_PowerDown;
 520   3                              app_power_off();
 521   3                      } else if (g_tDevice.status == E_PowerDown) {
 522   3                              g_tDevice.status = E_PowerOn;
 523   3                              app_power_on();
 524   3                      } else if (g_tDevice.status == E_PowerReady) {
 525   3                              g_tDevice.status = E_PowerOn;
 526   3                              app_power_on();
 527   3                      }
 528   2      
 529   2                      break;
 530   2              case KEY_UP_K2:
 531   2      
 532   2                      break;
 533   2              case KEY_DOWN_K2:
 534   2                      BEEP_KeyTone();
 535   2                      app_key_set();
 536   2                      break;
 537   2              case KEY_LONG_K2:
 538   2      
 539   2                      break;
 540   2              case KEY_UP_K3:
 541   2      
 542   2                      break;
 543   2              case KEY_DOWN_K3:
 544   2                      BEEP_KeyTone();
 545   2                      app_key_add();
 546   2                      break;
 547   2              case KEY_LONG_K3:
 548   2      
 549   2                      break;
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/01/2017 22:22:45 PAGE 10  

 550   2              case KEY_UP_K4:
 551   2      
 552   2                      break;
 553   2              case KEY_DOWN_K4:
 554   2                      BEEP_KeyTone();
 555   2                      app_key_ok();
 556   2                      break;
 557   2              case KEY_LONG_K4:
 558   2      
 559   2                      break;
 560   2      #if DEBUG_KEY
 561   2              case KEY_UP_K5:
 562   2      
 563   2                      break;
 564   2              case KEY_DOWN_K5:
 565   2                      //BEEP_KeyTone();
 566   2                      query_work_sum();
 567   2                      break;
 568   2              case KEY_LONG_K5:
 569   2      
 570   2                      break;
 571   2      #endif
 572   2              case KEY_UP_K1K3:
 573   2      
 574   2                      break;
 575   2              case KEY_DOWN_K1K3:
 576   2      
 577   2                      break;
 578   2              case KEY_LONG_K1K3:
 579   2      
 580   2                      break;
 581   2              default:
 582   2      //              BEEP_KeyTone();
 583   2                      break;
 584   2      
 585   2              }
 586   1      }
 587          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1276    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =      6       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

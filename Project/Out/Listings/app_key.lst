C51 COMPILER V9.56.0.0   APP_KEY                                                           11/01/2017 06:16:43 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_KEY
OBJECT MODULE PLACED IN .\Out\Objects\app_key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_key.lst) OBJEC
                    -T(.\Out\Objects\app_key.obj)

line level    source

   1          /*
   2           * app_key.c
   3           *
   4           *  Created on: 2017年7月7日
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          
  10          //static idata uint8_t buf[PAYLOAD_WIDTH] = {0};
  11          #if 0
              void app_key_init(void) {
              
              }
              
              void app_power_on(void) {
                      SW_Reset();  //复位
              }
              void app_power_off(void) {
              //      lcd_bright_off();
                      LCD_Clear_All();
              }
              #endif
  24          
  25          void app_key_pro(uint8_t keyCode) {
  26   1              uint8_t index = 0;
  27   1              uint8_t i = 0;
  28   1      
  29   1              index = 0;
  30   1              memset(sendBuf, 0, PAYLOAD_WIDTH);
  31   1              switch (keyCode) {
  32   2              case KEY_UP_K1:   // power short
  33   2                      sendBuf[index++] = LCD2LAMP_HEADER;
  34   2                      sendBuf[index++] = 0x01;
  35   2                      sendBuf[index++] = KEY_POWER_SHORT_CMD;
  36   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
  37   3                              sendBuf[index] += sendBuf[i + 1];
  38   3                      }
  39   2                      break;
  40   2              case KEY_DOWN_K1:
  41   2      
  42   2                      break;
  43   2              case KEY_LONG_K1:   //power long
  44   2      
  45   2                      break;
  46   2              case KEY_UP_K2:   //play/pause
  47   2                      sendBuf[index++] = LCD2LAMP_HEADER;
  48   2                      sendBuf[index++] = 0x01;
  49   2                      sendBuf[index++] = KEY_PLAY_SHORT_CMD;
  50   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
  51   3                              sendBuf[index] += sendBuf[i + 1];
  52   3                      }
  53   2                      break;
C51 COMPILER V9.56.0.0   APP_KEY                                                           11/01/2017 06:16:43 PAGE 2   

  54   2              case KEY_DOWN_K2:
  55   2      
  56   2                      break;
  57   2              case KEY_LONG_K2:
  58   2                      sendBuf[index++] = LCD2LAMP_HEADER;
  59   2                      sendBuf[index++] = 0x01;
  60   2                      sendBuf[index++] = KEY_PLAY_LONG_CMD;
  61   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
  62   3                              sendBuf[index] += sendBuf[i + 1];
  63   3                      }
  64   2                      break;
  65   2              case KEY_UP_K3:   // down
  66   2                      sendBuf[index++] = LCD2LAMP_HEADER;
  67   2                      sendBuf[index++] = 0x01;
  68   2                      sendBuf[index++] = KEY_DOWN_CMD;
  69   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
  70   3                              sendBuf[index] += sendBuf[i + 1];
  71   3                      }
  72   2                      break;
  73   2              case KEY_DOWN_K3:
  74   2      
  75   2                      break;
  76   2              case KEY_LONG_K3:
  77   2      
  78   2                      break;
  79   2              case KEY_UP_K4:   // up
  80   2                      sendBuf[index++] = LCD2LAMP_HEADER;
  81   2                      sendBuf[index++] = 0x01;
  82   2                      sendBuf[index++] = KEY_UP_CMD;
  83   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
  84   3                              sendBuf[index] += sendBuf[i + 1];
  85   3                      }
  86   2                      break;
  87   2              case KEY_DOWN_K4:  // 连发
  88   2      
  89   2                      break;
  90   2              case KEY_LONG_K4:
  91   2      
  92   2                      break;
  93   2              case KEY_UP_K5:   //vol+
  94   2                      sendBuf[index++] = LCD2LAMP_HEADER;
  95   2                      sendBuf[index++] = 0x01;
  96   2                      sendBuf[index++] = KEY_VOL_ADD_CMD;
  97   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
  98   3                              sendBuf[index] += sendBuf[i + 1];
  99   3                      }
 100   2                      break;
 101   2              case KEY_DOWN_K5:
 102   2      
 103   2                      break;
 104   2              case KEY_LONG_K5:
 105   2      
 106   2                      break;
 107   2              case KEY_UP_K6:   //ACC  继电器
 108   2                      sendBuf[index++] = LCD2LAMP_HEADER;
 109   2                      sendBuf[index++] = 0x02;
 110   2                      sendBuf[index++] = KEY_ACC_CMD;
 111   2                      sendBuf[index++] = 0x03;
 112   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 113   3                              sendBuf[index] += sendBuf[i + 1];
 114   3                      }
 115   2                      break;
C51 COMPILER V9.56.0.0   APP_KEY                                                           11/01/2017 06:16:43 PAGE 3   

 116   2              case KEY_DOWN_K6:
 117   2      
 118   2                      break;
 119   2              case KEY_LONG_K6:
 120   2      
 121   2                      break;
 122   2              case KEY_UP_K7:   // vol-
 123   2                      sendBuf[index++] = LCD2LAMP_HEADER;
 124   2                      sendBuf[index++] = 0x01;
 125   2                      sendBuf[index++] = KEY_VOL_MINUS_CMD;
 126   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 127   3                              sendBuf[index] += sendBuf[i + 1];
 128   3                      }
 129   2                      break;
 130   2              case KEY_DOWN_K7:
 131   2      
 132   2                      break;
 133   2              case KEY_LONG_K7:
 134   2      
 135   2                      break;
 136   2              case KEY_UP_K8:   // mode
 137   2                      sendBuf[index++] = LCD2LAMP_HEADER;
 138   2                      sendBuf[index++] = 0x01;
 139   2                      sendBuf[index++] = KEY_MODE_CMD;
 140   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 141   3                              sendBuf[index] += sendBuf[i + 1];
 142   3                      }
 143   2                      break;
 144   2              case KEY_DOWN_K8:
 145   2      
 146   2                      break;
 147   2              case KEY_LONG_K8:
 148   2      
 149   2                      break;
 150   2              case KEY_UP_K9:   // dome
 151   2                      sendBuf[index++] = LCD2LAMP_HEADER;
 152   2                      sendBuf[index++] = 0x01;
 153   2                      sendBuf[index++] = KEY_DOME_CMD;
 154   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 155   3                              sendBuf[index] += sendBuf[i + 1];
 156   3                      }
 157   2                      break;
 158   2              case KEY_DOWN_K9:
 159   2      
 160   2                      break;
 161   2              case KEY_LONG_K9:
 162   2      
 163   2                      break;
 164   2              case KEY_UP_K_1AND6:    //power ACC
 165   2      
 166   2                      break;
 167   2              case KEY_DOWN_K_1AND6:
 168   2      
 169   2                      break;
 170   2              case KEY_LONG_K_1AND6:
 171   2      
 172   2                      break;
 173   2              default:
 174   2      
 175   2                      break;
 176   2              }
 177   1              if (index) {
C51 COMPILER V9.56.0.0   APP_KEY                                                           11/01/2017 06:16:43 PAGE 4   

 178   2                      index++;
 179   2                      app_2d4_send(sendBuf, index);
 180   2              }
 181   1      
 182   1      }
 183          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1013    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

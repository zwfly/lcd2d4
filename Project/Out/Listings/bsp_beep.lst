C51 COMPILER V9.56.0.0   BSP_BEEP                                                          08/07/2017 21:11:19 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BSP_BEEP
OBJECT MODULE PLACED IN .\Out\Objects\bsp_beep.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_beep.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\in
                    -c;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_beep.lst) OBJ
                    -ECT(.\Out\Objects\bsp_beep.obj)

line level    source

   1          #include "bsp.h"
   2          
   3          static idata BEEP_T g_tBeep; /* 定义蜂鸣器全局结构体变量 */
   4          static BIT delay_flag = 0;
   5          /*
   6           *********************************************************************************************************
   7           *      函 数 名: BEEP_InitHard
   8           *      功能说明: 初始化蜂鸣器硬件
   9           *      形    参：无
  10           *      返 回 值: 无
  11           *********************************************************************************************************
  12           */
  13          void BEEP_InitHard(void) {
  14   1      #if 1
  15   1              P3M1 &= ~SET_BIT0;
  16   1              P3M2 |= SET_BIT0;
  17   1      
  18   1              clr_P30;
  19   1      #endif
  20   1      
  21   1              /*  PWM period = (R2AH + R2AL) * Pre-scale / Fsys, Fsys = 11.0592MHz (HIRC)
  22   1               If R2AH = R2AL, PWM output 50% duty cycle
  23   1               Min frequency is about 20Hz, while Pre-scale = 1/1024 and R2AH = R2AL = 255
  24   1               Max frequency is around 5.5MHz, while Pre-scale = 1/1 and R2AH = R2AL = 1   */
  25   1      
  26   1              /* Determine Timer 2D pre-scalar */
  27   1              clr_T2DPS2;
  28   1              set_T2DPS1;
  29   1              set_T2DPS0;
  30   1      
  31   1              /* Determine Timer 2D Reload Low Byte */
  32   1              R2DL = 128;
  33   1              /* Determine Timer 2D Reload High Byte */
  34   1              R2DH = 128;
  35   1      
  36   1              /* Set T2D as PWM mode */
  37   1              set_T2DM;
  38   1      
  39   1              /* Enable Timer2D interrupt */
  40   1      //      set_ET2D;
  41   1      //      set_EA;
  42   1              /* set T2AO1(P1.5)/T2AO2(P1.6) pin to toggling output */
  43   1      //      set_T2DOE1;
  44   1      //      set_T2DOE2;
  45   1              /* start Timer2D */
  46   1              set_TR2D;
  47   1      
  48   1              g_tBeep.ucEnalbe = 0;
  49   1      
  50   1      }
  51          
  52          void BEEP_ENABLE() {
  53   1              set_T2DOE1;
C51 COMPILER V9.56.0.0   BSP_BEEP                                                          08/07/2017 21:11:19 PAGE 2   

  54   1              set_P30;
  55   1      }
  56          
  57          void BEEP_DISABLE() {
  58   1              clr_T2DOE1;
  59   1      
  60   1              clr_P30;
  61   1      
  62   1      }
  63          /*
  64           *********************************************************************************************************
  65           *      函 数 名: BEEP_Start
  66           *      功能说明: 启动蜂鸣音。
  67           *      形    参：  _usInitTime : 延时时间，单位10ms; beep响之前延时的时间; 0表示不延时
  68           *                _usBeepTime : 蜂鸣时间，单位10ms; 0 表示不鸣叫
  69           *                _usStopTime : 停止时间，单位10ms; 0 表示持续鸣叫
  70           *                _usCycle : 鸣叫次数， 0 表示持续鸣叫
  71           *      返 回 值: 无
  72           *********************************************************************************************************
  73           */
  74          void BEEP_Start(uint16_t _usDelayTime, uint16_t _usBeepTime,
  75                          uint16_t _usStopTime, uint16_t _usCycle) {
  76   1              if (_usBeepTime == 0) {
  77   2                      return;
  78   2              }
  79   1              g_tBeep.usDelayTime = _usDelayTime;
  80   1              g_tBeep.usBeepTime = _usBeepTime;
  81   1              g_tBeep.usStopTime = _usStopTime;
  82   1              g_tBeep.usCycle = _usCycle;
  83   1              g_tBeep.usCount = 0;
  84   1              g_tBeep.usCycleCount = 0;
  85   1              g_tBeep.ucState = 0;
  86   1              g_tBeep.ucEnalbe = 1; /* 设置完全局参数后再使能发声标志 */
  87   1      
  88   1              delay_flag = 1;
  89   1      //      BEEP_ENABLE(); /* 开始发声 */
  90   1      }
  91          
  92          /*
  93           *********************************************************************************************************
  94           *      函 数 名: BEEP_Stop
  95           *      功能说明: 停止蜂鸣音。
  96           *      形    参：无
  97           *      返 回 值: 无
  98           *********************************************************************************************************
  99           */
 100          void BEEP_Stop(void) {
 101   1              g_tBeep.ucEnalbe = 0;
 102   1      
 103   1              BEEP_DISABLE(); /* 必须在清控制标志后再停止发声，避免停止后在中断中又开启 */
 104   1      }
 105          
 106          /*
 107           *********************************************************************************************************
 108           *      函 数 名: BEEP_KeyTone
 109           *      功能说明: 发送按键音
 110           *      形    参：无
 111           *      返 回 值: 无
 112           *********************************************************************************************************
 113           */
 114          void BEEP_KeyTone(void) {
 115   1              BEEP_Start(0, 5, 1, 1); /* 鸣叫50ms，停10ms， 1次 */
C51 COMPILER V9.56.0.0   BSP_BEEP                                                          08/07/2017 21:11:19 PAGE 3   

 116   1      }
 117          
 118          /*
 119           *********************************************************************************************************
 120           *      函 数 名: BEEP_Pro
 121           *      功能说明: 每隔10ms调用1次该函数，用于控制蜂鸣器发声。该函数在 bsp_timer.c 中被调用。
 122           *      形    参：无
 123           *      返 回 值: 无
 124           *********************************************************************************************************
 125           */
 126          void BEEP_Pro(void) {
 127   1              if ((g_tBeep.ucEnalbe == 0) || (g_tBeep.usStopTime == 0)) {
 128   2                      return;
 129   2              }
 130   1              if (g_tBeep.usDelayTime) {
 131   2                      g_tBeep.usDelayTime--;
 132   2                      return;
 133   2              }
 134   1              if (delay_flag) {
 135   2                      delay_flag = 0;
 136   2                      BEEP_ENABLE();
 137   2              }
 138   1      
 139   1              if (g_tBeep.ucState == 0) {
 140   2                      if (g_tBeep.usStopTime > 0) /* 间断发声 */
 141   2                      {
 142   3                              if (++g_tBeep.usCount >= g_tBeep.usBeepTime) {
 143   4                                      BEEP_DISABLE(); /* 停止发声 */
 144   4                                      g_tBeep.usCount = 0;
 145   4                                      g_tBeep.ucState = 1;
 146   4                              }
 147   3                      } else {
 148   3                              ; /* 不做任何处理，连续发声 */
 149   3                      }
 150   2              } else if (g_tBeep.ucState == 1) {
 151   2                      if (++g_tBeep.usCount >= g_tBeep.usStopTime) {
 152   3                              /* 连续发声时，直到调用stop停止为止 */
 153   3                              if (g_tBeep.usCycle > 0) {
 154   4                                      if (++g_tBeep.usCycleCount >= g_tBeep.usCycle) {
 155   5                                              /* 循环次数到，停止发声 */
 156   5                                              g_tBeep.ucEnalbe = 0;
 157   5                                      }
 158   4      
 159   4                                      if (g_tBeep.ucEnalbe == 0) {
 160   5                                              g_tBeep.usStopTime = 0;
 161   5                                              return;
 162   5                                      }
 163   4                              }
 164   3      
 165   3                              g_tBeep.usCount = 0;
 166   3                              g_tBeep.ucState = 0;
 167   3      
 168   3                              BEEP_ENABLE(); /* 开始发声 */
 169   3                      }
 170   2              }
 171   1      }
 172          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    314    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.56.0.0   BSP_BEEP                                                          08/07/2017 21:11:19 PAGE 4   

   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     14    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

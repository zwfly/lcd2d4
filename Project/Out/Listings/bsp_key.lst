C51 COMPILER V9.56.0.0   BSP_KEY                                                           08/16/2017 20:14:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BSP_KEY
OBJECT MODULE PLACED IN .\Out\Objects\bsp_key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_key.lst) OBJEC
                    -T(.\Out\Objects\bsp_key.obj)

line level    source

   1          /*
   2           *********************************************************************************************************
   3           *
   4           *      模块名称 : 独立按键驱动模块
   5           *      文件名称 : bsp_key.c
   6           *      版    本 : V1.0
   7           *      说    明 : 扫描独立按键，具有软件滤波机制，具有按键FIFO。可以检测如下事件：
   8           *                              (1) 按键按下
   9           *                              (2) 按键弹起
  10           *                              (3) 长按键
  11           *                              (4) 长按时自动连发
  12           *
  13           *********************************************************************************************************
  14           */
  15          
  16          #include "bsp.h"
  17          
  18          #define KEY_AD_ERROR 10
  19          
  20          #define S2_AD  980
  21          #define S3_AD  955
  22          #define S4_AD  884
  23          #define S5_AD  0
  24          #define S6_AD  991
  25          #define S7_AD  977
  26          #define S8_AD  952
  27          #define S9_AD  881
  28          
  29          static idata KEY_T s_tBtn[KEY_COUNT];
  30          static idata KEY_FIFO_T s_tKey; /* 按键FIFO变量,结构体 */
  31          
  32          static void bsp_InitKeyVar(void);
  33          static void bsp_InitKeyHard(void);
  34          static void bsp_DetectKey(uint8_t i);
  35          
  36          /*
  37           *********************************************************************************************************
  38           *      函 数 名: IsKeyDownX
  39           *      功能说明: 判断按键是否按下
  40           *      形    参: 无
  41           *      返 回 值: 返回值1 表示按下，0表示未按下
  42           *********************************************************************************************************
  43           */
  44          
  45          //S1
  46          static uint8_t IsKeyDown1(void) {
  47   1              if (P02) {
  48   2                      return 0;
  49   2              } else {
  50   2                      return 1;
  51   2              }
  52   1      }
  53          //CH1, S2 ad = 980
C51 COMPILER V9.56.0.0   BSP_KEY                                                           08/16/2017 20:14:44 PAGE 2   

  54          static uint8_t IsKeyDown2(void) {
  55   1      //      if (g_tADC_Result.result[0]) {
  56   1      //              return 0;
  57   1      //      } else {
  58   1      //              return 1;
  59   1      //      }
  60   1              return 0;
  61   1      }
  62          //CH1, S3 ad = 954
  63          static uint8_t IsKeyDown3(void) {
  64   1      //      if (P05) {
  65   1      //              return 0;
  66   1      //      } else {
  67   1      //              return 1;
  68   1      //      }
  69   1              return 0;
  70   1      }
  71          //CH1, S4 ad = 884
  72          static uint8_t IsKeyDown4(void) {
  73   1      //      if (P06) {
  74   1      //              return 0;
  75   1      //      } else {
  76   1      //              return 1;
  77   1      //      }
  78   1              return 0;
  79   1      }
  80          //CH1, S5 ad = 0
  81          static uint8_t IsKeyDown5(void) {
  82   1      //      if (P55) {
  83   1      //              return 0;
  84   1      //      } else {
  85   1      //              return 1;
  86   1      //      }
  87   1              return 0;
  88   1      }
  89          //CH2, S6 ad = 1020
  90          static uint8_t IsKeyDown6(void) {
  91   1      //      if (P55) {
  92   1      //              return 0;
  93   1      //      } else {
  94   1      //              return 1;
  95   1      //      }
  96   1              return 0;
  97   1      }
  98          //CH2, S7 ad = 1018
  99          static uint8_t IsKeyDown7(void) {
 100   1      //      if (P55) {
 101   1      //              return 0;
 102   1      //      } else {
 103   1      //              return 1;
 104   1      //      }
 105   1              return 0;
 106   1      }
 107          //CH2, S8 ad = 1016
 108          static uint8_t IsKeyDown8(void) {
 109   1      //      if (P55) {
 110   1      //              return 0;
 111   1      //      } else {
 112   1      //              return 1;
 113   1      //      }
 114   1              return 0;
 115   1      }
C51 COMPILER V9.56.0.0   BSP_KEY                                                           08/16/2017 20:14:44 PAGE 3   

 116          //CH2, S9 ad = 1009
 117          static uint8_t IsKeyDown9(void) {
 118   1      //      if (P55) {
 119   1      //              return 0;
 120   1      //      } else {
 121   1      //              return 1;
 122   1      //      }
 123   1              return 0;
 124   1      }
 125          
 126          /*
 127           *********************************************************************************************************
 128           *      函 数 名: bsp_InitKey
 129           *      功能说明: 初始化按键. 该函数被 bsp_Init() 调用。
 130           *      形    参:  无
 131           *      返 回 值: 无
 132           *********************************************************************************************************
 133           */
 134          void bsp_InitKey(void) {
 135   1              bsp_InitKeyVar(); /* 初始化按键变量 */
 136   1              bsp_InitKeyHard(); /* 初始化按键硬件 */
 137   1      }
 138          
 139          /*
 140           *********************************************************************************************************
 141           *      函 数 名: bsp_PutKey
 142           *      功能说明: 将1个键值压入按键FIFO缓冲区。可用于模拟一个按键。
 143           *      形    参:  _KeyCode : 按键代码
 144           *      返 回 值: 无
 145           *********************************************************************************************************
 146           */
 147          void bsp_PutKey(uint8_t _KeyCode) {
 148   1              s_tKey.Buf[s_tKey.Write] = _KeyCode;
 149   1      
 150   1              if (++s_tKey.Write >= KEY_FIFO_SIZE) {
 151   2                      s_tKey.Write = 0;
 152   2              }
 153   1      }
 154          
 155          /*
 156           *********************************************************************************************************
 157           *      函 数 名: bsp_GetKey
 158           *      功能说明: 从按键FIFO缓冲区读取一个键值。
 159           *      形    参:  无
 160           *      返 回 值: 按键代码
 161           *********************************************************************************************************
 162           */
 163          uint8_t bsp_GetKey(void) {
 164   1              uint8_t ret;
 165   1      
 166   1              if (s_tKey.Read == s_tKey.Write) {
 167   2                      return KEY_NONE;
 168   2              } else {
 169   2                      ret = s_tKey.Buf[s_tKey.Read];
 170   2      
 171   2                      if (++s_tKey.Read >= KEY_FIFO_SIZE) {
 172   3                              s_tKey.Read = 0;
 173   3                      }
 174   2                      return ret;
 175   2              }
 176   1      }
 177          
C51 COMPILER V9.56.0.0   BSP_KEY                                                           08/16/2017 20:14:44 PAGE 4   

 178          /*
 179           *********************************************************************************************************
 180           *      函 数 名: bsp_GetKey2
 181           *      功能说明: 从按键FIFO缓冲区读取一个键值。独立的读指针。
 182           *      形    参:  无
 183           *      返 回 值: 按键代码
 184           *********************************************************************************************************
 185           */
 186          uint8_t bsp_GetKey2(void) {
 187   1              uint8_t ret;
 188   1      
 189   1              if (s_tKey.Read2 == s_tKey.Write) {
 190   2                      return KEY_NONE;
 191   2              } else {
 192   2                      ret = s_tKey.Buf[s_tKey.Read2];
 193   2      
 194   2                      if (++s_tKey.Read2 >= KEY_FIFO_SIZE) {
 195   3                              s_tKey.Read2 = 0;
 196   3                      }
 197   2                      return ret;
 198   2              }
 199   1      }
 200          
 201          /*
 202           *********************************************************************************************************
 203           *      函 数 名: bsp_GetKeyState
 204           *      功能说明: 读取按键的状态
 205           *      形    参:  _ucKeyID : 按键ID，从0开始
 206           *      返 回 值: 1 表示按下， 0 表示未按下
 207           *********************************************************************************************************
 208           */
 209          uint8_t bsp_GetKeyState(KEY_ID_E _ucKeyID) {
 210   1              return s_tBtn[_ucKeyID].State;
 211   1      }
 212          
 213          /*
 214           *********************************************************************************************************
 215           *      函 数 名: bsp_SetKeyParam
 216           *      功能说明: 设置按键参数
 217           *      形    参：_ucKeyID : 按键ID，从0开始
 218           *                      _LongTime : 长按事件时间
 219           *                       _RepeatSpeed : 连发速度
 220           *      返 回 值: 无
 221           *********************************************************************************************************
 222           */
 223          void bsp_SetKeyParam(uint8_t _ucKeyID, uint16_t _LongTime, uint8_t _RepeatSpeed) {
 224   1              s_tBtn[_ucKeyID].LongTime = _LongTime; /* 长按时间 0 表示不检测长按键事件 */
 225   1              s_tBtn[_ucKeyID].RepeatSpeed = _RepeatSpeed; /* 按键连发的速度，0表示不支持连发 */
 226   1              s_tBtn[_ucKeyID].RepeatCount = 0; /* 连发计数器 */
 227   1      }
 228          
 229          /*
 230           *********************************************************************************************************
 231           *      函 数 名: bsp_ClearKey
 232           *      功能说明: 清空按键FIFO缓冲区
 233           *      形    参：无
 234           *      返 回 值: 按键代码
 235           *********************************************************************************************************
 236           */
 237          void bsp_ClearKey(void) {
 238   1              s_tKey.Read = s_tKey.Write;
 239   1      }
C51 COMPILER V9.56.0.0   BSP_KEY                                                           08/16/2017 20:14:44 PAGE 5   

 240          
 241          /*
 242           *********************************************************************************************************
 243           *      函 数 名: bsp_InitKeyHard
 244           *      功能说明: 配置按键对应的GPIO
 245           *      形    参:  无
 246           *      返 回 值: 无
 247           *********************************************************************************************************
 248           */
 249          static void bsp_InitKeyHard(void) {
 250   1      
 251   1              set_P0M1_2;
 252   1              clr_P0M2_2;
 253   1      
 254   1      }
 255          
 256          /*
 257           *********************************************************************************************************
 258           *      函 数 名: bsp_InitKeyVar
 259           *      功能说明: 初始化按键变量
 260           *      形    参:  无
 261           *      返 回 值: 无
 262           *********************************************************************************************************
 263           */
 264          static void bsp_InitKeyVar(void) {
 265   1              uint8_t i;
 266   1      
 267   1              /* 对按键FIFO读写指针清零 */
 268   1              s_tKey.Read = 0;
 269   1              s_tKey.Write = 0;
 270   1              s_tKey.Read2 = 0;
 271   1      
 272   1              /* 给每个按键结构体成员变量赋一组缺省值 */
 273   1              for (i = 0; i < KEY_COUNT; i++) {
 274   2                      s_tBtn[i].LongTime = KEY_LONG_TIME; /* 长按时间 0 表示不检测长按键事件 */
 275   2                      s_tBtn[i].Count = KEY_FILTER_TIME / 2; /* 计数器设置为滤波时间的一半 */
 276   2                      s_tBtn[i].State = 0; /* 按键缺省状态，0为未按下 */
 277   2                      //s_tBtn[i].KeyCodeDown = 3 * i + 1;                            /* 按键按下的键值代码 */
 278   2                      //s_tBtn[i].KeyCodeUp   = 3 * i + 2;                            /* 按键弹起的键值代码 */
 279   2                      //s_tBtn[i].KeyCodeLong = 3 * i + 3;                            /* 按键被持续按下的键值代码 */
 280   2                      s_tBtn[i].RepeatSpeed = 0; /* 按键连发的速度，0表示不支持连发 */
 281   2                      s_tBtn[i].RepeatCount = 0; /* 连发计数器 */
 282   2              }
 283   1      
 284   1              /* 判断按键按下的函数 */
 285   1              s_tBtn[0].IsKeyDownFunc = IsKeyDown1;
 286   1              s_tBtn[1].IsKeyDownFunc = IsKeyDown2;
 287   1              s_tBtn[2].IsKeyDownFunc = IsKeyDown3;
 288   1              s_tBtn[3].IsKeyDownFunc = IsKeyDown4;
 289   1              s_tBtn[4].IsKeyDownFunc = IsKeyDown5;
 290   1              s_tBtn[5].IsKeyDownFunc = IsKeyDown6;
 291   1              s_tBtn[6].IsKeyDownFunc = IsKeyDown7;
 292   1              s_tBtn[7].IsKeyDownFunc = IsKeyDown8;
 293   1              s_tBtn[8].IsKeyDownFunc = IsKeyDown9;
 294   1      
 295   1      }
 296          
 297          /*
 298           *********************************************************************************************************
 299           *      函 数 名: bsp_DetectKey
 300           *      功能说明: 检测一个按键。非阻塞状态，必须被周期性的调用。
 301           *      形    参:  按键结构变量指针
C51 COMPILER V9.56.0.0   BSP_KEY                                                           08/16/2017 20:14:44 PAGE 6   

 302           *      返 回 值: 无
 303           *********************************************************************************************************
 304           */
 305          KEY_T *pBtn;
 306          static void bsp_DetectKey(uint8_t i) {
 307   1              pBtn = &s_tBtn[i];
 308   1              if (pBtn->IsKeyDownFunc()) {
 309   2                      if (pBtn->Count < KEY_FILTER_TIME) {
 310   3                              pBtn->Count = KEY_FILTER_TIME;
 311   3                      } else if (pBtn->Count < 2 * KEY_FILTER_TIME) {
 312   3                              pBtn->Count++;
 313   3                      } else {
 314   3                              if (pBtn->State == 0) {
 315   4                                      pBtn->State = 1;
 316   4      
 317   4                                      /* 发送按钮按下的消息 */
 318   4                                      bsp_PutKey((uint8_t) (3 * i + 1));
 319   4                              }
 320   3      
 321   3                              if (pBtn->LongTime > 0) {
 322   4                                      if (pBtn->LongCount < pBtn->LongTime) {
 323   5                                              /* 发送按钮持续按下的消息 */
 324   5                                              if (++pBtn->LongCount == pBtn->LongTime) {
 325   6                                                      /* 键值放入按键FIFO */
 326   6                                                      bsp_PutKey((uint8_t) (3 * i + 3));
 327   6                                              }
 328   5                                      } else {
 329   5                                              if (pBtn->RepeatSpeed > 0) {
 330   6                                                      if (++pBtn->RepeatCount >= pBtn->RepeatSpeed) {
 331   7                                                              pBtn->RepeatCount = 0;
 332   7                                                              /* 常按键后，每隔10ms发送1个按键 */
 333   7                                                              bsp_PutKey((uint8_t) (3 * i + 1));
 334   7                                                      }
 335   6                                              }
 336   5                                      }
 337   4                              }
 338   3                      }
 339   2              } else {
 340   2                      if (pBtn->Count > KEY_FILTER_TIME) {
 341   3                              pBtn->Count = KEY_FILTER_TIME;
 342   3                      } else if (pBtn->Count != 0) {
 343   3                              pBtn->Count--;
 344   3                      } else {
 345   3                              if (pBtn->State == 1) {
 346   4                                      pBtn->State = 0;
 347   4      
 348   4                                      /* 发送按钮弹起的消息 */
 349   4                                      bsp_PutKey((uint8_t) (3 * i + 2));
 350   4                              }
 351   3                      }
 352   2                      pBtn->LongCount = 0;
 353   2                      pBtn->RepeatCount = 0;
 354   2              }
 355   1      }
 356          
 357          /*
 358           *********************************************************************************************************
 359           *      函 数 名: bsp_KeyScan
 360           *      功能说明: 扫描所有按键。非阻塞，被systick中断周期性的调用
 361           *      形    参:  无
 362           *      返 回 值: 无
 363           *********************************************************************************************************
C51 COMPILER V9.56.0.0   BSP_KEY                                                           08/16/2017 20:14:44 PAGE 7   

 364           */
 365          void bsp_KeyScan(void) {
 366   1              uint8_t i;
 367   1      
 368   1              for (i = 0; i < KEY_COUNT; i++) {
 369   2                      bsp_DetectKey(i);
 370   2              }
 371   1      }
 372          
 373          /***************************** (END OF FILE) *********************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    700    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =    112    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
